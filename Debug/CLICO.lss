
CLICO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000013e  00800100  00001f88  0000201c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001f88  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000038  0080023e  0080023e  0000215a  2**0
                  ALLOC
  3 .stab         00002eb0  00000000  00000000  0000215c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000779  00000000  00000000  0000500c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000080  00000000  00000000  00005785  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000324  00000000  00000000  00005805  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001521  00000000  00000000  00005b29  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000616  00000000  00000000  0000704a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001a13  00000000  00000000  00007660  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000170  00000000  00000000  00009074  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000579  00000000  00000000  000091e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000101d  00000000  00000000  0000975d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 00000121  00000000  00000000  0000a77a  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000060  00000000  00000000  0000a89b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__ctors_end>
       4:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
       8:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
       c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      10:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      14:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      18:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      1c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      20:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      24:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      28:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      2c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      30:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      34:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      38:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      3c:	0c 94 f7 01 	jmp	0x3ee	; 0x3ee <__vector_15>
      40:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      44:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      48:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      4c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      50:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      54:	0c 94 e8 03 	jmp	0x7d0	; 0x7d0 <__vector_21>
      58:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      5c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      60:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      64:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      68:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      6c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      70:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      74:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      78:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      7c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      80:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      84:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      88:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>

0000008c <__c.1912>:
      8c:	6e 61 6e 00                                         nan.

00000090 <__c.1910>:
      90:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      a0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      b0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      c0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      d0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      e0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      f0:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     100:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     110:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     120:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     130:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     140:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     150:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     160:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     170:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     180:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000018e <__ctors_end>:
     18e:	11 24       	eor	r1, r1
     190:	1f be       	out	0x3f, r1	; 63
     192:	cf ef       	ldi	r28, 0xFF	; 255
     194:	d0 e1       	ldi	r29, 0x10	; 16
     196:	de bf       	out	0x3e, r29	; 62
     198:	cd bf       	out	0x3d, r28	; 61

0000019a <__do_copy_data>:
     19a:	12 e0       	ldi	r17, 0x02	; 2
     19c:	a0 e0       	ldi	r26, 0x00	; 0
     19e:	b1 e0       	ldi	r27, 0x01	; 1
     1a0:	e8 e8       	ldi	r30, 0x88	; 136
     1a2:	ff e1       	ldi	r31, 0x1F	; 31
     1a4:	00 e0       	ldi	r16, 0x00	; 0
     1a6:	0b bf       	out	0x3b, r16	; 59
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <__do_copy_data+0x14>
     1aa:	07 90       	elpm	r0, Z+
     1ac:	0d 92       	st	X+, r0
     1ae:	ae 33       	cpi	r26, 0x3E	; 62
     1b0:	b1 07       	cpc	r27, r17
     1b2:	d9 f7       	brne	.-10     	; 0x1aa <__do_copy_data+0x10>

000001b4 <__do_clear_bss>:
     1b4:	12 e0       	ldi	r17, 0x02	; 2
     1b6:	ae e3       	ldi	r26, 0x3E	; 62
     1b8:	b2 e0       	ldi	r27, 0x02	; 2
     1ba:	01 c0       	rjmp	.+2      	; 0x1be <.do_clear_bss_start>

000001bc <.do_clear_bss_loop>:
     1bc:	1d 92       	st	X+, r1

000001be <.do_clear_bss_start>:
     1be:	a6 37       	cpi	r26, 0x76	; 118
     1c0:	b1 07       	cpc	r27, r17
     1c2:	e1 f7       	brne	.-8      	; 0x1bc <.do_clear_bss_loop>
     1c4:	0e 94 09 06 	call	0xc12	; 0xc12 <main>
     1c8:	0c 94 c2 0f 	jmp	0x1f84	; 0x1f84 <_exit>

000001cc <__bad_interrupt>:
     1cc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001d0 <LCDBusyLoop>:
	//This function waits till lcd is BUSY

	uint8_t busy,status=0x00,temp;

	//Change Port to input type because we are reading data
	LCD_DATA_DDR&=0xF0;
     1d0:	8a b3       	in	r24, 0x1a	; 26
     1d2:	80 7f       	andi	r24, 0xF0	; 240
     1d4:	8a bb       	out	0x1a, r24	; 26

	//change LCD mode
	SET_RW();		//Read mode
     1d6:	a8 9a       	sbi	0x15, 0	; 21
	CLEAR_RS();		//Read status
     1d8:	a9 98       	cbi	0x15, 1	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1da:	82 e0       	ldi	r24, 0x02	; 2
     1dc:	8a 95       	dec	r24
     1de:	f1 f7       	brne	.-4      	; 0x1dc <LCDBusyLoop+0xc>
     1e0:	00 c0       	rjmp	.+0      	; 0x1e2 <LCDBusyLoop+0x12>

	
	do
	{

		SET_E();
     1e2:	aa 9a       	sbi	0x15, 2	; 21
     1e4:	92 e0       	ldi	r25, 0x02	; 2
     1e6:	9a 95       	dec	r25
     1e8:	f1 f7       	brne	.-4      	; 0x1e6 <LCDBusyLoop+0x16>
     1ea:	00 c0       	rjmp	.+0      	; 0x1ec <LCDBusyLoop+0x1c>

		//Wait tDA for data to become available
		_delay_us(0.5);

		status=LCD_DATA_PIN;
     1ec:	89 b3       	in	r24, 0x19	; 25
		status=status<<4;
     1ee:	82 95       	swap	r24
     1f0:	80 7f       	andi	r24, 0xF0	; 240
     1f2:	92 e0       	ldi	r25, 0x02	; 2
     1f4:	9a 95       	dec	r25
     1f6:	f1 f7       	brne	.-4      	; 0x1f4 <LCDBusyLoop+0x24>
     1f8:	00 c0       	rjmp	.+0      	; 0x1fa <LCDBusyLoop+0x2a>

		_delay_us(0.5);

		//Pull E low
		CLEAR_E();
     1fa:	aa 98       	cbi	0x15, 2	; 21
     1fc:	95 e0       	ldi	r25, 0x05	; 5
     1fe:	9a 95       	dec	r25
     200:	f1 f7       	brne	.-4      	; 0x1fe <LCDBusyLoop+0x2e>
     202:	00 00       	nop
		_delay_us(1);	//tEL

		SET_E();
     204:	aa 9a       	sbi	0x15, 2	; 21
     206:	92 e0       	ldi	r25, 0x02	; 2
     208:	9a 95       	dec	r25
     20a:	f1 f7       	brne	.-4      	; 0x208 <LCDBusyLoop+0x38>
     20c:	00 c0       	rjmp	.+0      	; 0x20e <LCDBusyLoop+0x3e>
		_delay_us(0.5);

		temp=LCD_DATA_PIN;
     20e:	99 b3       	in	r25, 0x19	; 25
     210:	92 e0       	ldi	r25, 0x02	; 2
     212:	9a 95       	dec	r25
     214:	f1 f7       	brne	.-4      	; 0x212 <LCDBusyLoop+0x42>
     216:	00 c0       	rjmp	.+0      	; 0x218 <LCDBusyLoop+0x48>
		status=status|temp;

		busy=status & 0b10000000;

		_delay_us(0.5);
		CLEAR_E();
     218:	aa 98       	cbi	0x15, 2	; 21
     21a:	95 e0       	ldi	r25, 0x05	; 5
     21c:	9a 95       	dec	r25
     21e:	f1 f7       	brne	.-4      	; 0x21c <LCDBusyLoop+0x4c>
     220:	00 00       	nop
		_delay_us(1);	//tEL
	}while(busy);
     222:	87 fd       	sbrc	r24, 7
     224:	de cf       	rjmp	.-68     	; 0x1e2 <LCDBusyLoop+0x12>

	CLEAR_RW();		//write mode
     226:	a8 98       	cbi	0x15, 0	; 21
	//Change Port to output
	LCD_DATA_DDR|=0x0F;
     228:	8a b3       	in	r24, 0x1a	; 26
     22a:	8f 60       	ori	r24, 0x0F	; 15
     22c:	8a bb       	out	0x1a, r24	; 26

}
     22e:	08 95       	ret

00000230 <LCDByte>:
	//NOTE: THIS FUNCTION RETURS ONLY WHEN LCD HAS PROCESSED THE COMMAND

	uint8_t hn,ln;			//Nibbles
	uint8_t temp;

	hn=c>>4;
     230:	28 2f       	mov	r18, r24
     232:	22 95       	swap	r18
     234:	2f 70       	andi	r18, 0x0F	; 15
	ln=(c & 0x0F);
     236:	8f 70       	andi	r24, 0x0F	; 15

	if(isdata==0)
     238:	66 23       	and	r22, r22
     23a:	11 f4       	brne	.+4      	; 0x240 <LCDByte+0x10>
		CLEAR_RS();
     23c:	a9 98       	cbi	0x15, 1	; 21
     23e:	01 c0       	rjmp	.+2      	; 0x242 <LCDByte+0x12>
	else
		SET_RS();
     240:	a9 9a       	sbi	0x15, 1	; 21
     242:	92 e0       	ldi	r25, 0x02	; 2
     244:	9a 95       	dec	r25
     246:	f1 f7       	brne	.-4      	; 0x244 <LCDByte+0x14>
     248:	00 c0       	rjmp	.+0      	; 0x24a <LCDByte+0x1a>

	_delay_us(0.500);		//tAS

	SET_E();
     24a:	aa 9a       	sbi	0x15, 2	; 21

	//Send high nibble

	temp=(LCD_DATA_PORT & 0XF0)|(hn);
     24c:	9b b3       	in	r25, 0x1b	; 27
     24e:	90 7f       	andi	r25, 0xF0	; 240
     250:	92 2b       	or	r25, r18
	LCD_DATA_PORT=temp;
     252:	9b bb       	out	0x1b, r25	; 27
     254:	95 e0       	ldi	r25, 0x05	; 5
     256:	9a 95       	dec	r25
     258:	f1 f7       	brne	.-4      	; 0x256 <LCDByte+0x26>
     25a:	00 00       	nop

	_delay_us(1);			//tEH

	//Now data lines are stable pull E low for transmission

	CLEAR_E();
     25c:	aa 98       	cbi	0x15, 2	; 21
     25e:	95 e0       	ldi	r25, 0x05	; 5
     260:	9a 95       	dec	r25
     262:	f1 f7       	brne	.-4      	; 0x260 <LCDByte+0x30>
     264:	00 00       	nop

	_delay_us(1);

	//Send the lower nibble
	SET_E();
     266:	aa 9a       	sbi	0x15, 2	; 21

	temp=(LCD_DATA_PORT & 0XF0)|(ln);
     268:	9b b3       	in	r25, 0x1b	; 27
     26a:	90 7f       	andi	r25, 0xF0	; 240
     26c:	98 2b       	or	r25, r24

	LCD_DATA_PORT=temp;
     26e:	9b bb       	out	0x1b, r25	; 27
     270:	85 e0       	ldi	r24, 0x05	; 5
     272:	8a 95       	dec	r24
     274:	f1 f7       	brne	.-4      	; 0x272 <LCDByte+0x42>
     276:	00 00       	nop

	_delay_us(1);			//tEH

	//SEND

	CLEAR_E();
     278:	aa 98       	cbi	0x15, 2	; 21
     27a:	95 e0       	ldi	r25, 0x05	; 5
     27c:	9a 95       	dec	r25
     27e:	f1 f7       	brne	.-4      	; 0x27c <LCDByte+0x4c>
     280:	00 00       	nop

	_delay_us(1);			//tEL

	LCDBusyLoop();
     282:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <LCDBusyLoop>
}
     286:	08 95       	ret

00000288 <InitLCD>:
	LCD_DATA_DDR|=0x0F;

}

void InitLCD(uint8_t style)
{
     288:	df 93       	push	r29
     28a:	cf 93       	push	r28
     28c:	0f 92       	push	r0
     28e:	cd b7       	in	r28, 0x3d	; 61
     290:	de b7       	in	r29, 0x3e	; 62
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     292:	2f ef       	ldi	r18, 0xFF	; 255
     294:	36 e7       	ldi	r19, 0x76	; 118
     296:	41 e0       	ldi	r20, 0x01	; 1
     298:	21 50       	subi	r18, 0x01	; 1
     29a:	30 40       	sbci	r19, 0x00	; 0
     29c:	40 40       	sbci	r20, 0x00	; 0
     29e:	e1 f7       	brne	.-8      	; 0x298 <InitLCD+0x10>
     2a0:	00 c0       	rjmp	.+0      	; 0x2a2 <InitLCD+0x1a>
     2a2:	00 00       	nop
	
	//After power on Wait for LCD to Initialize
	_delay_ms(30);
	
	//Set IO Ports
	LCD_DATA_DDR|=(0x0F);
     2a4:	9a b3       	in	r25, 0x1a	; 26
     2a6:	9f 60       	ori	r25, 0x0F	; 15
     2a8:	9a bb       	out	0x1a, r25	; 26
	LCD_E_DDR|=(1<<LCD_E_POS);
     2aa:	a2 9a       	sbi	0x14, 2	; 20
	LCD_RS_DDR|=(1<<LCD_RS_POS);
     2ac:	a1 9a       	sbi	0x14, 1	; 20
	LCD_RW_DDR|=(1<<LCD_RW_POS);
     2ae:	a0 9a       	sbi	0x14, 0	; 20

	LCD_DATA_PORT&=0XF0;
     2b0:	9b b3       	in	r25, 0x1b	; 27
     2b2:	90 7f       	andi	r25, 0xF0	; 240
     2b4:	9b bb       	out	0x1b, r25	; 27
	CLEAR_E();
     2b6:	aa 98       	cbi	0x15, 2	; 21
	CLEAR_RW();
     2b8:	a8 98       	cbi	0x15, 0	; 21
	CLEAR_RS();
     2ba:	a9 98       	cbi	0x15, 1	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2bc:	00 c0       	rjmp	.+0      	; 0x2be <InitLCD+0x36>
     2be:	00 c0       	rjmp	.+0      	; 0x2c0 <InitLCD+0x38>
     2c0:	00 00       	nop

	//Set 4-bit mode
	_delay_us(0.3);	//tAS

	SET_E();
     2c2:	aa 9a       	sbi	0x15, 2	; 21
	LCD_DATA_PORT|=(0b00000010); //[B] To transfer 0b00100000 i was using LCD_DATA_PORT|=0b00100000
     2c4:	d9 9a       	sbi	0x1b, 1	; 27
     2c6:	35 e0       	ldi	r19, 0x05	; 5
     2c8:	3a 95       	dec	r19
     2ca:	f1 f7       	brne	.-4      	; 0x2c8 <InitLCD+0x40>
     2cc:	00 00       	nop
	_delay_us(1);
	CLEAR_E();
     2ce:	aa 98       	cbi	0x15, 2	; 21
     2d0:	45 e0       	ldi	r20, 0x05	; 5
     2d2:	4a 95       	dec	r20
     2d4:	f1 f7       	brne	.-4      	; 0x2d2 <InitLCD+0x4a>
     2d6:	00 00       	nop
	_delay_us(1);
	
	//Wait for LCD to execute the Functionset Command
	LCDBusyLoop();                                    //[B] Forgot this delay
     2d8:	89 83       	std	Y+1, r24	; 0x01
     2da:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <LCDBusyLoop>

	//Now the LCD is in 4-bit mode

	LCDCmd(0b00001100|style);	//Display On
     2de:	89 81       	ldd	r24, Y+1	; 0x01
     2e0:	8c 60       	ori	r24, 0x0C	; 12
     2e2:	60 e0       	ldi	r22, 0x00	; 0
     2e4:	0e 94 18 01 	call	0x230	; 0x230 <LCDByte>
	LCDCmd(0b00101000);			//function set 4-bit,2 line 5x7 dot format
     2e8:	88 e2       	ldi	r24, 0x28	; 40
     2ea:	60 e0       	ldi	r22, 0x00	; 0
     2ec:	0e 94 18 01 	call	0x230	; 0x230 <LCDByte>
}
     2f0:	0f 90       	pop	r0
     2f2:	cf 91       	pop	r28
     2f4:	df 91       	pop	r29
     2f6:	08 95       	ret

000002f8 <LCDWriteString>:
void LCDWriteString(const char *msg)
{
     2f8:	ef 92       	push	r14
     2fa:	ff 92       	push	r15
     2fc:	cf 93       	push	r28
     2fe:	df 93       	push	r29
     300:	e8 2e       	mov	r14, r24
     302:	e7 01       	movw	r28, r14
     304:	7e 01       	movw	r14, r28
     306:	f9 2e       	mov	r15, r25
     308:	e7 01       	movw	r28, r14
	Arguments:
	msg: a null terminated string to print


	*****************************************************************/
 while(*msg!='\0')
     30a:	03 c0       	rjmp	.+6      	; 0x312 <LCDWriteString+0x1a>
 {
	LCDData(*msg);
     30c:	61 e0       	ldi	r22, 0x01	; 1
     30e:	0e 94 18 01 	call	0x230	; 0x230 <LCDByte>
	Arguments:
	msg: a null terminated string to print


	*****************************************************************/
 while(*msg!='\0')
     312:	89 91       	ld	r24, Y+
     314:	88 23       	and	r24, r24
     316:	d1 f7       	brne	.-12     	; 0x30c <LCDWriteString+0x14>
 {
	LCDData(*msg);
	msg++;
 }
}
     318:	df 91       	pop	r29
     31a:	cf 91       	pop	r28
     31c:	ff 90       	pop	r15
     31e:	ef 90       	pop	r14
     320:	08 95       	ret

00000322 <LCDWriteInt>:

void LCDWriteInt(int val,unsigned int field_length)
{
     322:	ef 92       	push	r14
     324:	ff 92       	push	r15
     326:	0f 93       	push	r16
     328:	1f 93       	push	r17
     32a:	df 93       	push	r29
     32c:	cf 93       	push	r28
     32e:	00 d0       	rcall	.+0      	; 0x330 <LCDWriteInt+0xe>
     330:	00 d0       	rcall	.+0      	; 0x332 <LCDWriteInt+0x10>
     332:	0f 92       	push	r0
     334:	cd b7       	in	r28, 0x3d	; 61
     336:	de b7       	in	r29, 0x3e	; 62
     338:	9b 01       	movw	r18, r22
	2)unsigned int field_length :total length of field in which the value is printed
	must be between 1-5 if it is -1 the field length is no of digits in the val

	****************************************************************/

	char str[5]={0,0,0,0,0};
     33a:	fe 01       	movw	r30, r28
     33c:	31 96       	adiw	r30, 0x01	; 1
     33e:	45 e0       	ldi	r20, 0x05	; 5
     340:	df 01       	movw	r26, r30
     342:	1d 92       	st	X+, r1
     344:	4a 95       	dec	r20
     346:	e9 f7       	brne	.-6      	; 0x342 <LCDWriteInt+0x20>
     348:	fe 01       	movw	r30, r28
     34a:	36 96       	adiw	r30, 0x06	; 6
	int i=4,j=0;
	while(val)
	{
	str[i]=val%10;
     34c:	0a e0       	ldi	r16, 0x0A	; 10
     34e:	10 e0       	ldi	r17, 0x00	; 0

	****************************************************************/

	char str[5]={0,0,0,0,0};
	int i=4,j=0;
	while(val)
     350:	05 c0       	rjmp	.+10     	; 0x35c <LCDWriteInt+0x3a>
	{
	str[i]=val%10;
     352:	b8 01       	movw	r22, r16
     354:	0e 94 f3 0d 	call	0x1be6	; 0x1be6 <__divmodhi4>
     358:	82 93       	st	-Z, r24
	val=val/10;
     35a:	cb 01       	movw	r24, r22

	****************************************************************/

	char str[5]={0,0,0,0,0};
	int i=4,j=0;
	while(val)
     35c:	00 97       	sbiw	r24, 0x00	; 0
     35e:	c9 f7       	brne	.-14     	; 0x352 <LCDWriteInt+0x30>
	{
	str[i]=val%10;
	val=val/10;
	i--;
	}
	if(field_length==-1)
     360:	bf ef       	ldi	r27, 0xFF	; 255
     362:	2f 3f       	cpi	r18, 0xFF	; 255
     364:	3b 07       	cpc	r19, r27
     366:	51 f4       	brne	.+20     	; 0x37c <LCDWriteInt+0x5a>
     368:	fe 01       	movw	r30, r28
     36a:	31 96       	adiw	r30, 0x01	; 1
     36c:	80 e0       	ldi	r24, 0x00	; 0
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	01 c0       	rjmp	.+2      	; 0x374 <LCDWriteInt+0x52>
		while(str[j]==0) j++;
     372:	01 96       	adiw	r24, 0x01	; 1
     374:	21 91       	ld	r18, Z+
     376:	22 23       	and	r18, r18
     378:	e1 f3       	breq	.-8      	; 0x372 <LCDWriteInt+0x50>
     37a:	04 c0       	rjmp	.+8      	; 0x384 <LCDWriteInt+0x62>
	else
		j=5-field_length;
     37c:	85 e0       	ldi	r24, 0x05	; 5
     37e:	90 e0       	ldi	r25, 0x00	; 0
     380:	82 1b       	sub	r24, r18
     382:	93 0b       	sbc	r25, r19
	LCDData(*msg);
	msg++;
 }
}

void LCDWriteInt(int val,unsigned int field_length)
     384:	8e 01       	movw	r16, r28
     386:	0f 5f       	subi	r16, 0xFF	; 255
     388:	1f 4f       	sbci	r17, 0xFF	; 255
     38a:	08 0f       	add	r16, r24
     38c:	19 1f       	adc	r17, r25
     38e:	7c 01       	movw	r14, r24
     390:	0a c0       	rjmp	.+20     	; 0x3a6 <LCDWriteInt+0x84>
		j=5-field_length;

	if(val<0) LCDData('-');
	for(i=j;i<5;i++)
	{
	LCDData(48+str[i]);
     392:	f8 01       	movw	r30, r16
     394:	81 91       	ld	r24, Z+
     396:	8f 01       	movw	r16, r30
     398:	80 5d       	subi	r24, 0xD0	; 208
     39a:	61 e0       	ldi	r22, 0x01	; 1
     39c:	0e 94 18 01 	call	0x230	; 0x230 <LCDByte>
		while(str[j]==0) j++;
	else
		j=5-field_length;

	if(val<0) LCDData('-');
	for(i=j;i<5;i++)
     3a0:	08 94       	sec
     3a2:	e1 1c       	adc	r14, r1
     3a4:	f1 1c       	adc	r15, r1
     3a6:	f5 e0       	ldi	r31, 0x05	; 5
     3a8:	ef 16       	cp	r14, r31
     3aa:	f1 04       	cpc	r15, r1
     3ac:	94 f3       	brlt	.-28     	; 0x392 <LCDWriteInt+0x70>
	{
	LCDData(48+str[i]);
	}
}
     3ae:	0f 90       	pop	r0
     3b0:	0f 90       	pop	r0
     3b2:	0f 90       	pop	r0
     3b4:	0f 90       	pop	r0
     3b6:	0f 90       	pop	r0
     3b8:	cf 91       	pop	r28
     3ba:	df 91       	pop	r29
     3bc:	1f 91       	pop	r17
     3be:	0f 91       	pop	r16
     3c0:	ff 90       	pop	r15
     3c2:	ef 90       	pop	r14
     3c4:	08 95       	ret

000003c6 <LCDGotoXY>:
void LCDGotoXY(uint8_t x,uint8_t y)
{
 if(x<40)
     3c6:	88 32       	cpi	r24, 0x28	; 40
     3c8:	30 f4       	brcc	.+12     	; 0x3d6 <LCDGotoXY+0x10>
 {
  if(y) x|=0b01000000;
     3ca:	61 11       	cpse	r22, r1
     3cc:	80 64       	ori	r24, 0x40	; 64
  x|=0b10000000;
  LCDCmd(x);
     3ce:	80 68       	ori	r24, 0x80	; 128
     3d0:	60 e0       	ldi	r22, 0x00	; 0
     3d2:	0e 94 18 01 	call	0x230	; 0x230 <LCDByte>
     3d6:	08 95       	ret

000003d8 <LCDWriteStringXY>:
  }
}

void LCDWriteStringXY(uint8_t x, uint8_t y, const char *msg){
     3d8:	cf 93       	push	r28
     3da:	df 93       	push	r29
     3dc:	ea 01       	movw	r28, r20
	LCDGotoXY(x, y);
     3de:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <LCDGotoXY>
	LCDWriteString(msg);
     3e2:	ce 01       	movw	r24, r28
     3e4:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <LCDWriteString>
}
     3e8:	df 91       	pop	r29
     3ea:	cf 91       	pop	r28
     3ec:	08 95       	ret

000003ee <__vector_15>:
/*******************   Interrupts   *************************/
/************************************************************/


/****************  RealTimeClock Interrupt ******************/
ISR(TIMER0_COMP_vect){
     3ee:	1f 92       	push	r1
     3f0:	0f 92       	push	r0
     3f2:	0f b6       	in	r0, 0x3f	; 63
     3f4:	0f 92       	push	r0
     3f6:	0b b6       	in	r0, 0x3b	; 59
     3f8:	0f 92       	push	r0
     3fa:	11 24       	eor	r1, r1
     3fc:	2f 93       	push	r18
     3fe:	3f 93       	push	r19
     400:	8f 93       	push	r24
     402:	9f 93       	push	r25
     404:	ef 93       	push	r30
     406:	ff 93       	push	r31
	if(bPriLev<PRI_TIMER0)	return;
     408:	80 91 54 02 	lds	r24, 0x0254
     40c:	88 23       	and	r24, r24
     40e:	09 f4       	brne	.+2      	; 0x412 <__vector_15+0x24>
     410:	18 c1       	rjmp	.+560    	; 0x642 <__vector_15+0x254>
	uint8_t bOldPriLev = bPriLev;
     412:	20 91 54 02 	lds	r18, 0x0254
	bPriLev=PRI_TIMER0;
     416:	31 e0       	ldi	r19, 0x01	; 1
     418:	30 93 54 02 	sts	0x0254, r19
	
	bPort = PIND;
     41c:	80 b3       	in	r24, 0x10	; 16
     41e:	80 93 6a 02 	sts	0x026A, r24
	bBtnAPressed = bPort & 0b00000001;		// UP
     422:	80 91 6a 02 	lds	r24, 0x026A
     426:	81 70       	andi	r24, 0x01	; 1
     428:	80 93 69 02 	sts	0x0269, r24
	bBtnBPressed = bPort & 0b00010000;		// DOWN
     42c:	80 91 6a 02 	lds	r24, 0x026A
     430:	80 71       	andi	r24, 0x10	; 16
     432:	80 93 46 02 	sts	0x0246, r24
	bBtnCPressed = bPort & 0b00000010;		// MENU
     436:	80 91 6a 02 	lds	r24, 0x026A
     43a:	82 70       	andi	r24, 0x02	; 2
     43c:	80 93 6c 02 	sts	0x026C, r24
	if(!bBtnCPressed&&(!bInhibite)){  // bBtnXPressed=0  -->bottone x premuto! (collegati a massa)
     440:	80 91 6c 02 	lds	r24, 0x026C
     444:	88 23       	and	r24, r24
     446:	b9 f4       	brne	.+46     	; 0x476 <__vector_15+0x88>
     448:	80 91 6b 02 	lds	r24, 0x026B
     44c:	88 23       	and	r24, r24
     44e:	99 f4       	brne	.+38     	; 0x476 <__vector_15+0x88>
		cIntegrator.wC++;
     450:	80 91 59 02 	lds	r24, 0x0259
     454:	90 91 5a 02 	lds	r25, 0x025A
     458:	01 96       	adiw	r24, 0x01	; 1
     45a:	90 93 5a 02 	sts	0x025A, r25
     45e:	80 93 59 02 	sts	0x0259, r24
		if(cIntegrator.wC>LONG_PRESSION){ bInhibite=1; }
     462:	80 91 59 02 	lds	r24, 0x0259
     466:	90 91 5a 02 	lds	r25, 0x025A
     46a:	85 36       	cpi	r24, 0x65	; 101
     46c:	91 05       	cpc	r25, r1
     46e:	b8 f1       	brcs	.+110    	; 0x4de <__vector_15+0xf0>
     470:	30 93 6b 02 	sts	0x026B, r19
     474:	34 c0       	rjmp	.+104    	; 0x4de <__vector_15+0xf0>
	}
	else{
		if(bBtnCPressed!=0){ bInhibite=0; }
     476:	80 91 6c 02 	lds	r24, 0x026C
     47a:	88 23       	and	r24, r24
     47c:	11 f0       	breq	.+4      	; 0x482 <__vector_15+0x94>
     47e:	10 92 6b 02 	sts	0x026B, r1
		if(cIntegrator.wC<DEBOUNCE_TIME){ cIntegrator.wC=0; }
     482:	80 91 59 02 	lds	r24, 0x0259
     486:	90 91 5a 02 	lds	r25, 0x025A
     48a:	8f 30       	cpi	r24, 0x0F	; 15
     48c:	91 05       	cpc	r25, r1
     48e:	28 f4       	brcc	.+10     	; 0x49a <__vector_15+0xac>
     490:	10 92 5a 02 	sts	0x025A, r1
     494:	10 92 59 02 	sts	0x0259, r1
     498:	22 c0       	rjmp	.+68     	; 0x4de <__vector_15+0xf0>
		else if((cIntegrator.wC>DEBOUNCE_TIME)&&(cIntegrator.wC<LONG_PRESSION)){
     49a:	80 91 59 02 	lds	r24, 0x0259
     49e:	90 91 5a 02 	lds	r25, 0x025A
     4a2:	80 31       	cpi	r24, 0x10	; 16
     4a4:	91 05       	cpc	r25, r1
     4a6:	68 f0       	brcs	.+26     	; 0x4c2 <__vector_15+0xd4>
     4a8:	80 91 59 02 	lds	r24, 0x0259
     4ac:	90 91 5a 02 	lds	r25, 0x025A
     4b0:	84 36       	cpi	r24, 0x64	; 100
     4b2:	91 05       	cpc	r25, r1
     4b4:	30 f4       	brcc	.+12     	; 0x4c2 <__vector_15+0xd4>
		//********* ACTION FOR MENU SHORT CLICK: backlight **************
			cIntegrator.wC=0;
     4b6:	10 92 5a 02 	sts	0x025A, r1
     4ba:	10 92 59 02 	sts	0x0259, r1
			bBtn = BTN_C;
     4be:	86 e0       	ldi	r24, 0x06	; 6
     4c0:	0c c0       	rjmp	.+24     	; 0x4da <__vector_15+0xec>
		}else if(cIntegrator.wC>LONG_PRESSION){
     4c2:	80 91 59 02 	lds	r24, 0x0259
     4c6:	90 91 5a 02 	lds	r25, 0x025A
     4ca:	85 36       	cpi	r24, 0x65	; 101
     4cc:	91 05       	cpc	r25, r1
     4ce:	38 f0       	brcs	.+14     	; 0x4de <__vector_15+0xf0>
		//********* ACTION FOR MENU LONG PRESSION: entering menu  ************
			cIntegrator.wC=0;
     4d0:	10 92 5a 02 	sts	0x025A, r1
     4d4:	10 92 59 02 	sts	0x0259, r1
			bBtn = BTN_C_LONG;
     4d8:	87 e0       	ldi	r24, 0x07	; 7
     4da:	80 93 71 02 	sts	0x0271, r24
		}
	}
	if((bState>0)&&(!bBtnAPressed)){ cIntegrator.wA++; }
     4de:	80 91 3e 02 	lds	r24, 0x023E
     4e2:	88 23       	and	r24, r24
     4e4:	71 f0       	breq	.+28     	; 0x502 <__vector_15+0x114>
     4e6:	80 91 69 02 	lds	r24, 0x0269
     4ea:	88 23       	and	r24, r24
     4ec:	51 f4       	brne	.+20     	; 0x502 <__vector_15+0x114>
     4ee:	80 91 55 02 	lds	r24, 0x0255
     4f2:	90 91 56 02 	lds	r25, 0x0256
     4f6:	01 96       	adiw	r24, 0x01	; 1
     4f8:	90 93 56 02 	sts	0x0256, r25
     4fc:	80 93 55 02 	sts	0x0255, r24
     500:	0e c0       	rjmp	.+28     	; 0x51e <__vector_15+0x130>
	else{
		if(cIntegrator.wA<DEBOUNCE_TIME){ cIntegrator.wA=0; }
     502:	80 91 55 02 	lds	r24, 0x0255
     506:	90 91 56 02 	lds	r25, 0x0256
     50a:	8f 30       	cpi	r24, 0x0F	; 15
     50c:	91 05       	cpc	r25, r1
     50e:	18 f0       	brcs	.+6      	; 0x516 <__vector_15+0x128>
		else{
			bBtn = BTN_A;
     510:	82 e0       	ldi	r24, 0x02	; 2
     512:	80 93 71 02 	sts	0x0271, r24
			cIntegrator.wA=0;
     516:	10 92 56 02 	sts	0x0256, r1
     51a:	10 92 55 02 	sts	0x0255, r1
		}
	}
	
	if((bState>0)&&(!bBtnBPressed)){ cIntegrator.wB++; }
     51e:	80 91 3e 02 	lds	r24, 0x023E
     522:	88 23       	and	r24, r24
     524:	71 f0       	breq	.+28     	; 0x542 <__vector_15+0x154>
     526:	80 91 46 02 	lds	r24, 0x0246
     52a:	88 23       	and	r24, r24
     52c:	51 f4       	brne	.+20     	; 0x542 <__vector_15+0x154>
     52e:	80 91 57 02 	lds	r24, 0x0257
     532:	90 91 58 02 	lds	r25, 0x0258
     536:	01 96       	adiw	r24, 0x01	; 1
     538:	90 93 58 02 	sts	0x0258, r25
     53c:	80 93 57 02 	sts	0x0257, r24
     540:	0e c0       	rjmp	.+28     	; 0x55e <__vector_15+0x170>
	else{
		if(cIntegrator.wB<DEBOUNCE_TIME){ cIntegrator.wB=0; }
     542:	80 91 57 02 	lds	r24, 0x0257
     546:	90 91 58 02 	lds	r25, 0x0258
     54a:	8f 30       	cpi	r24, 0x0F	; 15
     54c:	91 05       	cpc	r25, r1
     54e:	18 f0       	brcs	.+6      	; 0x556 <__vector_15+0x168>
		else{
			bBtn = BTN_B;
     550:	84 e0       	ldi	r24, 0x04	; 4
     552:	80 93 71 02 	sts	0x0271, r24
			cIntegrator.wB=0;
     556:	10 92 58 02 	sts	0x0258, r1
     55a:	10 92 57 02 	sts	0x0257, r1
	}
	
/* ******************* RTC ******************** */	
/* caller=0										*/

	if(tTime.wMilli<99) tTime.wMilli++;
     55e:	80 91 47 02 	lds	r24, 0x0247
     562:	90 91 48 02 	lds	r25, 0x0248
     566:	83 36       	cpi	r24, 0x63	; 99
     568:	91 05       	cpc	r25, r1
     56a:	50 f4       	brcc	.+20     	; 0x580 <__vector_15+0x192>
     56c:	80 91 47 02 	lds	r24, 0x0247
     570:	90 91 48 02 	lds	r25, 0x0248
     574:	01 96       	adiw	r24, 0x01	; 1
     576:	90 93 48 02 	sts	0x0248, r25
     57a:	80 93 47 02 	sts	0x0247, r24
     57e:	58 c0       	rjmp	.+176    	; 0x630 <__vector_15+0x242>
	else{
		tTime.wMilli=0;
     580:	10 92 48 02 	sts	0x0248, r1
     584:	10 92 47 02 	sts	0x0247, r1
		bTimeChanged=1;
     588:	81 e0       	ldi	r24, 0x01	; 1
     58a:	80 93 44 02 	sts	0x0244, r24
		if(tTime.bSec<59) tTime.bSec++;
     58e:	80 91 49 02 	lds	r24, 0x0249
     592:	8b 33       	cpi	r24, 0x3B	; 59
     594:	30 f4       	brcc	.+12     	; 0x5a2 <__vector_15+0x1b4>
     596:	80 91 49 02 	lds	r24, 0x0249
     59a:	8f 5f       	subi	r24, 0xFF	; 255
     59c:	80 93 49 02 	sts	0x0249, r24
     5a0:	47 c0       	rjmp	.+142    	; 0x630 <__vector_15+0x242>
		else{
			tTime.bSec=0;
     5a2:	10 92 49 02 	sts	0x0249, r1
			if(tTime.bMin<59) tTime.bMin++;
     5a6:	80 91 4a 02 	lds	r24, 0x024A
     5aa:	8b 33       	cpi	r24, 0x3B	; 59
     5ac:	30 f4       	brcc	.+12     	; 0x5ba <__vector_15+0x1cc>
     5ae:	80 91 4a 02 	lds	r24, 0x024A
     5b2:	8f 5f       	subi	r24, 0xFF	; 255
     5b4:	80 93 4a 02 	sts	0x024A, r24
     5b8:	3b c0       	rjmp	.+118    	; 0x630 <__vector_15+0x242>
			else{
				tTime.bMin=0;
     5ba:	10 92 4a 02 	sts	0x024A, r1
				if(tTime.bHour<23) tTime.bHour++;
     5be:	80 91 4b 02 	lds	r24, 0x024B
     5c2:	87 31       	cpi	r24, 0x17	; 23
     5c4:	30 f4       	brcc	.+12     	; 0x5d2 <__vector_15+0x1e4>
     5c6:	80 91 4b 02 	lds	r24, 0x024B
     5ca:	8f 5f       	subi	r24, 0xFF	; 255
     5cc:	80 93 4b 02 	sts	0x024B, r24
     5d0:	2f c0       	rjmp	.+94     	; 0x630 <__vector_15+0x242>
				else {
					tTime.bHour=0;
     5d2:	10 92 4b 02 	sts	0x024B, r1
					if(tTime.bDay<aDays[tTime.bMonth]){
     5d6:	90 91 4c 02 	lds	r25, 0x024C
     5da:	e0 91 4d 02 	lds	r30, 0x024D
     5de:	f0 e0       	ldi	r31, 0x00	; 0
     5e0:	e3 58       	subi	r30, 0x83	; 131
     5e2:	fe 4f       	sbci	r31, 0xFE	; 254
     5e4:	80 81       	ld	r24, Z
     5e6:	98 17       	cp	r25, r24
     5e8:	90 f4       	brcc	.+36     	; 0x60e <__vector_15+0x220>
						tTime.bDay++;
     5ea:	80 91 4c 02 	lds	r24, 0x024C
     5ee:	8f 5f       	subi	r24, 0xFF	; 255
     5f0:	80 93 4c 02 	sts	0x024C, r24
						if(tTime.bDay==29 && tTime.bMonth==2 && (!isLeapYear(tTime.bYear))){
     5f4:	80 91 4c 02 	lds	r24, 0x024C
     5f8:	8d 31       	cpi	r24, 0x1D	; 29
     5fa:	d1 f4       	brne	.+52     	; 0x630 <__vector_15+0x242>
     5fc:	80 91 4d 02 	lds	r24, 0x024D
     600:	82 30       	cpi	r24, 0x02	; 2
     602:	b1 f4       	brne	.+44     	; 0x630 <__vector_15+0x242>
     604:	80 91 4e 02 	lds	r24, 0x024E
		LCDWriteStringXY(3,1, temp_str);
	}
}

int isLeapYear(uint8_t year){
	if((year%4)==0) return 1;
     608:	83 70       	andi	r24, 0x03	; 3
     60a:	91 f0       	breq	.+36     	; 0x630 <__vector_15+0x242>
     60c:	14 c0       	rjmp	.+40     	; 0x636 <__vector_15+0x248>
						if(tTime.bDay==29 && tTime.bMonth==2 && (!isLeapYear(tTime.bYear))){
							tTime.bDay=0;
							tTime.bMonth=3;
						}
					}else{
						tTime.bDay=0;
     60e:	10 92 4c 02 	sts	0x024C, r1
						if(tTime.bMonth<12) tTime.bMonth++;
     612:	80 91 4d 02 	lds	r24, 0x024D
     616:	8c 30       	cpi	r24, 0x0C	; 12
     618:	20 f4       	brcc	.+8      	; 0x622 <__vector_15+0x234>
     61a:	80 91 4d 02 	lds	r24, 0x024D
     61e:	8f 5f       	subi	r24, 0xFF	; 255
     620:	0d c0       	rjmp	.+26     	; 0x63c <__vector_15+0x24e>
						else{
							tTime.bMonth=0;
     622:	10 92 4d 02 	sts	0x024D, r1
							tTime.bYear++;
     626:	80 91 4e 02 	lds	r24, 0x024E
     62a:	8f 5f       	subi	r24, 0xFF	; 255
     62c:	80 93 4e 02 	sts	0x024E, r24
					}
				}				
			}
		}
	}
	bPriLev = bOldPriLev;
     630:	20 93 54 02 	sts	0x0254, r18
     634:	06 c0       	rjmp	.+12     	; 0x642 <__vector_15+0x254>
				else {
					tTime.bHour=0;
					if(tTime.bDay<aDays[tTime.bMonth]){
						tTime.bDay++;
						if(tTime.bDay==29 && tTime.bMonth==2 && (!isLeapYear(tTime.bYear))){
							tTime.bDay=0;
     636:	10 92 4c 02 	sts	0x024C, r1
							tTime.bMonth=3;
     63a:	83 e0       	ldi	r24, 0x03	; 3
     63c:	80 93 4d 02 	sts	0x024D, r24
     640:	f7 cf       	rjmp	.-18     	; 0x630 <__vector_15+0x242>
				}				
			}
		}
	}
	bPriLev = bOldPriLev;
}
     642:	ff 91       	pop	r31
     644:	ef 91       	pop	r30
     646:	9f 91       	pop	r25
     648:	8f 91       	pop	r24
     64a:	3f 91       	pop	r19
     64c:	2f 91       	pop	r18
     64e:	0f 90       	pop	r0
     650:	0b be       	out	0x3b, r0	; 59
     652:	0f 90       	pop	r0
     654:	0f be       	out	0x3f, r0	; 63
     656:	0f 90       	pop	r0
     658:	1f 90       	pop	r1
     65a:	18 95       	reti

0000065c <_init>:
/*******************************************************************/
/*******************************************************************/

void _init(){
	/******************* ADC Setup *********************/
	ADCSRA = (1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);		// ADC Prescaler = Fck/128
     65c:	87 e0       	ldi	r24, 0x07	; 7
     65e:	86 b9       	out	0x06, r24	; 6
	//ADMUX = (1<<ADLAR);							// Left-adjusting result
	ADMUX |= (1<<MUX3)|(1<<MUX1)|(1<<MUX0);			// ADC1 (V+) - ADC0 (V-), Gain=200
     660:	87 b1       	in	r24, 0x07	; 7
     662:	8b 60       	ori	r24, 0x0B	; 11
     664:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1<<ADFR)|(1<<ADEN)|(1<<ADIE);		// Free-running mode, enabling ADC and ADC Interrupt
     666:	86 b1       	in	r24, 0x06	; 6
     668:	88 6a       	ori	r24, 0xA8	; 168
     66a:	86 b9       	out	0x06, r24	; 6
	
	
	/******************* PWM Setup *********************/
	DDRB |= (1<<PB7);
     66c:	bf 9a       	sbi	0x17, 7	; 23
	OCR2 = 64;
     66e:	80 e4       	ldi	r24, 0x40	; 64
     670:	83 bd       	out	0x23, r24	; 35
	TCCR2 = (1<<WGM21)|(1<<WGM20)|(1<<COM21)|(1<<CS20)|(1<<CS21);
     672:	8b e6       	ldi	r24, 0x6B	; 107
     674:	85 bd       	out	0x25, r24	; 37
	
	
	/******************* LCD Setup *********************/
	InitLCD(0);
     676:	80 e0       	ldi	r24, 0x00	; 0
     678:	0e 94 44 01 	call	0x288	; 0x288 <InitLCD>
	LCDClear();
     67c:	81 e0       	ldi	r24, 0x01	; 1
     67e:	60 e0       	ldi	r22, 0x00	; 0
     680:	0e 94 18 01 	call	0x230	; 0x230 <LCDByte>
	LCDWriteStringXY(8,0,"00:00:00");
     684:	88 e0       	ldi	r24, 0x08	; 8
     686:	60 e0       	ldi	r22, 0x00	; 0
     688:	40 e0       	ldi	r20, 0x00	; 0
     68a:	51 e0       	ldi	r21, 0x01	; 1
     68c:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <LCDWriteStringXY>
	LCDWriteStringXY(0,1,"T= 0.00");
     690:	80 e0       	ldi	r24, 0x00	; 0
     692:	61 e0       	ldi	r22, 0x01	; 1
     694:	49 e0       	ldi	r20, 0x09	; 9
     696:	51 e0       	ldi	r21, 0x01	; 1
     698:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <LCDWriteStringXY>
	
	
	/******************* RTC Setup *********************/
	TCCR0 |= (1<<CS02)|(1<<CS01)|(1<<CS00);		// clock: F_CPU / 1024
     69c:	83 b7       	in	r24, 0x33	; 51
     69e:	87 60       	ori	r24, 0x07	; 7
     6a0:	83 bf       	out	0x33, r24	; 51
	TCCR0 |= (1<<WGM01)|(0<<WGM00);				// Clear Timer on Compare
     6a2:	83 b7       	in	r24, 0x33	; 51
     6a4:	88 60       	ori	r24, 0x08	; 8
     6a6:	83 bf       	out	0x33, r24	; 51
	TIMSK |= (1<<OCIE0);						// Output compare match interrupt enable
     6a8:	87 b7       	in	r24, 0x37	; 55
     6aa:	82 60       	ori	r24, 0x02	; 2
     6ac:	87 bf       	out	0x37, r24	; 55
	OCR0 = 156;									// Interrupt every 10ms
     6ae:	8c e9       	ldi	r24, 0x9C	; 156
     6b0:	81 bf       	out	0x31, r24	; 49
	
	
	sei();
     6b2:	78 94       	sei
	ADCSRA |= 1<<ADSC;		// ADC Start Conversion
     6b4:	36 9a       	sbi	0x06, 6	; 6
}
     6b6:	08 95       	ret

000006b8 <getTemperature>:


void getTemperature(){
     6b8:	af 92       	push	r10
     6ba:	bf 92       	push	r11
     6bc:	cf 92       	push	r12
     6be:	df 92       	push	r13
     6c0:	ef 92       	push	r14
     6c2:	ff 92       	push	r15
     6c4:	0f 93       	push	r16
     6c6:	1f 93       	push	r17
	cli();				//	togliamo le int durante l'esecuzione di questo codice: operazioni con fp
     6c8:	f8 94       	cli
	dVp = VM + ADC * VREF/(1024*GAIN);
     6ca:	64 b1       	in	r22, 0x04	; 4
     6cc:	75 b1       	in	r23, 0x05	; 5
     6ce:	80 e0       	ldi	r24, 0x00	; 0
     6d0:	90 e0       	ldi	r25, 0x00	; 0
     6d2:	0e 94 f6 0c 	call	0x19ec	; 0x19ec <__floatunsisf>
     6d6:	20 e0       	ldi	r18, 0x00	; 0
     6d8:	30 e0       	ldi	r19, 0x00	; 0
     6da:	40 ea       	ldi	r20, 0xA0	; 160
     6dc:	50 e4       	ldi	r21, 0x40	; 64
     6de:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     6e2:	20 e0       	ldi	r18, 0x00	; 0
     6e4:	30 e0       	ldi	r19, 0x00	; 0
     6e6:	48 e4       	ldi	r20, 0x48	; 72
     6e8:	58 e4       	ldi	r21, 0x48	; 72
     6ea:	0e 94 8e 0c 	call	0x191c	; 0x191c <__divsf3>
     6ee:	20 e0       	ldi	r18, 0x00	; 0
     6f0:	30 e0       	ldi	r19, 0x00	; 0
     6f2:	40 e2       	ldi	r20, 0x20	; 32
     6f4:	50 e4       	ldi	r21, 0x40	; 64
     6f6:	0e 94 2a 0c 	call	0x1854	; 0x1854 <__addsf3>
     6fa:	9b 01       	movw	r18, r22
     6fc:	ac 01       	movw	r20, r24
     6fe:	20 93 6d 02 	sts	0x026D, r18
     702:	30 93 6e 02 	sts	0x026E, r19
     706:	40 93 6f 02 	sts	0x026F, r20
     70a:	50 93 70 02 	sts	0x0270, r21
	dRpt = (dVp*(R1+R2) - VREF*R2)/(VREF - dVp);
     70e:	60 91 6d 02 	lds	r22, 0x026D
     712:	70 91 6e 02 	lds	r23, 0x026E
     716:	80 91 6f 02 	lds	r24, 0x026F
     71a:	90 91 70 02 	lds	r25, 0x0270
     71e:	e0 90 6d 02 	lds	r14, 0x026D
     722:	f0 90 6e 02 	lds	r15, 0x026E
     726:	00 91 6f 02 	lds	r16, 0x026F
     72a:	10 91 70 02 	lds	r17, 0x0270
     72e:	20 e0       	ldi	r18, 0x00	; 0
     730:	30 ec       	ldi	r19, 0xC0	; 192
     732:	4f e0       	ldi	r20, 0x0F	; 15
     734:	55 e4       	ldi	r21, 0x45	; 69
     736:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <__mulsf3>
     73a:	20 e0       	ldi	r18, 0x00	; 0
     73c:	30 ee       	ldi	r19, 0xE0	; 224
     73e:	4b ea       	ldi	r20, 0xAB	; 171
     740:	55 e4       	ldi	r21, 0x45	; 69
     742:	0e 94 29 0c 	call	0x1852	; 0x1852 <__subsf3>
     746:	5b 01       	movw	r10, r22
     748:	6c 01       	movw	r12, r24
     74a:	60 e0       	ldi	r22, 0x00	; 0
     74c:	70 e0       	ldi	r23, 0x00	; 0
     74e:	80 ea       	ldi	r24, 0xA0	; 160
     750:	90 e4       	ldi	r25, 0x40	; 64
     752:	a8 01       	movw	r20, r16
     754:	97 01       	movw	r18, r14
     756:	0e 94 29 0c 	call	0x1852	; 0x1852 <__subsf3>
     75a:	9b 01       	movw	r18, r22
     75c:	ac 01       	movw	r20, r24
     75e:	c6 01       	movw	r24, r12
     760:	b5 01       	movw	r22, r10
     762:	0e 94 8e 0c 	call	0x191c	; 0x191c <__divsf3>
     766:	9b 01       	movw	r18, r22
     768:	ac 01       	movw	r20, r24
     76a:	20 93 3f 02 	sts	0x023F, r18
     76e:	30 93 40 02 	sts	0x0240, r19
     772:	40 93 41 02 	sts	0x0241, r20
     776:	50 93 42 02 	sts	0x0242, r21
	dTemperature = (dRpt-RPT0) / K;
     77a:	60 91 3f 02 	lds	r22, 0x023F
     77e:	70 91 40 02 	lds	r23, 0x0240
     782:	80 91 41 02 	lds	r24, 0x0241
     786:	90 91 42 02 	lds	r25, 0x0242
     78a:	20 e0       	ldi	r18, 0x00	; 0
     78c:	30 e0       	ldi	r19, 0x00	; 0
     78e:	48 ec       	ldi	r20, 0xC8	; 200
     790:	52 e4       	ldi	r21, 0x42	; 66
     792:	0e 94 29 0c 	call	0x1852	; 0x1852 <__subsf3>
     796:	25 ec       	ldi	r18, 0xC5	; 197
     798:	33 e9       	ldi	r19, 0x93	; 147
     79a:	46 ec       	ldi	r20, 0xC6	; 198
     79c:	5e e3       	ldi	r21, 0x3E	; 62
     79e:	0e 94 8e 0c 	call	0x191c	; 0x191c <__divsf3>
     7a2:	9b 01       	movw	r18, r22
     7a4:	ac 01       	movw	r20, r24
     7a6:	20 93 72 02 	sts	0x0272, r18
     7aa:	30 93 73 02 	sts	0x0273, r19
     7ae:	40 93 74 02 	sts	0x0274, r20
     7b2:	50 93 75 02 	sts	0x0275, r21
	bTempChanged=1;
     7b6:	81 e0       	ldi	r24, 0x01	; 1
     7b8:	80 93 45 02 	sts	0x0245, r24
	sei();
     7bc:	78 94       	sei
}
     7be:	1f 91       	pop	r17
     7c0:	0f 91       	pop	r16
     7c2:	ff 90       	pop	r15
     7c4:	ef 90       	pop	r14
     7c6:	df 90       	pop	r13
     7c8:	cf 90       	pop	r12
     7ca:	bf 90       	pop	r11
     7cc:	af 90       	pop	r10
     7ce:	08 95       	ret

000007d0 <__vector_21>:
		}
	}
	bPriLev = bOldPriLev;
}

ISR(ADC_vect){
     7d0:	1f 92       	push	r1
     7d2:	0f 92       	push	r0
     7d4:	0f b6       	in	r0, 0x3f	; 63
     7d6:	0f 92       	push	r0
     7d8:	0b b6       	in	r0, 0x3b	; 59
     7da:	0f 92       	push	r0
     7dc:	11 24       	eor	r1, r1
     7de:	1f 93       	push	r17
     7e0:	2f 93       	push	r18
     7e2:	3f 93       	push	r19
     7e4:	4f 93       	push	r20
     7e6:	5f 93       	push	r21
     7e8:	6f 93       	push	r22
     7ea:	7f 93       	push	r23
     7ec:	8f 93       	push	r24
     7ee:	9f 93       	push	r25
     7f0:	af 93       	push	r26
     7f2:	bf 93       	push	r27
     7f4:	ef 93       	push	r30
     7f6:	ff 93       	push	r31
	if(bPriLev<PRI_ADC) return;
     7f8:	80 91 54 02 	lds	r24, 0x0254
     7fc:	82 30       	cpi	r24, 0x02	; 2
     7fe:	e0 f0       	brcs	.+56     	; 0x838 <__vector_21+0x68>
	uint8_t bOldPriLev = bPriLev;
     800:	10 91 54 02 	lds	r17, 0x0254
	
	if(wCount_adc < 5000){		// to implement: average of values catched, MULTIPLEX for humidity
     804:	80 91 66 02 	lds	r24, 0x0266
     808:	90 91 67 02 	lds	r25, 0x0267
     80c:	23 e1       	ldi	r18, 0x13	; 19
     80e:	88 38       	cpi	r24, 0x88	; 136
     810:	92 07       	cpc	r25, r18
     812:	50 f4       	brcc	.+20     	; 0x828 <__vector_21+0x58>
		wCount_adc++;
     814:	80 91 66 02 	lds	r24, 0x0266
     818:	90 91 67 02 	lds	r25, 0x0267
     81c:	01 96       	adiw	r24, 0x01	; 1
     81e:	90 93 67 02 	sts	0x0267, r25
     822:	80 93 66 02 	sts	0x0266, r24
     826:	06 c0       	rjmp	.+12     	; 0x834 <__vector_21+0x64>
	}else{
		wCount_adc=0;
     828:	10 92 67 02 	sts	0x0267, r1
     82c:	10 92 66 02 	sts	0x0266, r1
		getTemperature();
     830:	0e 94 5c 03 	call	0x6b8	; 0x6b8 <getTemperature>
	}
	bPriLev = bOldPriLev;
     834:	10 93 54 02 	sts	0x0254, r17
}
     838:	ff 91       	pop	r31
     83a:	ef 91       	pop	r30
     83c:	bf 91       	pop	r27
     83e:	af 91       	pop	r26
     840:	9f 91       	pop	r25
     842:	8f 91       	pop	r24
     844:	7f 91       	pop	r23
     846:	6f 91       	pop	r22
     848:	5f 91       	pop	r21
     84a:	4f 91       	pop	r20
     84c:	3f 91       	pop	r19
     84e:	2f 91       	pop	r18
     850:	1f 91       	pop	r17
     852:	0f 90       	pop	r0
     854:	0b be       	out	0x3b, r0	; 59
     856:	0f 90       	pop	r0
     858:	0f be       	out	0x3f, r0	; 63
     85a:	0f 90       	pop	r0
     85c:	1f 90       	pop	r1
     85e:	18 95       	reti

00000860 <writeLCD>:
	bTempChanged=1;
	sei();
}

void writeLCD(int caller){
	if(caller!=bState) return;
     860:	20 91 3e 02 	lds	r18, 0x023E
     864:	30 e0       	ldi	r19, 0x00	; 0
     866:	82 17       	cp	r24, r18
     868:	93 07       	cpc	r25, r19
     86a:	09 f0       	breq	.+2      	; 0x86e <writeLCD+0xe>
     86c:	5f c0       	rjmp	.+190    	; 0x92c <writeLCD+0xcc>
	switch(bState){
     86e:	80 91 3e 02 	lds	r24, 0x023E
     872:	81 30       	cpi	r24, 0x01	; 1
     874:	39 f1       	breq	.+78     	; 0x8c4 <writeLCD+0x64>
     876:	81 30       	cpi	r24, 0x01	; 1
     878:	30 f0       	brcs	.+12     	; 0x886 <writeLCD+0x26>
     87a:	82 30       	cpi	r24, 0x02	; 2
     87c:	61 f1       	breq	.+88     	; 0x8d6 <writeLCD+0x76>
     87e:	83 30       	cpi	r24, 0x03	; 3
     880:	09 f0       	breq	.+2      	; 0x884 <writeLCD+0x24>
     882:	54 c0       	rjmp	.+168    	; 0x92c <writeLCD+0xcc>
     884:	4f c0       	rjmp	.+158    	; 0x924 <writeLCD+0xc4>
	case 0:		// idle/RTC+temp
		cli();
     886:	f8 94       	cli
		LCDClear();
     888:	81 e0       	ldi	r24, 0x01	; 1
     88a:	60 e0       	ldi	r22, 0x00	; 0
     88c:	0e 94 18 01 	call	0x230	; 0x230 <LCDByte>
		LCDCmd(0x0F);
     890:	8f e0       	ldi	r24, 0x0F	; 15
     892:	60 e0       	ldi	r22, 0x00	; 0
     894:	0e 94 18 01 	call	0x230	; 0x230 <LCDByte>
		LCDWriteStringXY(8,0, rtc_str);
     898:	88 e0       	ldi	r24, 0x08	; 8
     89a:	60 e0       	ldi	r22, 0x00	; 0
     89c:	4f e8       	ldi	r20, 0x8F	; 143
     89e:	51 e0       	ldi	r21, 0x01	; 1
     8a0:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <LCDWriteStringXY>
		LCDWriteStringXY(0,1, "T= ");
     8a4:	80 e0       	ldi	r24, 0x00	; 0
     8a6:	61 e0       	ldi	r22, 0x01	; 1
     8a8:	41 e1       	ldi	r20, 0x11	; 17
     8aa:	51 e0       	ldi	r21, 0x01	; 1
     8ac:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <LCDWriteStringXY>
		LCDGotoXY(3,1);
     8b0:	83 e0       	ldi	r24, 0x03	; 3
     8b2:	61 e0       	ldi	r22, 0x01	; 1
     8b4:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <LCDGotoXY>
		LCDWriteString(temp_str);
     8b8:	8a e8       	ldi	r24, 0x8A	; 138
     8ba:	91 e0       	ldi	r25, 0x01	; 1
     8bc:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <LCDWriteString>
		sei();
     8c0:	78 94       	sei
		break;
     8c2:	08 95       	ret
		
	case 1:		// backlight
		LCDClear();
     8c4:	81 e0       	ldi	r24, 0x01	; 1
     8c6:	60 e0       	ldi	r22, 0x00	; 0
     8c8:	0e 94 18 01 	call	0x230	; 0x230 <LCDByte>
		LCDWriteStringXY(0,0, "nothing");
     8cc:	80 e0       	ldi	r24, 0x00	; 0
     8ce:	60 e0       	ldi	r22, 0x00	; 0
     8d0:	45 e1       	ldi	r20, 0x15	; 21
     8d2:	51 e0       	ldi	r21, 0x01	; 1
     8d4:	24 c0       	rjmp	.+72     	; 0x91e <writeLCD+0xbe>
		break;
		
	case 2:		// Main menu
		LCDClear();
     8d6:	81 e0       	ldi	r24, 0x01	; 1
     8d8:	60 e0       	ldi	r22, 0x00	; 0
     8da:	0e 94 18 01 	call	0x230	; 0x230 <LCDByte>
		LCDWriteStringXY(0,0,"-");
     8de:	80 e0       	ldi	r24, 0x00	; 0
     8e0:	60 e0       	ldi	r22, 0x00	; 0
     8e2:	4d e1       	ldi	r20, 0x1D	; 29
     8e4:	51 e0       	ldi	r21, 0x01	; 1
     8e6:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <LCDWriteStringXY>
		LCDWriteStringXY(1,0, options[bSelectionMenu]);
     8ea:	40 91 68 02 	lds	r20, 0x0268
     8ee:	50 e0       	ldi	r21, 0x00	; 0
     8f0:	94 e0       	ldi	r25, 0x04	; 4
     8f2:	44 0f       	add	r20, r20
     8f4:	55 1f       	adc	r21, r21
     8f6:	9a 95       	dec	r25
     8f8:	e1 f7       	brne	.-8      	; 0x8f2 <writeLCD+0x92>
     8fa:	47 56       	subi	r20, 0x67	; 103
     8fc:	5e 4f       	sbci	r21, 0xFE	; 254
     8fe:	81 e0       	ldi	r24, 0x01	; 1
     900:	60 e0       	ldi	r22, 0x00	; 0
     902:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <LCDWriteStringXY>
		LCDWriteStringXY(1,1, options[bSelectionMenu+1]);
     906:	40 91 68 02 	lds	r20, 0x0268
     90a:	50 e0       	ldi	r21, 0x00	; 0
     90c:	84 e0       	ldi	r24, 0x04	; 4
     90e:	44 0f       	add	r20, r20
     910:	55 1f       	adc	r21, r21
     912:	8a 95       	dec	r24
     914:	e1 f7       	brne	.-8      	; 0x90e <writeLCD+0xae>
     916:	47 55       	subi	r20, 0x57	; 87
     918:	5e 4f       	sbci	r21, 0xFE	; 254
     91a:	81 e0       	ldi	r24, 0x01	; 1
     91c:	61 e0       	ldi	r22, 0x01	; 1
     91e:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <LCDWriteStringXY>
		break;
     922:	08 95       	ret
	case 3:
		LCDClear();
     924:	81 e0       	ldi	r24, 0x01	; 1
     926:	60 e0       	ldi	r22, 0x00	; 0
     928:	0e 94 18 01 	call	0x230	; 0x230 <LCDByte>
     92c:	08 95       	ret

0000092e <refreshQuote>:
		break;
	}
}


void refreshQuote(){
     92e:	cf 93       	push	r28
     930:	df 93       	push	r29
	if(!bTimeChanged){ NULL; }
     932:	80 91 44 02 	lds	r24, 0x0244
     936:	88 23       	and	r24, r24
     938:	d1 f1       	breq	.+116    	; 0x9ae <refreshQuote+0x80>
	else{
		bTimeChanged=0;
     93a:	10 92 44 02 	sts	0x0244, r1
		sprintf(rtc_str, "%02d:%02d:%02d ", tTime.bHour, tTime.bMin, tTime.bSec);
     93e:	40 91 4b 02 	lds	r20, 0x024B
     942:	30 91 4a 02 	lds	r19, 0x024A
     946:	20 91 49 02 	lds	r18, 0x0249
     94a:	8d b7       	in	r24, 0x3d	; 61
     94c:	9e b7       	in	r25, 0x3e	; 62
     94e:	0a 97       	sbiw	r24, 0x0a	; 10
     950:	0f b6       	in	r0, 0x3f	; 63
     952:	f8 94       	cli
     954:	9e bf       	out	0x3e, r25	; 62
     956:	0f be       	out	0x3f, r0	; 63
     958:	8d bf       	out	0x3d, r24	; 61
     95a:	ed b7       	in	r30, 0x3d	; 61
     95c:	fe b7       	in	r31, 0x3e	; 62
     95e:	31 96       	adiw	r30, 0x01	; 1
     960:	cf e8       	ldi	r28, 0x8F	; 143
     962:	d1 e0       	ldi	r29, 0x01	; 1
     964:	ad b7       	in	r26, 0x3d	; 61
     966:	be b7       	in	r27, 0x3e	; 62
     968:	12 96       	adiw	r26, 0x02	; 2
     96a:	dc 93       	st	X, r29
     96c:	ce 93       	st	-X, r28
     96e:	11 97       	sbiw	r26, 0x01	; 1
     970:	8f e1       	ldi	r24, 0x1F	; 31
     972:	91 e0       	ldi	r25, 0x01	; 1
     974:	93 83       	std	Z+3, r25	; 0x03
     976:	82 83       	std	Z+2, r24	; 0x02
     978:	44 83       	std	Z+4, r20	; 0x04
     97a:	15 82       	std	Z+5, r1	; 0x05
     97c:	36 83       	std	Z+6, r19	; 0x06
     97e:	17 82       	std	Z+7, r1	; 0x07
     980:	20 87       	std	Z+8, r18	; 0x08
     982:	11 86       	std	Z+9, r1	; 0x09
     984:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <sprintf>
		LCDWriteStringXY(0,0,"        ");
     988:	ed b7       	in	r30, 0x3d	; 61
     98a:	fe b7       	in	r31, 0x3e	; 62
     98c:	3a 96       	adiw	r30, 0x0a	; 10
     98e:	0f b6       	in	r0, 0x3f	; 63
     990:	f8 94       	cli
     992:	fe bf       	out	0x3e, r31	; 62
     994:	0f be       	out	0x3f, r0	; 63
     996:	ed bf       	out	0x3d, r30	; 61
     998:	80 e0       	ldi	r24, 0x00	; 0
     99a:	60 e0       	ldi	r22, 0x00	; 0
     99c:	4f e2       	ldi	r20, 0x2F	; 47
     99e:	51 e0       	ldi	r21, 0x01	; 1
     9a0:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <LCDWriteStringXY>
		LCDWriteStringXY(8,0,rtc_str);
     9a4:	88 e0       	ldi	r24, 0x08	; 8
     9a6:	60 e0       	ldi	r22, 0x00	; 0
     9a8:	ae 01       	movw	r20, r28
     9aa:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <LCDWriteStringXY>
	}
	if(!bTempChanged){ NULL; }
     9ae:	80 91 45 02 	lds	r24, 0x0245
     9b2:	88 23       	and	r24, r24
     9b4:	e1 f1       	breq	.+120    	; 0xa2e <refreshQuote+0x100>
	else{
		bTempChanged=0;
     9b6:	10 92 45 02 	sts	0x0245, r1
		sprintf(temp_str, "%05.2f", dTemperature);		// float printed with 5 digits (dot included), 2 of which are decimal, zero padded
     9ba:	80 91 72 02 	lds	r24, 0x0272
     9be:	90 91 73 02 	lds	r25, 0x0273
     9c2:	a0 91 74 02 	lds	r26, 0x0274
     9c6:	b0 91 75 02 	lds	r27, 0x0275
     9ca:	2d b7       	in	r18, 0x3d	; 61
     9cc:	3e b7       	in	r19, 0x3e	; 62
     9ce:	28 50       	subi	r18, 0x08	; 8
     9d0:	30 40       	sbci	r19, 0x00	; 0
     9d2:	0f b6       	in	r0, 0x3f	; 63
     9d4:	f8 94       	cli
     9d6:	3e bf       	out	0x3e, r19	; 62
     9d8:	0f be       	out	0x3f, r0	; 63
     9da:	2d bf       	out	0x3d, r18	; 61
     9dc:	4d b7       	in	r20, 0x3d	; 61
     9de:	5e b7       	in	r21, 0x3e	; 62
     9e0:	4f 5f       	subi	r20, 0xFF	; 255
     9e2:	5f 4f       	sbci	r21, 0xFF	; 255
     9e4:	ca e8       	ldi	r28, 0x8A	; 138
     9e6:	d1 e0       	ldi	r29, 0x01	; 1
     9e8:	ed b7       	in	r30, 0x3d	; 61
     9ea:	fe b7       	in	r31, 0x3e	; 62
     9ec:	d2 83       	std	Z+2, r29	; 0x02
     9ee:	c1 83       	std	Z+1, r28	; 0x01
     9f0:	28 e3       	ldi	r18, 0x38	; 56
     9f2:	31 e0       	ldi	r19, 0x01	; 1
     9f4:	fa 01       	movw	r30, r20
     9f6:	33 83       	std	Z+3, r19	; 0x03
     9f8:	22 83       	std	Z+2, r18	; 0x02
     9fa:	84 83       	std	Z+4, r24	; 0x04
     9fc:	95 83       	std	Z+5, r25	; 0x05
     9fe:	a6 83       	std	Z+6, r26	; 0x06
     a00:	b7 83       	std	Z+7, r27	; 0x07
     a02:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <sprintf>
		LCDWriteStringXY(0,1, "T= ");
     a06:	2d b7       	in	r18, 0x3d	; 61
     a08:	3e b7       	in	r19, 0x3e	; 62
     a0a:	28 5f       	subi	r18, 0xF8	; 248
     a0c:	3f 4f       	sbci	r19, 0xFF	; 255
     a0e:	0f b6       	in	r0, 0x3f	; 63
     a10:	f8 94       	cli
     a12:	3e bf       	out	0x3e, r19	; 62
     a14:	0f be       	out	0x3f, r0	; 63
     a16:	2d bf       	out	0x3d, r18	; 61
     a18:	80 e0       	ldi	r24, 0x00	; 0
     a1a:	61 e0       	ldi	r22, 0x01	; 1
     a1c:	41 e1       	ldi	r20, 0x11	; 17
     a1e:	51 e0       	ldi	r21, 0x01	; 1
     a20:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <LCDWriteStringXY>
		LCDWriteStringXY(3,1, temp_str);
     a24:	83 e0       	ldi	r24, 0x03	; 3
     a26:	61 e0       	ldi	r22, 0x01	; 1
     a28:	ae 01       	movw	r20, r28
     a2a:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <LCDWriteStringXY>
	}
}
     a2e:	df 91       	pop	r29
     a30:	cf 91       	pop	r28
     a32:	08 95       	ret

00000a34 <isLeapYear>:

int isLeapYear(uint8_t year){
	if((year%4)==0) return 1;
     a34:	83 70       	andi	r24, 0x03	; 3
     a36:	21 e0       	ldi	r18, 0x01	; 1
     a38:	30 e0       	ldi	r19, 0x00	; 0
     a3a:	11 f0       	breq	.+4      	; 0xa40 <isLeapYear+0xc>
     a3c:	20 e0       	ldi	r18, 0x00	; 0
     a3e:	30 e0       	ldi	r19, 0x00	; 0
	return 0;
}
     a40:	c9 01       	movw	r24, r18
     a42:	08 95       	ret

00000a44 <changeEditTime>:

void changeEditTime(uint8_t bPosition, uint8_t bButton){
     a44:	98 2f       	mov	r25, r24
     a46:	46 2f       	mov	r20, r22
	int bMunita;
	int bMdecine;
	int bSunita;
	int bSdecine;
	
	bHunita = tTimeEditing.bHour % 10;
     a48:	30 91 62 02 	lds	r19, 0x0262
	bHdecine = tTimeEditing.bHour / 10;
     a4c:	a0 91 62 02 	lds	r26, 0x0262
	bMunita = tTimeEditing.bMin % 10;
     a50:	80 91 61 02 	lds	r24, 0x0261
	bMdecine = tTimeEditing.bMin / 10;
     a54:	f0 91 61 02 	lds	r31, 0x0261
	bSunita = tTimeEditing.bSec % 10;
     a58:	20 91 60 02 	lds	r18, 0x0260
	bSdecine = tTimeEditing.bSec / 10;
     a5c:	e0 91 60 02 	lds	r30, 0x0260
		
	switch(bPosition){
     a60:	93 30       	cpi	r25, 0x03	; 3
     a62:	09 f4       	brne	.+2      	; 0xa66 <changeEditTime+0x22>
     a64:	59 c0       	rjmp	.+178    	; 0xb18 <changeEditTime+0xd4>
     a66:	94 30       	cpi	r25, 0x04	; 4
     a68:	30 f4       	brcc	.+12     	; 0xa76 <changeEditTime+0x32>
     a6a:	99 23       	and	r25, r25
     a6c:	71 f0       	breq	.+28     	; 0xa8a <changeEditTime+0x46>
     a6e:	91 30       	cpi	r25, 0x01	; 1
     a70:	09 f0       	breq	.+2      	; 0xa74 <changeEditTime+0x30>
     a72:	ce c0       	rjmp	.+412    	; 0xc10 <changeEditTime+0x1cc>
     a74:	23 c0       	rjmp	.+70     	; 0xabc <changeEditTime+0x78>
     a76:	96 30       	cpi	r25, 0x06	; 6
     a78:	09 f4       	brne	.+2      	; 0xa7c <changeEditTime+0x38>
     a7a:	8b c0       	rjmp	.+278    	; 0xb92 <changeEditTime+0x14e>
     a7c:	97 30       	cpi	r25, 0x07	; 7
     a7e:	09 f4       	brne	.+2      	; 0xa82 <changeEditTime+0x3e>
     a80:	9e c0       	rjmp	.+316    	; 0xbbe <changeEditTime+0x17a>
     a82:	94 30       	cpi	r25, 0x04	; 4
     a84:	09 f0       	breq	.+2      	; 0xa88 <changeEditTime+0x44>
     a86:	c4 c0       	rjmp	.+392    	; 0xc10 <changeEditTime+0x1cc>
     a88:	60 c0       	rjmp	.+192    	; 0xb4a <changeEditTime+0x106>
				tTimeEditing.bHour += 10;
			}else if(bButton==BTN_B && tTimeEditing.bHour>9){
				tTimeEditing.bHour -= 10;
			}else{ NULL; }*/
			
			;EDIT_TIME(0,BTN_A,BTN_B,bButton, tTimeEditing.bHour, bHdecine, bHunita, 2,3)
     a8a:	62 30       	cpi	r22, 0x02	; 2
     a8c:	49 f4       	brne	.+18     	; 0xaa0 <changeEditTime+0x5c>
     a8e:	80 91 62 02 	lds	r24, 0x0262
     a92:	83 31       	cpi	r24, 0x13	; 19
     a94:	08 f0       	brcs	.+2      	; 0xa98 <changeEditTime+0x54>
     a96:	bc c0       	rjmp	.+376    	; 0xc10 <changeEditTime+0x1cc>
     a98:	80 91 62 02 	lds	r24, 0x0262
     a9c:	86 5f       	subi	r24, 0xF6	; 246
     a9e:	0b c0       	rjmp	.+22     	; 0xab6 <changeEditTime+0x72>
     aa0:	64 30       	cpi	r22, 0x04	; 4
     aa2:	09 f0       	breq	.+2      	; 0xaa6 <changeEditTime+0x62>
     aa4:	b5 c0       	rjmp	.+362    	; 0xc10 <changeEditTime+0x1cc>
     aa6:	80 91 62 02 	lds	r24, 0x0262
     aaa:	8a 30       	cpi	r24, 0x0A	; 10
     aac:	08 f4       	brcc	.+2      	; 0xab0 <changeEditTime+0x6c>
     aae:	b0 c0       	rjmp	.+352    	; 0xc10 <changeEditTime+0x1cc>
     ab0:	80 91 62 02 	lds	r24, 0x0262
     ab4:	8a 50       	subi	r24, 0x0A	; 10
     ab6:	80 93 62 02 	sts	0x0262, r24
     aba:	08 95       	ret
	int bMunita;
	int bMdecine;
	int bSunita;
	int bSdecine;
	
	bHunita = tTimeEditing.bHour % 10;
     abc:	5a e0       	ldi	r21, 0x0A	; 10
     abe:	83 2f       	mov	r24, r19
     ac0:	65 2f       	mov	r22, r21
     ac2:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <__udivmodqi4>
     ac6:	29 2f       	mov	r18, r25
     ac8:	30 e0       	ldi	r19, 0x00	; 0
	bHdecine = tTimeEditing.bHour / 10;
     aca:	8a 2f       	mov	r24, r26
     acc:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <__udivmodqi4>
			}else{ NULL; }*/
			
			;EDIT_TIME(0,BTN_A,BTN_B,bButton, tTimeEditing.bHour, bHdecine, bHunita, 2,3)
			break;
		case 1:
			;EDIT_TIME(1,BTN_A,BTN_B,bButton, tTimeEditing.bHour, bHdecine, bHunita, 2,3)
     ad0:	42 30       	cpi	r20, 0x02	; 2
     ad2:	81 f4       	brne	.+32     	; 0xaf4 <changeEditTime+0xb0>
     ad4:	23 30       	cpi	r18, 0x03	; 3
     ad6:	31 05       	cpc	r19, r1
     ad8:	54 f0       	brlt	.+20     	; 0xaee <changeEditTime+0xaa>
	int bMdecine;
	int bSunita;
	int bSdecine;
	
	bHunita = tTimeEditing.bHour % 10;
	bHdecine = tTimeEditing.bHour / 10;
     ada:	48 2f       	mov	r20, r24
     adc:	50 e0       	ldi	r21, 0x00	; 0
			}else{ NULL; }*/
			
			;EDIT_TIME(0,BTN_A,BTN_B,bButton, tTimeEditing.bHour, bHdecine, bHunita, 2,3)
			break;
		case 1:
			;EDIT_TIME(1,BTN_A,BTN_B,bButton, tTimeEditing.bHour, bHdecine, bHunita, 2,3)
     ade:	42 30       	cpi	r20, 0x02	; 2
     ae0:	51 05       	cpc	r21, r1
     ae2:	0c f0       	brlt	.+2      	; 0xae6 <changeEditTime+0xa2>
     ae4:	95 c0       	rjmp	.+298    	; 0xc10 <changeEditTime+0x1cc>
     ae6:	29 30       	cpi	r18, 0x09	; 9
     ae8:	31 05       	cpc	r19, r1
     aea:	09 f4       	brne	.+2      	; 0xaee <changeEditTime+0xaa>
     aec:	91 c0       	rjmp	.+290    	; 0xc10 <changeEditTime+0x1cc>
     aee:	2f 5f       	subi	r18, 0xFF	; 255
     af0:	3f 4f       	sbci	r19, 0xFF	; 255
     af2:	09 c0       	rjmp	.+18     	; 0xb06 <changeEditTime+0xc2>
     af4:	44 30       	cpi	r20, 0x04	; 4
     af6:	09 f0       	breq	.+2      	; 0xafa <changeEditTime+0xb6>
     af8:	8b c0       	rjmp	.+278    	; 0xc10 <changeEditTime+0x1cc>
     afa:	21 15       	cp	r18, r1
     afc:	31 05       	cpc	r19, r1
     afe:	09 f4       	brne	.+2      	; 0xb02 <changeEditTime+0xbe>
     b00:	87 c0       	rjmp	.+270    	; 0xc10 <changeEditTime+0x1cc>
     b02:	21 50       	subi	r18, 0x01	; 1
     b04:	30 40       	sbci	r19, 0x00	; 0
     b06:	88 0f       	add	r24, r24
     b08:	98 2f       	mov	r25, r24
     b0a:	99 0f       	add	r25, r25
     b0c:	99 0f       	add	r25, r25
     b0e:	98 0f       	add	r25, r24
     b10:	92 0f       	add	r25, r18
     b12:	90 93 62 02 	sts	0x0262, r25
     b16:	08 95       	ret
			break;
		case 3:
			;EDIT_TIME(0,BTN_A,BTN_B,bButton, tTimeEditing.bMin, bMdecine, bMunita, 5,9)
     b18:	62 30       	cpi	r22, 0x02	; 2
     b1a:	49 f4       	brne	.+18     	; 0xb2e <changeEditTime+0xea>
     b1c:	80 91 61 02 	lds	r24, 0x0261
     b20:	81 33       	cpi	r24, 0x31	; 49
     b22:	08 f0       	brcs	.+2      	; 0xb26 <changeEditTime+0xe2>
     b24:	75 c0       	rjmp	.+234    	; 0xc10 <changeEditTime+0x1cc>
     b26:	80 91 61 02 	lds	r24, 0x0261
     b2a:	86 5f       	subi	r24, 0xF6	; 246
     b2c:	0b c0       	rjmp	.+22     	; 0xb44 <changeEditTime+0x100>
     b2e:	64 30       	cpi	r22, 0x04	; 4
     b30:	09 f0       	breq	.+2      	; 0xb34 <changeEditTime+0xf0>
     b32:	6e c0       	rjmp	.+220    	; 0xc10 <changeEditTime+0x1cc>
     b34:	80 91 61 02 	lds	r24, 0x0261
     b38:	8a 30       	cpi	r24, 0x0A	; 10
     b3a:	08 f4       	brcc	.+2      	; 0xb3e <changeEditTime+0xfa>
     b3c:	69 c0       	rjmp	.+210    	; 0xc10 <changeEditTime+0x1cc>
     b3e:	80 91 61 02 	lds	r24, 0x0261
     b42:	8a 50       	subi	r24, 0x0A	; 10
     b44:	80 93 61 02 	sts	0x0261, r24
     b48:	08 95       	ret
	int bSunita;
	int bSdecine;
	
	bHunita = tTimeEditing.bHour % 10;
	bHdecine = tTimeEditing.bHour / 10;
	bMunita = tTimeEditing.bMin % 10;
     b4a:	5a e0       	ldi	r21, 0x0A	; 10
     b4c:	65 2f       	mov	r22, r21
     b4e:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <__udivmodqi4>
     b52:	29 2f       	mov	r18, r25
     b54:	30 e0       	ldi	r19, 0x00	; 0
	bMdecine = tTimeEditing.bMin / 10;
     b56:	8f 2f       	mov	r24, r31
     b58:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <__udivmodqi4>
			break;
		case 3:
			;EDIT_TIME(0,BTN_A,BTN_B,bButton, tTimeEditing.bMin, bMdecine, bMunita, 5,9)
			break;
		case 4:
			;EDIT_TIME(1,BTN_A,BTN_B,bButton, tTimeEditing.bMin, bMdecine, bMunita, 5,9)
     b5c:	42 30       	cpi	r20, 0x02	; 2
     b5e:	39 f4       	brne	.+14     	; 0xb6e <changeEditTime+0x12a>
     b60:	29 30       	cpi	r18, 0x09	; 9
     b62:	31 05       	cpc	r19, r1
     b64:	09 f4       	brne	.+2      	; 0xb68 <changeEditTime+0x124>
     b66:	54 c0       	rjmp	.+168    	; 0xc10 <changeEditTime+0x1cc>
     b68:	2f 5f       	subi	r18, 0xFF	; 255
     b6a:	3f 4f       	sbci	r19, 0xFF	; 255
     b6c:	09 c0       	rjmp	.+18     	; 0xb80 <changeEditTime+0x13c>
     b6e:	44 30       	cpi	r20, 0x04	; 4
     b70:	09 f0       	breq	.+2      	; 0xb74 <changeEditTime+0x130>
     b72:	4e c0       	rjmp	.+156    	; 0xc10 <changeEditTime+0x1cc>
     b74:	21 15       	cp	r18, r1
     b76:	31 05       	cpc	r19, r1
     b78:	09 f4       	brne	.+2      	; 0xb7c <changeEditTime+0x138>
     b7a:	4a c0       	rjmp	.+148    	; 0xc10 <changeEditTime+0x1cc>
     b7c:	21 50       	subi	r18, 0x01	; 1
     b7e:	30 40       	sbci	r19, 0x00	; 0
     b80:	88 0f       	add	r24, r24
     b82:	98 2f       	mov	r25, r24
     b84:	99 0f       	add	r25, r25
     b86:	99 0f       	add	r25, r25
     b88:	98 0f       	add	r25, r24
     b8a:	92 0f       	add	r25, r18
     b8c:	90 93 61 02 	sts	0x0261, r25
     b90:	08 95       	ret
			break;
		case 6:
			;EDIT_TIME(0,BTN_A,BTN_B,bButton, tTimeEditing.bSec, bSdecine, bSunita, 5,9)
     b92:	62 30       	cpi	r22, 0x02	; 2
     b94:	41 f4       	brne	.+16     	; 0xba6 <changeEditTime+0x162>
     b96:	80 91 60 02 	lds	r24, 0x0260
     b9a:	81 33       	cpi	r24, 0x31	; 49
     b9c:	c8 f5       	brcc	.+114    	; 0xc10 <changeEditTime+0x1cc>
     b9e:	80 91 60 02 	lds	r24, 0x0260
     ba2:	86 5f       	subi	r24, 0xF6	; 246
     ba4:	09 c0       	rjmp	.+18     	; 0xbb8 <changeEditTime+0x174>
     ba6:	64 30       	cpi	r22, 0x04	; 4
     ba8:	99 f5       	brne	.+102    	; 0xc10 <changeEditTime+0x1cc>
     baa:	80 91 60 02 	lds	r24, 0x0260
     bae:	8a 30       	cpi	r24, 0x0A	; 10
     bb0:	78 f1       	brcs	.+94     	; 0xc10 <changeEditTime+0x1cc>
     bb2:	80 91 60 02 	lds	r24, 0x0260
     bb6:	8a 50       	subi	r24, 0x0A	; 10
     bb8:	80 93 60 02 	sts	0x0260, r24
     bbc:	08 95       	ret
	
	bHunita = tTimeEditing.bHour % 10;
	bHdecine = tTimeEditing.bHour / 10;
	bMunita = tTimeEditing.bMin % 10;
	bMdecine = tTimeEditing.bMin / 10;
	bSunita = tTimeEditing.bSec % 10;
     bbe:	5a e0       	ldi	r21, 0x0A	; 10
     bc0:	82 2f       	mov	r24, r18
     bc2:	65 2f       	mov	r22, r21
     bc4:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <__udivmodqi4>
     bc8:	29 2f       	mov	r18, r25
     bca:	30 e0       	ldi	r19, 0x00	; 0
	bSdecine = tTimeEditing.bSec / 10;
     bcc:	8e 2f       	mov	r24, r30
     bce:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <__udivmodqi4>
			break;
		case 6:
			;EDIT_TIME(0,BTN_A,BTN_B,bButton, tTimeEditing.bSec, bSdecine, bSunita, 5,9)
			break;
		case 7:
			;EDIT_TIME(1,BTN_A,BTN_B,bButton, tTimeEditing.bSec, bSdecine, bSunita, 5,9)
     bd2:	42 30       	cpi	r20, 0x02	; 2
     bd4:	71 f4       	brne	.+28     	; 0xbf2 <changeEditTime+0x1ae>
     bd6:	29 30       	cpi	r18, 0x09	; 9
     bd8:	31 05       	cpc	r19, r1
     bda:	d1 f0       	breq	.+52     	; 0xc10 <changeEditTime+0x1cc>
     bdc:	2f 5f       	subi	r18, 0xFF	; 255
     bde:	3f 4f       	sbci	r19, 0xFF	; 255
     be0:	88 0f       	add	r24, r24
     be2:	98 2f       	mov	r25, r24
     be4:	99 0f       	add	r25, r25
     be6:	99 0f       	add	r25, r25
     be8:	98 0f       	add	r25, r24
     bea:	92 0f       	add	r25, r18
     bec:	90 93 60 02 	sts	0x0260, r25
     bf0:	08 95       	ret
     bf2:	44 30       	cpi	r20, 0x04	; 4
     bf4:	69 f4       	brne	.+26     	; 0xc10 <changeEditTime+0x1cc>
     bf6:	21 15       	cp	r18, r1
     bf8:	31 05       	cpc	r19, r1
     bfa:	51 f0       	breq	.+20     	; 0xc10 <changeEditTime+0x1cc>
     bfc:	21 50       	subi	r18, 0x01	; 1
     bfe:	30 40       	sbci	r19, 0x00	; 0
     c00:	88 0f       	add	r24, r24
     c02:	98 2f       	mov	r25, r24
     c04:	99 0f       	add	r25, r25
     c06:	99 0f       	add	r25, r25
     c08:	98 0f       	add	r25, r24
     c0a:	92 0f       	add	r25, r18
     c0c:	90 93 60 02 	sts	0x0260, r25
     c10:	08 95       	ret

00000c12 <main>:
char tmp_str[13]="";
char rtc_LCD_str[8]="";

char white_str[16]="               ";

int main(void){
     c12:	7f 92       	push	r7
     c14:	8f 92       	push	r8
     c16:	9f 92       	push	r9
     c18:	af 92       	push	r10
     c1a:	bf 92       	push	r11
     c1c:	cf 92       	push	r12
     c1e:	df 92       	push	r13
     c20:	ef 92       	push	r14
     c22:	ff 92       	push	r15
     c24:	0f 93       	push	r16
     c26:	1f 93       	push	r17
     c28:	cf 93       	push	r28
     c2a:	df 93       	push	r29
	
	bPriLev=PRI_MAIN;
     c2c:	89 e0       	ldi	r24, 0x09	; 9
     c2e:	80 93 54 02 	sts	0x0254, r24
	
	DDRA = 0xff;		// PORTA = output
     c32:	8f ef       	ldi	r24, 0xFF	; 255
     c34:	8a bb       	out	0x1a, r24	; 26
	
	DDRC = 0x13;		//
     c36:	83 e1       	ldi	r24, 0x13	; 19
     c38:	84 bb       	out	0x14, r24	; 20
	PORTD = 0x13;		// pins 0,1,4 of PORTC are pulled high
     c3a:	82 bb       	out	0x12, r24	; 18
	
	_init();
     c3c:	0e 94 2e 03 	call	0x65c	; 0x65c <_init>
			
			case STATE_IDLE:
				switch(bBtn){
					case NO_BTN:
						refreshQuote();
						bFirst=1;
     c40:	ff 24       	eor	r15, r15
     c42:	f3 94       	inc	r15
						LCD_CURSOR_LEFT_N(8-bSelectionTime);
						break;
					case BTN_B:
						bBtn = NO_BTN;
						changeEditTime(bSelectionTime, BTN_B);
						sprintf(rtc_str, "%02d:%02d:%02d", tTimeEditing.bHour, tTimeEditing.bMin, tTimeEditing.bSec);
     c44:	cf e8       	ldi	r28, 0x8F	; 143
     c46:	d1 e0       	ldi	r29, 0x01	; 1
     c48:	e0 e6       	ldi	r30, 0x60	; 96
     c4a:	ce 2e       	mov	r12, r30
     c4c:	e1 e0       	ldi	r30, 0x01	; 1
     c4e:	de 2e       	mov	r13, r30
						LCDWriteStringXY(3,1,rtc_str);
						LCD_CURSOR_LEFT_N(8-bSelectionTime);
     c50:	78 e0       	ldi	r23, 0x08	; 8
     c52:	a7 2e       	mov	r10, r23
     c54:	b1 2c       	mov	r11, r1
				switch(bBtn){
					case NO_BTN:
						if(bFirst){
							bFirst=0;
							LCDClear();								
							sprintf(rtc_str, "%02d/%02d/20%02d", tTime.bDay, tTime.bMonth, tTime.bYear);
     c56:	61 e4       	ldi	r22, 0x41	; 65
     c58:	86 2e       	mov	r8, r22
     c5a:	61 e0       	ldi	r22, 0x01	; 1
     c5c:	96 2e       	mov	r9, r22
						break;
					
					case BTN_B:
						if(bSelectionMenu>0) bSelectionMenu--;
						else bSelectionMenu=6;
						bSelectionMenu %= 7;
     c5e:	57 e0       	ldi	r21, 0x07	; 7
     c60:	e5 2e       	mov	r14, r21
						bBtn=0;
						break;
					
					case BTN_B:
						if(bSelectionMenu>0) bSelectionMenu--;
						else bSelectionMenu=6;
     c62:	46 e0       	ldi	r20, 0x06	; 6
     c64:	74 2e       	mov	r7, r20
	PORTD = 0x13;		// pins 0,1,4 of PORTC are pulled high
	
	_init();
	
	while(1) { /* Infinite Loop */
		switch(bState){
     c66:	20 91 3e 02 	lds	r18, 0x023E
     c6a:	21 30       	cpi	r18, 0x01	; 1
     c6c:	a9 f0       	breq	.+42     	; 0xc98 <main+0x86>
     c6e:	21 30       	cpi	r18, 0x01	; 1
     c70:	30 f0       	brcs	.+12     	; 0xc7e <main+0x6c>
     c72:	22 30       	cpi	r18, 0x02	; 2
     c74:	09 f4       	brne	.+2      	; 0xc78 <main+0x66>
     c76:	98 c0       	rjmp	.+304    	; 0xda8 <main+0x196>
     c78:	23 30       	cpi	r18, 0x03	; 3
     c7a:	a9 f7       	brne	.-22     	; 0xc66 <main+0x54>
     c7c:	fb c0       	rjmp	.+502    	; 0xe74 <main+0x262>
			
			case STATE_IDLE:
				switch(bBtn){
     c7e:	80 91 71 02 	lds	r24, 0x0271
     c82:	88 23       	and	r24, r24
     c84:	19 f0       	breq	.+6      	; 0xc8c <main+0x7a>
     c86:	87 30       	cpi	r24, 0x07	; 7
     c88:	71 f7       	brne	.-36     	; 0xc66 <main+0x54>
     c8a:	03 c0       	rjmp	.+6      	; 0xc92 <main+0x80>
					case NO_BTN:
						refreshQuote();
     c8c:	0e 94 97 04 	call	0x92e	; 0x92e <refreshQuote>
     c90:	7d c0       	rjmp	.+250    	; 0xd8c <main+0x17a>
						break;
					// case BNT_A_LONG:
					// case BTN_B_LONG:
					//		BACKLIGHT!
					case BTN_C_LONG:
						bState = STATE_MENU;
     c92:	f0 92 3e 02 	sts	0x023E, r15
     c96:	13 c2       	rjmp	.+1062   	; 0x10be <main+0x4ac>
				}
				break;
				
				
			case STATE_MENU:
				switch(bBtn){
     c98:	80 91 71 02 	lds	r24, 0x0271
     c9c:	84 30       	cpi	r24, 0x04	; 4
     c9e:	09 f4       	brne	.+2      	; 0xca2 <main+0x90>
     ca0:	51 c0       	rjmp	.+162    	; 0xd44 <main+0x132>
     ca2:	85 30       	cpi	r24, 0x05	; 5
     ca4:	28 f4       	brcc	.+10     	; 0xcb0 <main+0x9e>
     ca6:	88 23       	and	r24, r24
     ca8:	49 f0       	breq	.+18     	; 0xcbc <main+0xaa>
     caa:	82 30       	cpi	r24, 0x02	; 2
     cac:	e1 f6       	brne	.-72     	; 0xc66 <main+0x54>
     cae:	3b c0       	rjmp	.+118    	; 0xd26 <main+0x114>
     cb0:	86 30       	cpi	r24, 0x06	; 6
     cb2:	09 f4       	brne	.+2      	; 0xcb6 <main+0xa4>
     cb4:	5d c0       	rjmp	.+186    	; 0xd70 <main+0x15e>
     cb6:	87 30       	cpi	r24, 0x07	; 7
     cb8:	b1 f6       	brne	.-84     	; 0xc66 <main+0x54>
     cba:	6b c0       	rjmp	.+214    	; 0xd92 <main+0x180>
					case NO_BTN:
						if(bSelectionMenuChanged || bFirst){
     cbc:	80 91 5d 02 	lds	r24, 0x025D
     cc0:	88 23       	and	r24, r24
     cc2:	21 f4       	brne	.+8      	; 0xccc <main+0xba>
     cc4:	80 91 89 01 	lds	r24, 0x0189
     cc8:	88 23       	and	r24, r24
     cca:	69 f2       	breq	.-102    	; 0xc66 <main+0x54>
							bFirst=0;
     ccc:	10 92 89 01 	sts	0x0189, r1
							bSelectionMenuChanged=0;
     cd0:	10 92 5d 02 	sts	0x025D, r1
							LCDWriteStringXY(0,0,"-");
     cd4:	80 e0       	ldi	r24, 0x00	; 0
     cd6:	60 e0       	ldi	r22, 0x00	; 0
     cd8:	4d e1       	ldi	r20, 0x1D	; 29
     cda:	51 e0       	ldi	r21, 0x01	; 1
     cdc:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <LCDWriteStringXY>
							LCDWriteStringXY(1,0, options[bSelectionMenu]);
     ce0:	40 91 68 02 	lds	r20, 0x0268
     ce4:	50 e0       	ldi	r21, 0x00	; 0
     ce6:	34 e0       	ldi	r19, 0x04	; 4
     ce8:	44 0f       	add	r20, r20
     cea:	55 1f       	adc	r21, r21
     cec:	3a 95       	dec	r19
     cee:	e1 f7       	brne	.-8      	; 0xce8 <main+0xd6>
     cf0:	47 56       	subi	r20, 0x67	; 103
     cf2:	5e 4f       	sbci	r21, 0xFE	; 254
     cf4:	81 e0       	ldi	r24, 0x01	; 1
     cf6:	60 e0       	ldi	r22, 0x00	; 0
     cf8:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <LCDWriteStringXY>
							LCDWriteStringXY(0,1," ");
     cfc:	80 e0       	ldi	r24, 0x00	; 0
     cfe:	61 e0       	ldi	r22, 0x01	; 1
     d00:	4f e3       	ldi	r20, 0x3F	; 63
     d02:	51 e0       	ldi	r21, 0x01	; 1
     d04:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <LCDWriteStringXY>
							LCDWriteStringXY(1,1, options[bSelectionMenu+1]);
     d08:	40 91 68 02 	lds	r20, 0x0268
     d0c:	50 e0       	ldi	r21, 0x00	; 0
     d0e:	24 e0       	ldi	r18, 0x04	; 4
     d10:	44 0f       	add	r20, r20
     d12:	55 1f       	adc	r21, r21
     d14:	2a 95       	dec	r18
     d16:	e1 f7       	brne	.-8      	; 0xd10 <main+0xfe>
     d18:	47 55       	subi	r20, 0x57	; 87
     d1a:	5e 4f       	sbci	r21, 0xFE	; 254
     d1c:	81 e0       	ldi	r24, 0x01	; 1
     d1e:	61 e0       	ldi	r22, 0x01	; 1
     d20:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <LCDWriteStringXY>
     d24:	a0 cf       	rjmp	.-192    	; 0xc66 <main+0x54>
						}
						break;
					
					case BTN_A:
						bSelectionMenu++;
     d26:	80 91 68 02 	lds	r24, 0x0268
     d2a:	8f 5f       	subi	r24, 0xFF	; 255
     d2c:	80 93 68 02 	sts	0x0268, r24
						bSelectionMenu %= 7;
     d30:	80 91 68 02 	lds	r24, 0x0268
     d34:	6e 2d       	mov	r22, r14
     d36:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <__udivmodqi4>
     d3a:	90 93 68 02 	sts	0x0268, r25
						bSelectionMenuChanged=1;
     d3e:	20 93 5d 02 	sts	0x025D, r18
     d42:	bd c1       	rjmp	.+890    	; 0x10be <main+0x4ac>
						bBtn=0;
						break;
					
					case BTN_B:
						if(bSelectionMenu>0) bSelectionMenu--;
     d44:	80 91 68 02 	lds	r24, 0x0268
     d48:	88 23       	and	r24, r24
     d4a:	31 f0       	breq	.+12     	; 0xd58 <main+0x146>
     d4c:	80 91 68 02 	lds	r24, 0x0268
     d50:	81 50       	subi	r24, 0x01	; 1
     d52:	80 93 68 02 	sts	0x0268, r24
     d56:	02 c0       	rjmp	.+4      	; 0xd5c <main+0x14a>
						else bSelectionMenu=6;
     d58:	70 92 68 02 	sts	0x0268, r7
						bSelectionMenu %= 7;
     d5c:	80 91 68 02 	lds	r24, 0x0268
     d60:	6e 2d       	mov	r22, r14
     d62:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <__udivmodqi4>
     d66:	90 93 68 02 	sts	0x0268, r25
						bSelectionMenuChanged=1;
     d6a:	f0 92 5d 02 	sts	0x025D, r15
     d6e:	a7 c1       	rjmp	.+846    	; 0x10be <main+0x4ac>
						bBtn=0;
						break;
					
					case BTN_C:
						switch(bSelectionMenu){
     d70:	80 91 68 02 	lds	r24, 0x0268
     d74:	81 30       	cpi	r24, 0x01	; 1
     d76:	19 f0       	breq	.+6      	; 0xd7e <main+0x16c>
     d78:	82 30       	cpi	r24, 0x02	; 2
     d7a:	41 f4       	brne	.+16     	; 0xd8c <main+0x17a>
     d7c:	02 c0       	rjmp	.+4      	; 0xd82 <main+0x170>
							case SEL_TIMEZONE:
								break;
							case SEL_DATE:
								bState = STATE_EDIT_DATE;
     d7e:	82 e0       	ldi	r24, 0x02	; 2
     d80:	01 c0       	rjmp	.+2      	; 0xd84 <main+0x172>
								bBtn = NO_BTN;
								break;
							case SEL_TIME:
								bState = STATE_EDIT_TIME;
     d82:	83 e0       	ldi	r24, 0x03	; 3
     d84:	80 93 3e 02 	sts	0x023E, r24
								bBtn = NO_BTN;
     d88:	10 92 71 02 	sts	0x0271, r1
								break;
							default:
								break;
						}
						bFirst=1;
     d8c:	f0 92 89 01 	sts	0x0189, r15
						break;
     d90:	6a cf       	rjmp	.-300    	; 0xc66 <main+0x54>
					
					case BTN_C_LONG:
						bState = STATE_IDLE;
     d92:	10 92 3e 02 	sts	0x023E, r1
						bBtn=NO_BTN;
     d96:	10 92 71 02 	sts	0x0271, r1
						//bFirst=1;
						LCDClear();
     d9a:	81 e0       	ldi	r24, 0x01	; 1
     d9c:	60 e0       	ldi	r22, 0x00	; 0
     d9e:	0e 94 18 01 	call	0x230	; 0x230 <LCDByte>
						bSelectionMenu=0;
     da2:	10 92 68 02 	sts	0x0268, r1
						break;
     da6:	5f cf       	rjmp	.-322    	; 0xc66 <main+0x54>
				}				
				break;
			
				
			case STATE_EDIT_DATE:
				switch(bBtn){
     da8:	80 91 71 02 	lds	r24, 0x0271
     dac:	88 23       	and	r24, r24
     dae:	21 f0       	breq	.+8      	; 0xdb8 <main+0x1a6>
     db0:	87 30       	cpi	r24, 0x07	; 7
     db2:	09 f0       	breq	.+2      	; 0xdb6 <main+0x1a4>
     db4:	5f c0       	rjmp	.+190    	; 0xe74 <main+0x262>
     db6:	58 c0       	rjmp	.+176    	; 0xe68 <main+0x256>
					case NO_BTN:
						if(bFirst){
     db8:	80 91 89 01 	lds	r24, 0x0189
     dbc:	88 23       	and	r24, r24
     dbe:	09 f4       	brne	.+2      	; 0xdc2 <main+0x1b0>
     dc0:	59 c0       	rjmp	.+178    	; 0xe74 <main+0x262>
							bFirst=0;
     dc2:	10 92 89 01 	sts	0x0189, r1
							LCDClear();								
     dc6:	81 e0       	ldi	r24, 0x01	; 1
     dc8:	60 e0       	ldi	r22, 0x00	; 0
     dca:	0e 94 18 01 	call	0x230	; 0x230 <LCDByte>
							sprintf(rtc_str, "%02d/%02d/20%02d", tTime.bDay, tTime.bMonth, tTime.bYear);
     dce:	20 91 4c 02 	lds	r18, 0x024C
     dd2:	90 91 4d 02 	lds	r25, 0x024D
     dd6:	80 91 4e 02 	lds	r24, 0x024E
     dda:	4d b7       	in	r20, 0x3d	; 61
     ddc:	5e b7       	in	r21, 0x3e	; 62
     dde:	4a 50       	subi	r20, 0x0A	; 10
     de0:	50 40       	sbci	r21, 0x00	; 0
     de2:	0f b6       	in	r0, 0x3f	; 63
     de4:	f8 94       	cli
     de6:	5e bf       	out	0x3e, r21	; 62
     de8:	0f be       	out	0x3f, r0	; 63
     dea:	4d bf       	out	0x3d, r20	; 61
     dec:	ed b7       	in	r30, 0x3d	; 61
     dee:	fe b7       	in	r31, 0x3e	; 62
     df0:	31 96       	adiw	r30, 0x01	; 1
     df2:	ad b7       	in	r26, 0x3d	; 61
     df4:	be b7       	in	r27, 0x3e	; 62
     df6:	12 96       	adiw	r26, 0x02	; 2
     df8:	dc 93       	st	X, r29
     dfa:	ce 93       	st	-X, r28
     dfc:	11 97       	sbiw	r26, 0x01	; 1
     dfe:	93 82       	std	Z+3, r9	; 0x03
     e00:	82 82       	std	Z+2, r8	; 0x02
     e02:	24 83       	std	Z+4, r18	; 0x04
     e04:	15 82       	std	Z+5, r1	; 0x05
     e06:	96 83       	std	Z+6, r25	; 0x06
     e08:	17 82       	std	Z+7, r1	; 0x07
     e0a:	80 87       	std	Z+8, r24	; 0x08
     e0c:	11 86       	std	Z+9, r1	; 0x09
     e0e:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <sprintf>
							tTimeEditing = tTime;
     e12:	ae e5       	ldi	r26, 0x5E	; 94
     e14:	b2 e0       	ldi	r27, 0x02	; 2
     e16:	e7 e4       	ldi	r30, 0x47	; 71
     e18:	f2 e0       	ldi	r31, 0x02	; 2
     e1a:	88 e0       	ldi	r24, 0x08	; 8
     e1c:	01 90       	ld	r0, Z+
     e1e:	0d 92       	st	X+, r0
     e20:	81 50       	subi	r24, 0x01	; 1
     e22:	e1 f7       	brne	.-8      	; 0xe1c <main+0x20a>
							LCDWriteStringXY(0,0, "Editing date:");
     e24:	2d b7       	in	r18, 0x3d	; 61
     e26:	3e b7       	in	r19, 0x3e	; 62
     e28:	26 5f       	subi	r18, 0xF6	; 246
     e2a:	3f 4f       	sbci	r19, 0xFF	; 255
     e2c:	0f b6       	in	r0, 0x3f	; 63
     e2e:	f8 94       	cli
     e30:	3e bf       	out	0x3e, r19	; 62
     e32:	0f be       	out	0x3f, r0	; 63
     e34:	2d bf       	out	0x3d, r18	; 61
     e36:	60 e0       	ldi	r22, 0x00	; 0
     e38:	42 e5       	ldi	r20, 0x52	; 82
     e3a:	51 e0       	ldi	r21, 0x01	; 1
     e3c:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <LCDWriteStringXY>
							LCDWriteStringXY(2,1, rtc_str);
     e40:	82 e0       	ldi	r24, 0x02	; 2
     e42:	61 e0       	ldi	r22, 0x01	; 1
     e44:	4f e8       	ldi	r20, 0x8F	; 143
     e46:	51 e0       	ldi	r21, 0x01	; 1
     e48:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <LCDWriteStringXY>
							LCDCmd(0x0f);	// set blinking cursor
     e4c:	8f e0       	ldi	r24, 0x0F	; 15
     e4e:	60 e0       	ldi	r22, 0x00	; 0
     e50:	0e 94 18 01 	call	0x230	; 0x230 <LCDByte>
     e54:	0a e0       	ldi	r16, 0x0A	; 10
     e56:	10 e0       	ldi	r17, 0x00	; 0
							for(int i=0; i<10;i++)	LCDCmd(0x10);
     e58:	80 e1       	ldi	r24, 0x10	; 16
     e5a:	60 e0       	ldi	r22, 0x00	; 0
     e5c:	0e 94 18 01 	call	0x230	; 0x230 <LCDByte>
     e60:	01 50       	subi	r16, 0x01	; 1
     e62:	10 40       	sbci	r17, 0x00	; 0
     e64:	c9 f7       	brne	.-14     	; 0xe58 <main+0x246>
     e66:	06 c0       	rjmp	.+12     	; 0xe74 <main+0x262>
						}
						break;
					case BTN_C_LONG:
						bState=STATE_MENU;
     e68:	f0 92 3e 02 	sts	0x023E, r15
						bBtn=NO_BTN;
     e6c:	10 92 71 02 	sts	0x0271, r1
						bFirst=1;
     e70:	f0 92 89 01 	sts	0x0189, r15
						break;
				}
				
				
			case STATE_EDIT_TIME:
				switch(bBtn){
     e74:	80 91 71 02 	lds	r24, 0x0271
     e78:	84 30       	cpi	r24, 0x04	; 4
     e7a:	09 f4       	brne	.+2      	; 0xe7e <main+0x26c>
     e7c:	b0 c0       	rjmp	.+352    	; 0xfde <main+0x3cc>
     e7e:	85 30       	cpi	r24, 0x05	; 5
     e80:	30 f4       	brcc	.+12     	; 0xe8e <main+0x27c>
     e82:	88 23       	and	r24, r24
     e84:	59 f0       	breq	.+22     	; 0xe9c <main+0x28a>
     e86:	82 30       	cpi	r24, 0x02	; 2
     e88:	09 f0       	breq	.+2      	; 0xe8c <main+0x27a>
     e8a:	ed ce       	rjmp	.-550    	; 0xc66 <main+0x54>
     e8c:	5f c0       	rjmp	.+190    	; 0xf4c <main+0x33a>
     e8e:	86 30       	cpi	r24, 0x06	; 6
     e90:	09 f4       	brne	.+2      	; 0xe94 <main+0x282>
     e92:	eb c0       	rjmp	.+470    	; 0x106a <main+0x458>
     e94:	87 30       	cpi	r24, 0x07	; 7
     e96:	09 f0       	breq	.+2      	; 0xe9a <main+0x288>
     e98:	e6 ce       	rjmp	.-564    	; 0xc66 <main+0x54>
     e9a:	14 c1       	rjmp	.+552    	; 0x10c4 <main+0x4b2>
					case NO_BTN:
						if(bFirst){
     e9c:	80 91 89 01 	lds	r24, 0x0189
     ea0:	88 23       	and	r24, r24
     ea2:	09 f4       	brne	.+2      	; 0xea6 <main+0x294>
     ea4:	e0 ce       	rjmp	.-576    	; 0xc66 <main+0x54>
							bFirst=0;
     ea6:	10 92 89 01 	sts	0x0189, r1
							LCDClear();								
     eaa:	81 e0       	ldi	r24, 0x01	; 1
     eac:	60 e0       	ldi	r22, 0x00	; 0
     eae:	0e 94 18 01 	call	0x230	; 0x230 <LCDByte>
							sprintf(rtc_str, "%02d:%02d:%02d", tTime.bHour, tTime.bMin, tTime.bSec);
     eb2:	20 91 4b 02 	lds	r18, 0x024B
     eb6:	90 91 4a 02 	lds	r25, 0x024A
     eba:	80 91 49 02 	lds	r24, 0x0249
     ebe:	4d b7       	in	r20, 0x3d	; 61
     ec0:	5e b7       	in	r21, 0x3e	; 62
     ec2:	4a 50       	subi	r20, 0x0A	; 10
     ec4:	50 40       	sbci	r21, 0x00	; 0
     ec6:	0f b6       	in	r0, 0x3f	; 63
     ec8:	f8 94       	cli
     eca:	5e bf       	out	0x3e, r21	; 62
     ecc:	0f be       	out	0x3f, r0	; 63
     ece:	4d bf       	out	0x3d, r20	; 61
     ed0:	ed b7       	in	r30, 0x3d	; 61
     ed2:	fe b7       	in	r31, 0x3e	; 62
     ed4:	31 96       	adiw	r30, 0x01	; 1
     ed6:	ad b7       	in	r26, 0x3d	; 61
     ed8:	be b7       	in	r27, 0x3e	; 62
     eda:	12 96       	adiw	r26, 0x02	; 2
     edc:	dc 93       	st	X, r29
     ede:	ce 93       	st	-X, r28
     ee0:	11 97       	sbiw	r26, 0x01	; 1
     ee2:	d3 82       	std	Z+3, r13	; 0x03
     ee4:	c2 82       	std	Z+2, r12	; 0x02
     ee6:	24 83       	std	Z+4, r18	; 0x04
     ee8:	15 82       	std	Z+5, r1	; 0x05
     eea:	96 83       	std	Z+6, r25	; 0x06
     eec:	17 82       	std	Z+7, r1	; 0x07
     eee:	80 87       	std	Z+8, r24	; 0x08
     ef0:	11 86       	std	Z+9, r1	; 0x09
     ef2:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <sprintf>
							tTimeEditing = tTime;
     ef6:	ae e5       	ldi	r26, 0x5E	; 94
     ef8:	b2 e0       	ldi	r27, 0x02	; 2
     efa:	e7 e4       	ldi	r30, 0x47	; 71
     efc:	f2 e0       	ldi	r31, 0x02	; 2
     efe:	88 e0       	ldi	r24, 0x08	; 8
     f00:	01 90       	ld	r0, Z+
     f02:	0d 92       	st	X+, r0
     f04:	81 50       	subi	r24, 0x01	; 1
     f06:	e1 f7       	brne	.-8      	; 0xf00 <main+0x2ee>
							LCDWriteStringXY(0,0, "Editing time:");
     f08:	2d b7       	in	r18, 0x3d	; 61
     f0a:	3e b7       	in	r19, 0x3e	; 62
     f0c:	26 5f       	subi	r18, 0xF6	; 246
     f0e:	3f 4f       	sbci	r19, 0xFF	; 255
     f10:	0f b6       	in	r0, 0x3f	; 63
     f12:	f8 94       	cli
     f14:	3e bf       	out	0x3e, r19	; 62
     f16:	0f be       	out	0x3f, r0	; 63
     f18:	2d bf       	out	0x3d, r18	; 61
     f1a:	60 e0       	ldi	r22, 0x00	; 0
     f1c:	4f e6       	ldi	r20, 0x6F	; 111
     f1e:	51 e0       	ldi	r21, 0x01	; 1
     f20:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <LCDWriteStringXY>
							LCDWriteStringXY(3,1, rtc_str);
     f24:	83 e0       	ldi	r24, 0x03	; 3
     f26:	61 e0       	ldi	r22, 0x01	; 1
     f28:	4f e8       	ldi	r20, 0x8F	; 143
     f2a:	51 e0       	ldi	r21, 0x01	; 1
     f2c:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <LCDWriteStringXY>
							LCDCmd(0x0f);	// set blinking cursor
     f30:	8f e0       	ldi	r24, 0x0F	; 15
     f32:	60 e0       	ldi	r22, 0x00	; 0
     f34:	0e 94 18 01 	call	0x230	; 0x230 <LCDByte>
     f38:	08 e0       	ldi	r16, 0x08	; 8
     f3a:	10 e0       	ldi	r17, 0x00	; 0
							LCD_CURSOR_LEFT_N(8);
     f3c:	80 e1       	ldi	r24, 0x10	; 16
     f3e:	60 e0       	ldi	r22, 0x00	; 0
     f40:	0e 94 18 01 	call	0x230	; 0x230 <LCDByte>
     f44:	01 50       	subi	r16, 0x01	; 1
     f46:	10 40       	sbci	r17, 0x00	; 0
     f48:	c9 f7       	brne	.-14     	; 0xf3c <main+0x32a>
     f4a:	8d ce       	rjmp	.-742    	; 0xc66 <main+0x54>
						}
						break;
					case BTN_A:
						bBtn = NO_BTN;
     f4c:	10 92 71 02 	sts	0x0271, r1
						changeEditTime(bSelectionTime, BTN_A);
     f50:	80 91 43 02 	lds	r24, 0x0243
     f54:	62 e0       	ldi	r22, 0x02	; 2
     f56:	0e 94 22 05 	call	0xa44	; 0xa44 <changeEditTime>
						sprintf(rtc_str, "%02d:%02d:%02d", tTimeEditing.bHour, tTimeEditing.bMin, tTimeEditing.bSec);
     f5a:	20 91 62 02 	lds	r18, 0x0262
     f5e:	90 91 61 02 	lds	r25, 0x0261
     f62:	80 91 60 02 	lds	r24, 0x0260
     f66:	4d b7       	in	r20, 0x3d	; 61
     f68:	5e b7       	in	r21, 0x3e	; 62
     f6a:	4a 50       	subi	r20, 0x0A	; 10
     f6c:	50 40       	sbci	r21, 0x00	; 0
     f6e:	0f b6       	in	r0, 0x3f	; 63
     f70:	f8 94       	cli
     f72:	5e bf       	out	0x3e, r21	; 62
     f74:	0f be       	out	0x3f, r0	; 63
     f76:	4d bf       	out	0x3d, r20	; 61
     f78:	ed b7       	in	r30, 0x3d	; 61
     f7a:	fe b7       	in	r31, 0x3e	; 62
     f7c:	31 96       	adiw	r30, 0x01	; 1
     f7e:	ad b7       	in	r26, 0x3d	; 61
     f80:	be b7       	in	r27, 0x3e	; 62
     f82:	12 96       	adiw	r26, 0x02	; 2
     f84:	dc 93       	st	X, r29
     f86:	ce 93       	st	-X, r28
     f88:	11 97       	sbiw	r26, 0x01	; 1
     f8a:	d3 82       	std	Z+3, r13	; 0x03
     f8c:	c2 82       	std	Z+2, r12	; 0x02
     f8e:	24 83       	std	Z+4, r18	; 0x04
     f90:	15 82       	std	Z+5, r1	; 0x05
     f92:	96 83       	std	Z+6, r25	; 0x06
     f94:	17 82       	std	Z+7, r1	; 0x07
     f96:	80 87       	std	Z+8, r24	; 0x08
     f98:	11 86       	std	Z+9, r1	; 0x09
     f9a:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <sprintf>
						LCDWriteStringXY(3,1,rtc_str);
     f9e:	2d b7       	in	r18, 0x3d	; 61
     fa0:	3e b7       	in	r19, 0x3e	; 62
     fa2:	26 5f       	subi	r18, 0xF6	; 246
     fa4:	3f 4f       	sbci	r19, 0xFF	; 255
     fa6:	0f b6       	in	r0, 0x3f	; 63
     fa8:	f8 94       	cli
     faa:	3e bf       	out	0x3e, r19	; 62
     fac:	0f be       	out	0x3f, r0	; 63
     fae:	2d bf       	out	0x3d, r18	; 61
     fb0:	83 e0       	ldi	r24, 0x03	; 3
     fb2:	61 e0       	ldi	r22, 0x01	; 1
     fb4:	ae 01       	movw	r20, r28
     fb6:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <LCDWriteStringXY>
						LCD_CURSOR_LEFT_N(8-bSelectionTime);
     fba:	00 e0       	ldi	r16, 0x00	; 0
     fbc:	10 e0       	ldi	r17, 0x00	; 0
     fbe:	06 c0       	rjmp	.+12     	; 0xfcc <main+0x3ba>
     fc0:	80 e1       	ldi	r24, 0x10	; 16
     fc2:	60 e0       	ldi	r22, 0x00	; 0
     fc4:	0e 94 18 01 	call	0x230	; 0x230 <LCDByte>
     fc8:	0f 5f       	subi	r16, 0xFF	; 255
     fca:	1f 4f       	sbci	r17, 0xFF	; 255
     fcc:	80 91 43 02 	lds	r24, 0x0243
     fd0:	a5 01       	movw	r20, r10
     fd2:	48 1b       	sub	r20, r24
     fd4:	51 09       	sbc	r21, r1
     fd6:	04 17       	cp	r16, r20
     fd8:	15 07       	cpc	r17, r21
     fda:	94 f3       	brlt	.-28     	; 0xfc0 <main+0x3ae>
     fdc:	44 ce       	rjmp	.-888    	; 0xc66 <main+0x54>
						break;
					case BTN_B:
						bBtn = NO_BTN;
     fde:	10 92 71 02 	sts	0x0271, r1
						changeEditTime(bSelectionTime, BTN_B);
     fe2:	80 91 43 02 	lds	r24, 0x0243
     fe6:	64 e0       	ldi	r22, 0x04	; 4
     fe8:	0e 94 22 05 	call	0xa44	; 0xa44 <changeEditTime>
						sprintf(rtc_str, "%02d:%02d:%02d", tTimeEditing.bHour, tTimeEditing.bMin, tTimeEditing.bSec);
     fec:	20 91 62 02 	lds	r18, 0x0262
     ff0:	90 91 61 02 	lds	r25, 0x0261
     ff4:	80 91 60 02 	lds	r24, 0x0260
     ff8:	ad b7       	in	r26, 0x3d	; 61
     ffa:	be b7       	in	r27, 0x3e	; 62
     ffc:	1a 97       	sbiw	r26, 0x0a	; 10
     ffe:	0f b6       	in	r0, 0x3f	; 63
    1000:	f8 94       	cli
    1002:	be bf       	out	0x3e, r27	; 62
    1004:	0f be       	out	0x3f, r0	; 63
    1006:	ad bf       	out	0x3d, r26	; 61
    1008:	ed b7       	in	r30, 0x3d	; 61
    100a:	fe b7       	in	r31, 0x3e	; 62
    100c:	31 96       	adiw	r30, 0x01	; 1
    100e:	12 96       	adiw	r26, 0x02	; 2
    1010:	dc 93       	st	X, r29
    1012:	ce 93       	st	-X, r28
    1014:	11 97       	sbiw	r26, 0x01	; 1
    1016:	d3 82       	std	Z+3, r13	; 0x03
    1018:	c2 82       	std	Z+2, r12	; 0x02
    101a:	24 83       	std	Z+4, r18	; 0x04
    101c:	15 82       	std	Z+5, r1	; 0x05
    101e:	96 83       	std	Z+6, r25	; 0x06
    1020:	17 82       	std	Z+7, r1	; 0x07
    1022:	80 87       	std	Z+8, r24	; 0x08
    1024:	11 86       	std	Z+9, r1	; 0x09
    1026:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <sprintf>
						LCDWriteStringXY(3,1,rtc_str);
    102a:	2d b7       	in	r18, 0x3d	; 61
    102c:	3e b7       	in	r19, 0x3e	; 62
    102e:	26 5f       	subi	r18, 0xF6	; 246
    1030:	3f 4f       	sbci	r19, 0xFF	; 255
    1032:	0f b6       	in	r0, 0x3f	; 63
    1034:	f8 94       	cli
    1036:	3e bf       	out	0x3e, r19	; 62
    1038:	0f be       	out	0x3f, r0	; 63
    103a:	2d bf       	out	0x3d, r18	; 61
    103c:	83 e0       	ldi	r24, 0x03	; 3
    103e:	61 e0       	ldi	r22, 0x01	; 1
    1040:	ae 01       	movw	r20, r28
    1042:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <LCDWriteStringXY>
						LCD_CURSOR_LEFT_N(8-bSelectionTime);
    1046:	00 e0       	ldi	r16, 0x00	; 0
    1048:	10 e0       	ldi	r17, 0x00	; 0
    104a:	06 c0       	rjmp	.+12     	; 0x1058 <main+0x446>
    104c:	80 e1       	ldi	r24, 0x10	; 16
    104e:	60 e0       	ldi	r22, 0x00	; 0
    1050:	0e 94 18 01 	call	0x230	; 0x230 <LCDByte>
    1054:	0f 5f       	subi	r16, 0xFF	; 255
    1056:	1f 4f       	sbci	r17, 0xFF	; 255
    1058:	80 91 43 02 	lds	r24, 0x0243
    105c:	a5 01       	movw	r20, r10
    105e:	48 1b       	sub	r20, r24
    1060:	51 09       	sbc	r21, r1
    1062:	04 17       	cp	r16, r20
    1064:	15 07       	cpc	r17, r21
    1066:	94 f3       	brlt	.-28     	; 0x104c <main+0x43a>
    1068:	fe cd       	rjmp	.-1028   	; 0xc66 <main+0x54>
						break;
					case BTN_C:
						if(bSelectionTime<7){ LCDCmd(0x14); bSelectionTime++; }
    106a:	80 91 43 02 	lds	r24, 0x0243
    106e:	87 30       	cpi	r24, 0x07	; 7
    1070:	50 f4       	brcc	.+20     	; 0x1086 <main+0x474>
    1072:	84 e1       	ldi	r24, 0x14	; 20
    1074:	60 e0       	ldi	r22, 0x00	; 0
    1076:	0e 94 18 01 	call	0x230	; 0x230 <LCDByte>
    107a:	80 91 43 02 	lds	r24, 0x0243
    107e:	8f 5f       	subi	r24, 0xFF	; 255
    1080:	80 93 43 02 	sts	0x0243, r24
    1084:	0b c0       	rjmp	.+22     	; 0x109c <main+0x48a>
						else{ bSelectionTime=0; LCD_CURSOR_LEFT_N(7); }
    1086:	10 92 43 02 	sts	0x0243, r1
    108a:	07 e0       	ldi	r16, 0x07	; 7
    108c:	10 e0       	ldi	r17, 0x00	; 0
    108e:	80 e1       	ldi	r24, 0x10	; 16
    1090:	60 e0       	ldi	r22, 0x00	; 0
    1092:	0e 94 18 01 	call	0x230	; 0x230 <LCDByte>
    1096:	01 50       	subi	r16, 0x01	; 1
    1098:	10 40       	sbci	r17, 0x00	; 0
    109a:	c9 f7       	brne	.-14     	; 0x108e <main+0x47c>
						if(bSelectionTime==2 || bSelectionTime==5){ LCDCmd(0x14); bSelectionTime++; }
    109c:	80 91 43 02 	lds	r24, 0x0243
    10a0:	82 30       	cpi	r24, 0x02	; 2
    10a2:	21 f0       	breq	.+8      	; 0x10ac <main+0x49a>
    10a4:	80 91 43 02 	lds	r24, 0x0243
    10a8:	85 30       	cpi	r24, 0x05	; 5
    10aa:	49 f4       	brne	.+18     	; 0x10be <main+0x4ac>
    10ac:	84 e1       	ldi	r24, 0x14	; 20
    10ae:	60 e0       	ldi	r22, 0x00	; 0
    10b0:	0e 94 18 01 	call	0x230	; 0x230 <LCDByte>
    10b4:	80 91 43 02 	lds	r24, 0x0243
    10b8:	8f 5f       	subi	r24, 0xFF	; 255
    10ba:	80 93 43 02 	sts	0x0243, r24
						bBtn = NO_BTN;
    10be:	10 92 71 02 	sts	0x0271, r1
						break;
    10c2:	d1 cd       	rjmp	.-1118   	; 0xc66 <main+0x54>
					case BTN_C_LONG:
						tTime = tTimeEditing;
    10c4:	a7 e4       	ldi	r26, 0x47	; 71
    10c6:	b2 e0       	ldi	r27, 0x02	; 2
    10c8:	ee e5       	ldi	r30, 0x5E	; 94
    10ca:	f2 e0       	ldi	r31, 0x02	; 2
    10cc:	88 e0       	ldi	r24, 0x08	; 8
    10ce:	01 90       	ld	r0, Z+
    10d0:	0d 92       	st	X+, r0
    10d2:	81 50       	subi	r24, 0x01	; 1
    10d4:	e1 f7       	brne	.-8      	; 0x10ce <main+0x4bc>
						bState=STATE_MENU;
    10d6:	f0 92 3e 02 	sts	0x023E, r15
						bBtn=NO_BTN;
    10da:	10 92 71 02 	sts	0x0271, r1
						bFirst=1;
    10de:	f0 92 89 01 	sts	0x0189, r15
						
						LCDCmd(0x02);	// Home
    10e2:	82 e0       	ldi	r24, 0x02	; 2
    10e4:	60 e0       	ldi	r22, 0x00	; 0
    10e6:	0e 94 18 01 	call	0x230	; 0x230 <LCDByte>
						LCDCmd(0x0C);	// Make cursor invisible
    10ea:	8c e0       	ldi	r24, 0x0C	; 12
    10ec:	60 e0       	ldi	r22, 0x00	; 0
    10ee:	0e 94 18 01 	call	0x230	; 0x230 <LCDByte>
    10f2:	b9 cd       	rjmp	.-1166   	; 0xc66 <main+0x54>

000010f4 <vfprintf>:
    10f4:	2f 92       	push	r2
    10f6:	3f 92       	push	r3
    10f8:	4f 92       	push	r4
    10fa:	5f 92       	push	r5
    10fc:	6f 92       	push	r6
    10fe:	7f 92       	push	r7
    1100:	8f 92       	push	r8
    1102:	9f 92       	push	r9
    1104:	af 92       	push	r10
    1106:	bf 92       	push	r11
    1108:	cf 92       	push	r12
    110a:	df 92       	push	r13
    110c:	ef 92       	push	r14
    110e:	ff 92       	push	r15
    1110:	0f 93       	push	r16
    1112:	1f 93       	push	r17
    1114:	df 93       	push	r29
    1116:	cf 93       	push	r28
    1118:	cd b7       	in	r28, 0x3d	; 61
    111a:	de b7       	in	r29, 0x3e	; 62
    111c:	63 97       	sbiw	r28, 0x13	; 19
    111e:	0f b6       	in	r0, 0x3f	; 63
    1120:	f8 94       	cli
    1122:	de bf       	out	0x3e, r29	; 62
    1124:	0f be       	out	0x3f, r0	; 63
    1126:	cd bf       	out	0x3d, r28	; 61
    1128:	6c 01       	movw	r12, r24
    112a:	7f 87       	std	Y+15, r23	; 0x0f
    112c:	6e 87       	std	Y+14, r22	; 0x0e
    112e:	fc 01       	movw	r30, r24
    1130:	17 82       	std	Z+7, r1	; 0x07
    1132:	16 82       	std	Z+6, r1	; 0x06
    1134:	83 81       	ldd	r24, Z+3	; 0x03
    1136:	81 fd       	sbrc	r24, 1
    1138:	04 c0       	rjmp	.+8      	; 0x1142 <__stack+0x43>
    113a:	6f c3       	rjmp	.+1758   	; 0x181a <__stack+0x71b>
    113c:	4c 85       	ldd	r20, Y+12	; 0x0c
    113e:	5d 85       	ldd	r21, Y+13	; 0x0d
    1140:	04 c0       	rjmp	.+8      	; 0x114a <__stack+0x4b>
    1142:	1e 01       	movw	r2, r28
    1144:	08 94       	sec
    1146:	21 1c       	adc	r2, r1
    1148:	31 1c       	adc	r3, r1
    114a:	f6 01       	movw	r30, r12
    114c:	93 81       	ldd	r25, Z+3	; 0x03
    114e:	ee 85       	ldd	r30, Y+14	; 0x0e
    1150:	ff 85       	ldd	r31, Y+15	; 0x0f
    1152:	93 fd       	sbrc	r25, 3
    1154:	85 91       	lpm	r24, Z+
    1156:	93 ff       	sbrs	r25, 3
    1158:	81 91       	ld	r24, Z+
    115a:	ff 87       	std	Y+15, r31	; 0x0f
    115c:	ee 87       	std	Y+14, r30	; 0x0e
    115e:	88 23       	and	r24, r24
    1160:	09 f4       	brne	.+2      	; 0x1164 <__stack+0x65>
    1162:	57 c3       	rjmp	.+1710   	; 0x1812 <__stack+0x713>
    1164:	85 32       	cpi	r24, 0x25	; 37
    1166:	41 f4       	brne	.+16     	; 0x1178 <__stack+0x79>
    1168:	93 fd       	sbrc	r25, 3
    116a:	85 91       	lpm	r24, Z+
    116c:	93 ff       	sbrs	r25, 3
    116e:	81 91       	ld	r24, Z+
    1170:	ff 87       	std	Y+15, r31	; 0x0f
    1172:	ee 87       	std	Y+14, r30	; 0x0e
    1174:	85 32       	cpi	r24, 0x25	; 37
    1176:	59 f4       	brne	.+22     	; 0x118e <__stack+0x8f>
    1178:	90 e0       	ldi	r25, 0x00	; 0
    117a:	b6 01       	movw	r22, r12
    117c:	4a 8b       	std	Y+18, r20	; 0x12
    117e:	5b 8b       	std	Y+19, r21	; 0x13
    1180:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <fputc>
    1184:	4a 89       	ldd	r20, Y+18	; 0x12
    1186:	5b 89       	ldd	r21, Y+19	; 0x13
    1188:	5d 87       	std	Y+13, r21	; 0x0d
    118a:	4c 87       	std	Y+12, r20	; 0x0c
    118c:	d7 cf       	rjmp	.-82     	; 0x113c <__stack+0x3d>
    118e:	10 e0       	ldi	r17, 0x00	; 0
    1190:	ff 24       	eor	r15, r15
    1192:	00 e0       	ldi	r16, 0x00	; 0
    1194:	00 32       	cpi	r16, 0x20	; 32
    1196:	b0 f4       	brcc	.+44     	; 0x11c4 <__stack+0xc5>
    1198:	8b 32       	cpi	r24, 0x2B	; 43
    119a:	69 f0       	breq	.+26     	; 0x11b6 <__stack+0xb7>
    119c:	8c 32       	cpi	r24, 0x2C	; 44
    119e:	28 f4       	brcc	.+10     	; 0x11aa <__stack+0xab>
    11a0:	80 32       	cpi	r24, 0x20	; 32
    11a2:	51 f0       	breq	.+20     	; 0x11b8 <__stack+0xb9>
    11a4:	83 32       	cpi	r24, 0x23	; 35
    11a6:	71 f4       	brne	.+28     	; 0x11c4 <__stack+0xc5>
    11a8:	0b c0       	rjmp	.+22     	; 0x11c0 <__stack+0xc1>
    11aa:	8d 32       	cpi	r24, 0x2D	; 45
    11ac:	39 f0       	breq	.+14     	; 0x11bc <__stack+0xbd>
    11ae:	80 33       	cpi	r24, 0x30	; 48
    11b0:	49 f4       	brne	.+18     	; 0x11c4 <__stack+0xc5>
    11b2:	01 60       	ori	r16, 0x01	; 1
    11b4:	2c c0       	rjmp	.+88     	; 0x120e <__stack+0x10f>
    11b6:	02 60       	ori	r16, 0x02	; 2
    11b8:	04 60       	ori	r16, 0x04	; 4
    11ba:	29 c0       	rjmp	.+82     	; 0x120e <__stack+0x10f>
    11bc:	08 60       	ori	r16, 0x08	; 8
    11be:	27 c0       	rjmp	.+78     	; 0x120e <__stack+0x10f>
    11c0:	00 61       	ori	r16, 0x10	; 16
    11c2:	25 c0       	rjmp	.+74     	; 0x120e <__stack+0x10f>
    11c4:	07 fd       	sbrc	r16, 7
    11c6:	2e c0       	rjmp	.+92     	; 0x1224 <__stack+0x125>
    11c8:	28 2f       	mov	r18, r24
    11ca:	20 53       	subi	r18, 0x30	; 48
    11cc:	2a 30       	cpi	r18, 0x0A	; 10
    11ce:	98 f4       	brcc	.+38     	; 0x11f6 <__stack+0xf7>
    11d0:	06 ff       	sbrs	r16, 6
    11d2:	08 c0       	rjmp	.+16     	; 0x11e4 <__stack+0xe5>
    11d4:	81 2f       	mov	r24, r17
    11d6:	88 0f       	add	r24, r24
    11d8:	18 2f       	mov	r17, r24
    11da:	11 0f       	add	r17, r17
    11dc:	11 0f       	add	r17, r17
    11de:	18 0f       	add	r17, r24
    11e0:	12 0f       	add	r17, r18
    11e2:	15 c0       	rjmp	.+42     	; 0x120e <__stack+0x10f>
    11e4:	8f 2d       	mov	r24, r15
    11e6:	88 0f       	add	r24, r24
    11e8:	f8 2e       	mov	r15, r24
    11ea:	ff 0c       	add	r15, r15
    11ec:	ff 0c       	add	r15, r15
    11ee:	f8 0e       	add	r15, r24
    11f0:	f2 0e       	add	r15, r18
    11f2:	00 62       	ori	r16, 0x20	; 32
    11f4:	0c c0       	rjmp	.+24     	; 0x120e <__stack+0x10f>
    11f6:	8e 32       	cpi	r24, 0x2E	; 46
    11f8:	21 f4       	brne	.+8      	; 0x1202 <__stack+0x103>
    11fa:	06 fd       	sbrc	r16, 6
    11fc:	0a c3       	rjmp	.+1556   	; 0x1812 <__stack+0x713>
    11fe:	00 64       	ori	r16, 0x40	; 64
    1200:	06 c0       	rjmp	.+12     	; 0x120e <__stack+0x10f>
    1202:	8c 36       	cpi	r24, 0x6C	; 108
    1204:	11 f4       	brne	.+4      	; 0x120a <__stack+0x10b>
    1206:	00 68       	ori	r16, 0x80	; 128
    1208:	02 c0       	rjmp	.+4      	; 0x120e <__stack+0x10f>
    120a:	88 36       	cpi	r24, 0x68	; 104
    120c:	59 f4       	brne	.+22     	; 0x1224 <__stack+0x125>
    120e:	ee 85       	ldd	r30, Y+14	; 0x0e
    1210:	ff 85       	ldd	r31, Y+15	; 0x0f
    1212:	93 fd       	sbrc	r25, 3
    1214:	85 91       	lpm	r24, Z+
    1216:	93 ff       	sbrs	r25, 3
    1218:	81 91       	ld	r24, Z+
    121a:	ff 87       	std	Y+15, r31	; 0x0f
    121c:	ee 87       	std	Y+14, r30	; 0x0e
    121e:	88 23       	and	r24, r24
    1220:	09 f0       	breq	.+2      	; 0x1224 <__stack+0x125>
    1222:	b8 cf       	rjmp	.-144    	; 0x1194 <__stack+0x95>
    1224:	98 2f       	mov	r25, r24
    1226:	95 54       	subi	r25, 0x45	; 69
    1228:	93 30       	cpi	r25, 0x03	; 3
    122a:	18 f4       	brcc	.+6      	; 0x1232 <__stack+0x133>
    122c:	00 61       	ori	r16, 0x10	; 16
    122e:	80 5e       	subi	r24, 0xE0	; 224
    1230:	06 c0       	rjmp	.+12     	; 0x123e <__stack+0x13f>
    1232:	98 2f       	mov	r25, r24
    1234:	95 56       	subi	r25, 0x65	; 101
    1236:	93 30       	cpi	r25, 0x03	; 3
    1238:	08 f0       	brcs	.+2      	; 0x123c <__stack+0x13d>
    123a:	9b c1       	rjmp	.+822    	; 0x1572 <__stack+0x473>
    123c:	0f 7e       	andi	r16, 0xEF	; 239
    123e:	06 ff       	sbrs	r16, 6
    1240:	16 e0       	ldi	r17, 0x06	; 6
    1242:	6f e3       	ldi	r22, 0x3F	; 63
    1244:	e6 2e       	mov	r14, r22
    1246:	e0 22       	and	r14, r16
    1248:	85 36       	cpi	r24, 0x65	; 101
    124a:	19 f4       	brne	.+6      	; 0x1252 <__stack+0x153>
    124c:	f0 e4       	ldi	r31, 0x40	; 64
    124e:	ef 2a       	or	r14, r31
    1250:	07 c0       	rjmp	.+14     	; 0x1260 <__stack+0x161>
    1252:	86 36       	cpi	r24, 0x66	; 102
    1254:	19 f4       	brne	.+6      	; 0x125c <__stack+0x15d>
    1256:	20 e8       	ldi	r18, 0x80	; 128
    1258:	e2 2a       	or	r14, r18
    125a:	02 c0       	rjmp	.+4      	; 0x1260 <__stack+0x161>
    125c:	11 11       	cpse	r17, r1
    125e:	11 50       	subi	r17, 0x01	; 1
    1260:	e7 fe       	sbrs	r14, 7
    1262:	06 c0       	rjmp	.+12     	; 0x1270 <__stack+0x171>
    1264:	1c 33       	cpi	r17, 0x3C	; 60
    1266:	40 f4       	brcc	.+16     	; 0x1278 <__stack+0x179>
    1268:	91 2e       	mov	r9, r17
    126a:	93 94       	inc	r9
    126c:	27 e0       	ldi	r18, 0x07	; 7
    126e:	0b c0       	rjmp	.+22     	; 0x1286 <__stack+0x187>
    1270:	18 30       	cpi	r17, 0x08	; 8
    1272:	30 f4       	brcc	.+12     	; 0x1280 <__stack+0x181>
    1274:	21 2f       	mov	r18, r17
    1276:	06 c0       	rjmp	.+12     	; 0x1284 <__stack+0x185>
    1278:	27 e0       	ldi	r18, 0x07	; 7
    127a:	3c e3       	ldi	r19, 0x3C	; 60
    127c:	93 2e       	mov	r9, r19
    127e:	03 c0       	rjmp	.+6      	; 0x1286 <__stack+0x187>
    1280:	27 e0       	ldi	r18, 0x07	; 7
    1282:	17 e0       	ldi	r17, 0x07	; 7
    1284:	99 24       	eor	r9, r9
    1286:	ca 01       	movw	r24, r20
    1288:	04 96       	adiw	r24, 0x04	; 4
    128a:	9d 87       	std	Y+13, r25	; 0x0d
    128c:	8c 87       	std	Y+12, r24	; 0x0c
    128e:	fa 01       	movw	r30, r20
    1290:	60 81       	ld	r22, Z
    1292:	71 81       	ldd	r23, Z+1	; 0x01
    1294:	82 81       	ldd	r24, Z+2	; 0x02
    1296:	93 81       	ldd	r25, Z+3	; 0x03
    1298:	a1 01       	movw	r20, r2
    129a:	09 2d       	mov	r16, r9
    129c:	0e 94 1a 0e 	call	0x1c34	; 0x1c34 <__ftoa_engine>
    12a0:	5c 01       	movw	r10, r24
    12a2:	69 80       	ldd	r6, Y+1	; 0x01
    12a4:	26 2d       	mov	r18, r6
    12a6:	30 e0       	ldi	r19, 0x00	; 0
    12a8:	39 8b       	std	Y+17, r19	; 0x11
    12aa:	28 8b       	std	Y+16, r18	; 0x10
    12ac:	60 fe       	sbrs	r6, 0
    12ae:	03 c0       	rjmp	.+6      	; 0x12b6 <__stack+0x1b7>
    12b0:	38 89       	ldd	r19, Y+16	; 0x10
    12b2:	33 ff       	sbrs	r19, 3
    12b4:	06 c0       	rjmp	.+12     	; 0x12c2 <__stack+0x1c3>
    12b6:	e1 fc       	sbrc	r14, 1
    12b8:	06 c0       	rjmp	.+12     	; 0x12c6 <__stack+0x1c7>
    12ba:	e2 fe       	sbrs	r14, 2
    12bc:	06 c0       	rjmp	.+12     	; 0x12ca <__stack+0x1cb>
    12be:	00 e2       	ldi	r16, 0x20	; 32
    12c0:	05 c0       	rjmp	.+10     	; 0x12cc <__stack+0x1cd>
    12c2:	0d e2       	ldi	r16, 0x2D	; 45
    12c4:	03 c0       	rjmp	.+6      	; 0x12cc <__stack+0x1cd>
    12c6:	0b e2       	ldi	r16, 0x2B	; 43
    12c8:	01 c0       	rjmp	.+2      	; 0x12cc <__stack+0x1cd>
    12ca:	00 e0       	ldi	r16, 0x00	; 0
    12cc:	88 89       	ldd	r24, Y+16	; 0x10
    12ce:	99 89       	ldd	r25, Y+17	; 0x11
    12d0:	8c 70       	andi	r24, 0x0C	; 12
    12d2:	90 70       	andi	r25, 0x00	; 0
    12d4:	00 97       	sbiw	r24, 0x00	; 0
    12d6:	c1 f1       	breq	.+112    	; 0x1348 <__stack+0x249>
    12d8:	00 23       	and	r16, r16
    12da:	11 f0       	breq	.+4      	; 0x12e0 <__stack+0x1e1>
    12dc:	84 e0       	ldi	r24, 0x04	; 4
    12de:	01 c0       	rjmp	.+2      	; 0x12e2 <__stack+0x1e3>
    12e0:	83 e0       	ldi	r24, 0x03	; 3
    12e2:	8f 15       	cp	r24, r15
    12e4:	58 f4       	brcc	.+22     	; 0x12fc <__stack+0x1fd>
    12e6:	f8 1a       	sub	r15, r24
    12e8:	e3 fc       	sbrc	r14, 3
    12ea:	09 c0       	rjmp	.+18     	; 0x12fe <__stack+0x1ff>
    12ec:	80 e2       	ldi	r24, 0x20	; 32
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	b6 01       	movw	r22, r12
    12f2:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <fputc>
    12f6:	fa 94       	dec	r15
    12f8:	c9 f7       	brne	.-14     	; 0x12ec <__stack+0x1ed>
    12fa:	01 c0       	rjmp	.+2      	; 0x12fe <__stack+0x1ff>
    12fc:	ff 24       	eor	r15, r15
    12fe:	00 23       	and	r16, r16
    1300:	29 f0       	breq	.+10     	; 0x130c <__stack+0x20d>
    1302:	80 2f       	mov	r24, r16
    1304:	90 e0       	ldi	r25, 0x00	; 0
    1306:	b6 01       	movw	r22, r12
    1308:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <fputc>
    130c:	88 89       	ldd	r24, Y+16	; 0x10
    130e:	83 fd       	sbrc	r24, 3
    1310:	03 c0       	rjmp	.+6      	; 0x1318 <__stack+0x219>
    1312:	00 e9       	ldi	r16, 0x90	; 144
    1314:	10 e0       	ldi	r17, 0x00	; 0
    1316:	0e c0       	rjmp	.+28     	; 0x1334 <__stack+0x235>
    1318:	0c e8       	ldi	r16, 0x8C	; 140
    131a:	10 e0       	ldi	r17, 0x00	; 0
    131c:	0b c0       	rjmp	.+22     	; 0x1334 <__stack+0x235>
    131e:	a1 14       	cp	r10, r1
    1320:	b1 04       	cpc	r11, r1
    1322:	09 f0       	breq	.+2      	; 0x1326 <__stack+0x227>
    1324:	80 52       	subi	r24, 0x20	; 32
    1326:	90 e0       	ldi	r25, 0x00	; 0
    1328:	b6 01       	movw	r22, r12
    132a:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <fputc>
    132e:	0f 5f       	subi	r16, 0xFF	; 255
    1330:	1f 4f       	sbci	r17, 0xFF	; 255
    1332:	05 c0       	rjmp	.+10     	; 0x133e <__stack+0x23f>
    1334:	ae 2c       	mov	r10, r14
    1336:	bb 24       	eor	r11, r11
    1338:	90 e1       	ldi	r25, 0x10	; 16
    133a:	a9 22       	and	r10, r25
    133c:	bb 24       	eor	r11, r11
    133e:	f8 01       	movw	r30, r16
    1340:	84 91       	lpm	r24, Z+
    1342:	88 23       	and	r24, r24
    1344:	61 f7       	brne	.-40     	; 0x131e <__stack+0x21f>
    1346:	62 c2       	rjmp	.+1220   	; 0x180c <__stack+0x70d>
    1348:	e7 fe       	sbrs	r14, 7
    134a:	0e c0       	rjmp	.+28     	; 0x1368 <__stack+0x269>
    134c:	9a 0c       	add	r9, r10
    134e:	f8 89       	ldd	r31, Y+16	; 0x10
    1350:	f4 ff       	sbrs	r31, 4
    1352:	04 c0       	rjmp	.+8      	; 0x135c <__stack+0x25d>
    1354:	8a 81       	ldd	r24, Y+2	; 0x02
    1356:	81 33       	cpi	r24, 0x31	; 49
    1358:	09 f4       	brne	.+2      	; 0x135c <__stack+0x25d>
    135a:	9a 94       	dec	r9
    135c:	19 14       	cp	r1, r9
    135e:	54 f5       	brge	.+84     	; 0x13b4 <__stack+0x2b5>
    1360:	29 2d       	mov	r18, r9
    1362:	29 30       	cpi	r18, 0x09	; 9
    1364:	50 f5       	brcc	.+84     	; 0x13ba <__stack+0x2bb>
    1366:	2d c0       	rjmp	.+90     	; 0x13c2 <__stack+0x2c3>
    1368:	e6 fc       	sbrc	r14, 6
    136a:	2b c0       	rjmp	.+86     	; 0x13c2 <__stack+0x2c3>
    136c:	81 2f       	mov	r24, r17
    136e:	90 e0       	ldi	r25, 0x00	; 0
    1370:	8a 15       	cp	r24, r10
    1372:	9b 05       	cpc	r25, r11
    1374:	4c f0       	brlt	.+18     	; 0x1388 <__stack+0x289>
    1376:	3c ef       	ldi	r19, 0xFC	; 252
    1378:	a3 16       	cp	r10, r19
    137a:	3f ef       	ldi	r19, 0xFF	; 255
    137c:	b3 06       	cpc	r11, r19
    137e:	24 f0       	brlt	.+8      	; 0x1388 <__stack+0x289>
    1380:	80 e8       	ldi	r24, 0x80	; 128
    1382:	e8 2a       	or	r14, r24
    1384:	01 c0       	rjmp	.+2      	; 0x1388 <__stack+0x289>
    1386:	11 50       	subi	r17, 0x01	; 1
    1388:	11 23       	and	r17, r17
    138a:	49 f0       	breq	.+18     	; 0x139e <__stack+0x29f>
    138c:	e2 e0       	ldi	r30, 0x02	; 2
    138e:	f0 e0       	ldi	r31, 0x00	; 0
    1390:	ec 0f       	add	r30, r28
    1392:	fd 1f       	adc	r31, r29
    1394:	e1 0f       	add	r30, r17
    1396:	f1 1d       	adc	r31, r1
    1398:	80 81       	ld	r24, Z
    139a:	80 33       	cpi	r24, 0x30	; 48
    139c:	a1 f3       	breq	.-24     	; 0x1386 <__stack+0x287>
    139e:	e7 fe       	sbrs	r14, 7
    13a0:	10 c0       	rjmp	.+32     	; 0x13c2 <__stack+0x2c3>
    13a2:	91 2e       	mov	r9, r17
    13a4:	93 94       	inc	r9
    13a6:	81 2f       	mov	r24, r17
    13a8:	90 e0       	ldi	r25, 0x00	; 0
    13aa:	a8 16       	cp	r10, r24
    13ac:	b9 06       	cpc	r11, r25
    13ae:	44 f4       	brge	.+16     	; 0x13c0 <__stack+0x2c1>
    13b0:	1a 19       	sub	r17, r10
    13b2:	07 c0       	rjmp	.+14     	; 0x13c2 <__stack+0x2c3>
    13b4:	99 24       	eor	r9, r9
    13b6:	93 94       	inc	r9
    13b8:	04 c0       	rjmp	.+8      	; 0x13c2 <__stack+0x2c3>
    13ba:	98 e0       	ldi	r25, 0x08	; 8
    13bc:	99 2e       	mov	r9, r25
    13be:	01 c0       	rjmp	.+2      	; 0x13c2 <__stack+0x2c3>
    13c0:	10 e0       	ldi	r17, 0x00	; 0
    13c2:	e7 fe       	sbrs	r14, 7
    13c4:	07 c0       	rjmp	.+14     	; 0x13d4 <__stack+0x2d5>
    13c6:	1a 14       	cp	r1, r10
    13c8:	1b 04       	cpc	r1, r11
    13ca:	3c f4       	brge	.+14     	; 0x13da <__stack+0x2db>
    13cc:	95 01       	movw	r18, r10
    13ce:	2f 5f       	subi	r18, 0xFF	; 255
    13d0:	3f 4f       	sbci	r19, 0xFF	; 255
    13d2:	05 c0       	rjmp	.+10     	; 0x13de <__stack+0x2df>
    13d4:	25 e0       	ldi	r18, 0x05	; 5
    13d6:	30 e0       	ldi	r19, 0x00	; 0
    13d8:	02 c0       	rjmp	.+4      	; 0x13de <__stack+0x2df>
    13da:	21 e0       	ldi	r18, 0x01	; 1
    13dc:	30 e0       	ldi	r19, 0x00	; 0
    13de:	00 23       	and	r16, r16
    13e0:	11 f0       	breq	.+4      	; 0x13e6 <__stack+0x2e7>
    13e2:	2f 5f       	subi	r18, 0xFF	; 255
    13e4:	3f 4f       	sbci	r19, 0xFF	; 255
    13e6:	11 23       	and	r17, r17
    13e8:	29 f0       	breq	.+10     	; 0x13f4 <__stack+0x2f5>
    13ea:	81 2f       	mov	r24, r17
    13ec:	90 e0       	ldi	r25, 0x00	; 0
    13ee:	01 96       	adiw	r24, 0x01	; 1
    13f0:	28 0f       	add	r18, r24
    13f2:	39 1f       	adc	r19, r25
    13f4:	8f 2d       	mov	r24, r15
    13f6:	90 e0       	ldi	r25, 0x00	; 0
    13f8:	28 17       	cp	r18, r24
    13fa:	39 07       	cpc	r19, r25
    13fc:	14 f4       	brge	.+4      	; 0x1402 <__stack+0x303>
    13fe:	f2 1a       	sub	r15, r18
    1400:	01 c0       	rjmp	.+2      	; 0x1404 <__stack+0x305>
    1402:	ff 24       	eor	r15, r15
    1404:	4e 2c       	mov	r4, r14
    1406:	55 24       	eor	r5, r5
    1408:	c2 01       	movw	r24, r4
    140a:	89 70       	andi	r24, 0x09	; 9
    140c:	90 70       	andi	r25, 0x00	; 0
    140e:	00 97       	sbiw	r24, 0x00	; 0
    1410:	49 f4       	brne	.+18     	; 0x1424 <__stack+0x325>
    1412:	06 c0       	rjmp	.+12     	; 0x1420 <__stack+0x321>
    1414:	80 e2       	ldi	r24, 0x20	; 32
    1416:	90 e0       	ldi	r25, 0x00	; 0
    1418:	b6 01       	movw	r22, r12
    141a:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <fputc>
    141e:	fa 94       	dec	r15
    1420:	ff 20       	and	r15, r15
    1422:	c1 f7       	brne	.-16     	; 0x1414 <__stack+0x315>
    1424:	00 23       	and	r16, r16
    1426:	29 f0       	breq	.+10     	; 0x1432 <__stack+0x333>
    1428:	80 2f       	mov	r24, r16
    142a:	90 e0       	ldi	r25, 0x00	; 0
    142c:	b6 01       	movw	r22, r12
    142e:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <fputc>
    1432:	43 fc       	sbrc	r4, 3
    1434:	09 c0       	rjmp	.+18     	; 0x1448 <__stack+0x349>
    1436:	06 c0       	rjmp	.+12     	; 0x1444 <__stack+0x345>
    1438:	80 e3       	ldi	r24, 0x30	; 48
    143a:	90 e0       	ldi	r25, 0x00	; 0
    143c:	b6 01       	movw	r22, r12
    143e:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <fputc>
    1442:	fa 94       	dec	r15
    1444:	ff 20       	and	r15, r15
    1446:	c1 f7       	brne	.-16     	; 0x1438 <__stack+0x339>
    1448:	e7 fe       	sbrs	r14, 7
    144a:	46 c0       	rjmp	.+140    	; 0x14d8 <__stack+0x3d9>
    144c:	35 01       	movw	r6, r10
    144e:	b7 fe       	sbrs	r11, 7
    1450:	02 c0       	rjmp	.+4      	; 0x1456 <__stack+0x357>
    1452:	66 24       	eor	r6, r6
    1454:	77 24       	eor	r7, r7
    1456:	25 01       	movw	r4, r10
    1458:	08 94       	sec
    145a:	41 1c       	adc	r4, r1
    145c:	51 1c       	adc	r5, r1
    145e:	46 18       	sub	r4, r6
    1460:	57 08       	sbc	r5, r7
    1462:	42 0c       	add	r4, r2
    1464:	53 1c       	adc	r5, r3
    1466:	f5 01       	movw	r30, r10
    1468:	e9 19       	sub	r30, r9
    146a:	f1 09       	sbc	r31, r1
    146c:	4f 01       	movw	r8, r30
    146e:	81 2f       	mov	r24, r17
    1470:	90 e0       	ldi	r25, 0x00	; 0
    1472:	00 27       	eor	r16, r16
    1474:	11 27       	eor	r17, r17
    1476:	08 1b       	sub	r16, r24
    1478:	19 0b       	sbc	r17, r25
    147a:	ff ef       	ldi	r31, 0xFF	; 255
    147c:	6f 16       	cp	r6, r31
    147e:	ff ef       	ldi	r31, 0xFF	; 255
    1480:	7f 06       	cpc	r7, r31
    1482:	29 f4       	brne	.+10     	; 0x148e <__stack+0x38f>
    1484:	8e e2       	ldi	r24, 0x2E	; 46
    1486:	90 e0       	ldi	r25, 0x00	; 0
    1488:	b6 01       	movw	r22, r12
    148a:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <fputc>
    148e:	a6 14       	cp	r10, r6
    1490:	b7 04       	cpc	r11, r7
    1492:	34 f0       	brlt	.+12     	; 0x14a0 <__stack+0x3a1>
    1494:	86 14       	cp	r8, r6
    1496:	97 04       	cpc	r9, r7
    1498:	1c f4       	brge	.+6      	; 0x14a0 <__stack+0x3a1>
    149a:	f2 01       	movw	r30, r4
    149c:	80 81       	ld	r24, Z
    149e:	01 c0       	rjmp	.+2      	; 0x14a2 <__stack+0x3a3>
    14a0:	80 e3       	ldi	r24, 0x30	; 48
    14a2:	08 94       	sec
    14a4:	61 08       	sbc	r6, r1
    14a6:	71 08       	sbc	r7, r1
    14a8:	08 94       	sec
    14aa:	41 1c       	adc	r4, r1
    14ac:	51 1c       	adc	r5, r1
    14ae:	60 16       	cp	r6, r16
    14b0:	71 06       	cpc	r7, r17
    14b2:	2c f0       	brlt	.+10     	; 0x14be <__stack+0x3bf>
    14b4:	90 e0       	ldi	r25, 0x00	; 0
    14b6:	b6 01       	movw	r22, r12
    14b8:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <fputc>
    14bc:	de cf       	rjmp	.-68     	; 0x147a <__stack+0x37b>
    14be:	6a 14       	cp	r6, r10
    14c0:	7b 04       	cpc	r7, r11
    14c2:	41 f4       	brne	.+16     	; 0x14d4 <__stack+0x3d5>
    14c4:	9a 81       	ldd	r25, Y+2	; 0x02
    14c6:	96 33       	cpi	r25, 0x36	; 54
    14c8:	20 f4       	brcc	.+8      	; 0x14d2 <__stack+0x3d3>
    14ca:	95 33       	cpi	r25, 0x35	; 53
    14cc:	19 f4       	brne	.+6      	; 0x14d4 <__stack+0x3d5>
    14ce:	f8 89       	ldd	r31, Y+16	; 0x10
    14d0:	f4 ff       	sbrs	r31, 4
    14d2:	81 e3       	ldi	r24, 0x31	; 49
    14d4:	90 e0       	ldi	r25, 0x00	; 0
    14d6:	49 c0       	rjmp	.+146    	; 0x156a <__stack+0x46b>
    14d8:	8a 81       	ldd	r24, Y+2	; 0x02
    14da:	81 33       	cpi	r24, 0x31	; 49
    14dc:	11 f0       	breq	.+4      	; 0x14e2 <__stack+0x3e3>
    14de:	2f ee       	ldi	r18, 0xEF	; 239
    14e0:	62 22       	and	r6, r18
    14e2:	90 e0       	ldi	r25, 0x00	; 0
    14e4:	b6 01       	movw	r22, r12
    14e6:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <fputc>
    14ea:	11 23       	and	r17, r17
    14ec:	89 f0       	breq	.+34     	; 0x1510 <__stack+0x411>
    14ee:	8e e2       	ldi	r24, 0x2E	; 46
    14f0:	90 e0       	ldi	r25, 0x00	; 0
    14f2:	b6 01       	movw	r22, r12
    14f4:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <fputc>
    14f8:	02 e0       	ldi	r16, 0x02	; 2
    14fa:	f1 01       	movw	r30, r2
    14fc:	e0 0f       	add	r30, r16
    14fe:	f1 1d       	adc	r31, r1
    1500:	0f 5f       	subi	r16, 0xFF	; 255
    1502:	80 81       	ld	r24, Z
    1504:	90 e0       	ldi	r25, 0x00	; 0
    1506:	b6 01       	movw	r22, r12
    1508:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <fputc>
    150c:	11 50       	subi	r17, 0x01	; 1
    150e:	a9 f7       	brne	.-22     	; 0x14fa <__stack+0x3fb>
    1510:	44 fe       	sbrs	r4, 4
    1512:	03 c0       	rjmp	.+6      	; 0x151a <__stack+0x41b>
    1514:	85 e4       	ldi	r24, 0x45	; 69
    1516:	90 e0       	ldi	r25, 0x00	; 0
    1518:	02 c0       	rjmp	.+4      	; 0x151e <__stack+0x41f>
    151a:	85 e6       	ldi	r24, 0x65	; 101
    151c:	90 e0       	ldi	r25, 0x00	; 0
    151e:	b6 01       	movw	r22, r12
    1520:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <fputc>
    1524:	b7 fc       	sbrc	r11, 7
    1526:	05 c0       	rjmp	.+10     	; 0x1532 <__stack+0x433>
    1528:	a1 14       	cp	r10, r1
    152a:	b1 04       	cpc	r11, r1
    152c:	41 f4       	brne	.+16     	; 0x153e <__stack+0x43f>
    152e:	64 fe       	sbrs	r6, 4
    1530:	06 c0       	rjmp	.+12     	; 0x153e <__stack+0x43f>
    1532:	b0 94       	com	r11
    1534:	a1 94       	neg	r10
    1536:	b1 08       	sbc	r11, r1
    1538:	b3 94       	inc	r11
    153a:	8d e2       	ldi	r24, 0x2D	; 45
    153c:	01 c0       	rjmp	.+2      	; 0x1540 <__stack+0x441>
    153e:	8b e2       	ldi	r24, 0x2B	; 43
    1540:	90 e0       	ldi	r25, 0x00	; 0
    1542:	b6 01       	movw	r22, r12
    1544:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <fputc>
    1548:	80 e3       	ldi	r24, 0x30	; 48
    154a:	05 c0       	rjmp	.+10     	; 0x1556 <__stack+0x457>
    154c:	8f 5f       	subi	r24, 0xFF	; 255
    154e:	e6 ef       	ldi	r30, 0xF6	; 246
    1550:	ff ef       	ldi	r31, 0xFF	; 255
    1552:	ae 0e       	add	r10, r30
    1554:	bf 1e       	adc	r11, r31
    1556:	fa e0       	ldi	r31, 0x0A	; 10
    1558:	af 16       	cp	r10, r31
    155a:	b1 04       	cpc	r11, r1
    155c:	bc f7       	brge	.-18     	; 0x154c <__stack+0x44d>
    155e:	90 e0       	ldi	r25, 0x00	; 0
    1560:	b6 01       	movw	r22, r12
    1562:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <fputc>
    1566:	c5 01       	movw	r24, r10
    1568:	c0 96       	adiw	r24, 0x30	; 48
    156a:	b6 01       	movw	r22, r12
    156c:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <fputc>
    1570:	4d c1       	rjmp	.+666    	; 0x180c <__stack+0x70d>
    1572:	83 36       	cpi	r24, 0x63	; 99
    1574:	31 f0       	breq	.+12     	; 0x1582 <__stack+0x483>
    1576:	83 37       	cpi	r24, 0x73	; 115
    1578:	89 f0       	breq	.+34     	; 0x159c <__stack+0x49d>
    157a:	83 35       	cpi	r24, 0x53	; 83
    157c:	09 f0       	breq	.+2      	; 0x1580 <__stack+0x481>
    157e:	59 c0       	rjmp	.+178    	; 0x1632 <__stack+0x533>
    1580:	22 c0       	rjmp	.+68     	; 0x15c6 <__stack+0x4c7>
    1582:	9a 01       	movw	r18, r20
    1584:	2e 5f       	subi	r18, 0xFE	; 254
    1586:	3f 4f       	sbci	r19, 0xFF	; 255
    1588:	3d 87       	std	Y+13, r19	; 0x0d
    158a:	2c 87       	std	Y+12, r18	; 0x0c
    158c:	fa 01       	movw	r30, r20
    158e:	80 81       	ld	r24, Z
    1590:	89 83       	std	Y+1, r24	; 0x01
    1592:	31 01       	movw	r6, r2
    1594:	81 e0       	ldi	r24, 0x01	; 1
    1596:	a8 2e       	mov	r10, r24
    1598:	b1 2c       	mov	r11, r1
    159a:	13 c0       	rjmp	.+38     	; 0x15c2 <__stack+0x4c3>
    159c:	9a 01       	movw	r18, r20
    159e:	2e 5f       	subi	r18, 0xFE	; 254
    15a0:	3f 4f       	sbci	r19, 0xFF	; 255
    15a2:	3d 87       	std	Y+13, r19	; 0x0d
    15a4:	2c 87       	std	Y+12, r18	; 0x0c
    15a6:	fa 01       	movw	r30, r20
    15a8:	60 80       	ld	r6, Z
    15aa:	71 80       	ldd	r7, Z+1	; 0x01
    15ac:	06 ff       	sbrs	r16, 6
    15ae:	03 c0       	rjmp	.+6      	; 0x15b6 <__stack+0x4b7>
    15b0:	61 2f       	mov	r22, r17
    15b2:	70 e0       	ldi	r23, 0x00	; 0
    15b4:	02 c0       	rjmp	.+4      	; 0x15ba <__stack+0x4bb>
    15b6:	6f ef       	ldi	r22, 0xFF	; 255
    15b8:	7f ef       	ldi	r23, 0xFF	; 255
    15ba:	c3 01       	movw	r24, r6
    15bc:	0e 94 fd 0e 	call	0x1dfa	; 0x1dfa <strnlen>
    15c0:	5c 01       	movw	r10, r24
    15c2:	0f 77       	andi	r16, 0x7F	; 127
    15c4:	14 c0       	rjmp	.+40     	; 0x15ee <__stack+0x4ef>
    15c6:	9a 01       	movw	r18, r20
    15c8:	2e 5f       	subi	r18, 0xFE	; 254
    15ca:	3f 4f       	sbci	r19, 0xFF	; 255
    15cc:	3d 87       	std	Y+13, r19	; 0x0d
    15ce:	2c 87       	std	Y+12, r18	; 0x0c
    15d0:	fa 01       	movw	r30, r20
    15d2:	60 80       	ld	r6, Z
    15d4:	71 80       	ldd	r7, Z+1	; 0x01
    15d6:	06 ff       	sbrs	r16, 6
    15d8:	03 c0       	rjmp	.+6      	; 0x15e0 <__stack+0x4e1>
    15da:	61 2f       	mov	r22, r17
    15dc:	70 e0       	ldi	r23, 0x00	; 0
    15de:	02 c0       	rjmp	.+4      	; 0x15e4 <__stack+0x4e5>
    15e0:	6f ef       	ldi	r22, 0xFF	; 255
    15e2:	7f ef       	ldi	r23, 0xFF	; 255
    15e4:	c3 01       	movw	r24, r6
    15e6:	0e 94 f2 0e 	call	0x1de4	; 0x1de4 <strnlen_P>
    15ea:	5c 01       	movw	r10, r24
    15ec:	00 68       	ori	r16, 0x80	; 128
    15ee:	03 fd       	sbrc	r16, 3
    15f0:	1c c0       	rjmp	.+56     	; 0x162a <__stack+0x52b>
    15f2:	06 c0       	rjmp	.+12     	; 0x1600 <__stack+0x501>
    15f4:	80 e2       	ldi	r24, 0x20	; 32
    15f6:	90 e0       	ldi	r25, 0x00	; 0
    15f8:	b6 01       	movw	r22, r12
    15fa:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <fputc>
    15fe:	fa 94       	dec	r15
    1600:	8f 2d       	mov	r24, r15
    1602:	90 e0       	ldi	r25, 0x00	; 0
    1604:	a8 16       	cp	r10, r24
    1606:	b9 06       	cpc	r11, r25
    1608:	a8 f3       	brcs	.-22     	; 0x15f4 <__stack+0x4f5>
    160a:	0f c0       	rjmp	.+30     	; 0x162a <__stack+0x52b>
    160c:	f3 01       	movw	r30, r6
    160e:	07 fd       	sbrc	r16, 7
    1610:	85 91       	lpm	r24, Z+
    1612:	07 ff       	sbrs	r16, 7
    1614:	81 91       	ld	r24, Z+
    1616:	3f 01       	movw	r6, r30
    1618:	90 e0       	ldi	r25, 0x00	; 0
    161a:	b6 01       	movw	r22, r12
    161c:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <fputc>
    1620:	f1 10       	cpse	r15, r1
    1622:	fa 94       	dec	r15
    1624:	08 94       	sec
    1626:	a1 08       	sbc	r10, r1
    1628:	b1 08       	sbc	r11, r1
    162a:	a1 14       	cp	r10, r1
    162c:	b1 04       	cpc	r11, r1
    162e:	71 f7       	brne	.-36     	; 0x160c <__stack+0x50d>
    1630:	ed c0       	rjmp	.+474    	; 0x180c <__stack+0x70d>
    1632:	84 36       	cpi	r24, 0x64	; 100
    1634:	11 f0       	breq	.+4      	; 0x163a <__stack+0x53b>
    1636:	89 36       	cpi	r24, 0x69	; 105
    1638:	61 f5       	brne	.+88     	; 0x1692 <__stack+0x593>
    163a:	07 ff       	sbrs	r16, 7
    163c:	0b c0       	rjmp	.+22     	; 0x1654 <__stack+0x555>
    163e:	9a 01       	movw	r18, r20
    1640:	2c 5f       	subi	r18, 0xFC	; 252
    1642:	3f 4f       	sbci	r19, 0xFF	; 255
    1644:	3d 87       	std	Y+13, r19	; 0x0d
    1646:	2c 87       	std	Y+12, r18	; 0x0c
    1648:	fa 01       	movw	r30, r20
    164a:	60 81       	ld	r22, Z
    164c:	71 81       	ldd	r23, Z+1	; 0x01
    164e:	82 81       	ldd	r24, Z+2	; 0x02
    1650:	93 81       	ldd	r25, Z+3	; 0x03
    1652:	0c c0       	rjmp	.+24     	; 0x166c <__stack+0x56d>
    1654:	9a 01       	movw	r18, r20
    1656:	2e 5f       	subi	r18, 0xFE	; 254
    1658:	3f 4f       	sbci	r19, 0xFF	; 255
    165a:	3d 87       	std	Y+13, r19	; 0x0d
    165c:	2c 87       	std	Y+12, r18	; 0x0c
    165e:	fa 01       	movw	r30, r20
    1660:	60 81       	ld	r22, Z
    1662:	71 81       	ldd	r23, Z+1	; 0x01
    1664:	88 27       	eor	r24, r24
    1666:	77 fd       	sbrc	r23, 7
    1668:	80 95       	com	r24
    166a:	98 2f       	mov	r25, r24
    166c:	0f 76       	andi	r16, 0x6F	; 111
    166e:	97 ff       	sbrs	r25, 7
    1670:	08 c0       	rjmp	.+16     	; 0x1682 <__stack+0x583>
    1672:	90 95       	com	r25
    1674:	80 95       	com	r24
    1676:	70 95       	com	r23
    1678:	61 95       	neg	r22
    167a:	7f 4f       	sbci	r23, 0xFF	; 255
    167c:	8f 4f       	sbci	r24, 0xFF	; 255
    167e:	9f 4f       	sbci	r25, 0xFF	; 255
    1680:	00 68       	ori	r16, 0x80	; 128
    1682:	a1 01       	movw	r20, r2
    1684:	2a e0       	ldi	r18, 0x0A	; 10
    1686:	30 e0       	ldi	r19, 0x00	; 0
    1688:	0e 94 64 0f 	call	0x1ec8	; 0x1ec8 <__ultoa_invert>
    168c:	98 2e       	mov	r9, r24
    168e:	92 18       	sub	r9, r2
    1690:	41 c0       	rjmp	.+130    	; 0x1714 <__stack+0x615>
    1692:	85 37       	cpi	r24, 0x75	; 117
    1694:	21 f4       	brne	.+8      	; 0x169e <__stack+0x59f>
    1696:	0f 7e       	andi	r16, 0xEF	; 239
    1698:	2a e0       	ldi	r18, 0x0A	; 10
    169a:	30 e0       	ldi	r19, 0x00	; 0
    169c:	20 c0       	rjmp	.+64     	; 0x16de <__stack+0x5df>
    169e:	09 7f       	andi	r16, 0xF9	; 249
    16a0:	8f 36       	cpi	r24, 0x6F	; 111
    16a2:	a9 f0       	breq	.+42     	; 0x16ce <__stack+0x5cf>
    16a4:	80 37       	cpi	r24, 0x70	; 112
    16a6:	20 f4       	brcc	.+8      	; 0x16b0 <__stack+0x5b1>
    16a8:	88 35       	cpi	r24, 0x58	; 88
    16aa:	09 f0       	breq	.+2      	; 0x16ae <__stack+0x5af>
    16ac:	b2 c0       	rjmp	.+356    	; 0x1812 <__stack+0x713>
    16ae:	0b c0       	rjmp	.+22     	; 0x16c6 <__stack+0x5c7>
    16b0:	80 37       	cpi	r24, 0x70	; 112
    16b2:	21 f0       	breq	.+8      	; 0x16bc <__stack+0x5bd>
    16b4:	88 37       	cpi	r24, 0x78	; 120
    16b6:	09 f0       	breq	.+2      	; 0x16ba <__stack+0x5bb>
    16b8:	ac c0       	rjmp	.+344    	; 0x1812 <__stack+0x713>
    16ba:	01 c0       	rjmp	.+2      	; 0x16be <__stack+0x5bf>
    16bc:	00 61       	ori	r16, 0x10	; 16
    16be:	04 ff       	sbrs	r16, 4
    16c0:	09 c0       	rjmp	.+18     	; 0x16d4 <__stack+0x5d5>
    16c2:	04 60       	ori	r16, 0x04	; 4
    16c4:	07 c0       	rjmp	.+14     	; 0x16d4 <__stack+0x5d5>
    16c6:	04 ff       	sbrs	r16, 4
    16c8:	08 c0       	rjmp	.+16     	; 0x16da <__stack+0x5db>
    16ca:	06 60       	ori	r16, 0x06	; 6
    16cc:	06 c0       	rjmp	.+12     	; 0x16da <__stack+0x5db>
    16ce:	28 e0       	ldi	r18, 0x08	; 8
    16d0:	30 e0       	ldi	r19, 0x00	; 0
    16d2:	05 c0       	rjmp	.+10     	; 0x16de <__stack+0x5df>
    16d4:	20 e1       	ldi	r18, 0x10	; 16
    16d6:	30 e0       	ldi	r19, 0x00	; 0
    16d8:	02 c0       	rjmp	.+4      	; 0x16de <__stack+0x5df>
    16da:	20 e1       	ldi	r18, 0x10	; 16
    16dc:	32 e0       	ldi	r19, 0x02	; 2
    16de:	07 ff       	sbrs	r16, 7
    16e0:	0a c0       	rjmp	.+20     	; 0x16f6 <__stack+0x5f7>
    16e2:	ca 01       	movw	r24, r20
    16e4:	04 96       	adiw	r24, 0x04	; 4
    16e6:	9d 87       	std	Y+13, r25	; 0x0d
    16e8:	8c 87       	std	Y+12, r24	; 0x0c
    16ea:	fa 01       	movw	r30, r20
    16ec:	60 81       	ld	r22, Z
    16ee:	71 81       	ldd	r23, Z+1	; 0x01
    16f0:	82 81       	ldd	r24, Z+2	; 0x02
    16f2:	93 81       	ldd	r25, Z+3	; 0x03
    16f4:	09 c0       	rjmp	.+18     	; 0x1708 <__stack+0x609>
    16f6:	ca 01       	movw	r24, r20
    16f8:	02 96       	adiw	r24, 0x02	; 2
    16fa:	9d 87       	std	Y+13, r25	; 0x0d
    16fc:	8c 87       	std	Y+12, r24	; 0x0c
    16fe:	fa 01       	movw	r30, r20
    1700:	60 81       	ld	r22, Z
    1702:	71 81       	ldd	r23, Z+1	; 0x01
    1704:	80 e0       	ldi	r24, 0x00	; 0
    1706:	90 e0       	ldi	r25, 0x00	; 0
    1708:	a1 01       	movw	r20, r2
    170a:	0e 94 64 0f 	call	0x1ec8	; 0x1ec8 <__ultoa_invert>
    170e:	98 2e       	mov	r9, r24
    1710:	92 18       	sub	r9, r2
    1712:	0f 77       	andi	r16, 0x7F	; 127
    1714:	06 ff       	sbrs	r16, 6
    1716:	09 c0       	rjmp	.+18     	; 0x172a <__stack+0x62b>
    1718:	0e 7f       	andi	r16, 0xFE	; 254
    171a:	91 16       	cp	r9, r17
    171c:	30 f4       	brcc	.+12     	; 0x172a <__stack+0x62b>
    171e:	04 ff       	sbrs	r16, 4
    1720:	06 c0       	rjmp	.+12     	; 0x172e <__stack+0x62f>
    1722:	02 fd       	sbrc	r16, 2
    1724:	04 c0       	rjmp	.+8      	; 0x172e <__stack+0x62f>
    1726:	0f 7e       	andi	r16, 0xEF	; 239
    1728:	02 c0       	rjmp	.+4      	; 0x172e <__stack+0x62f>
    172a:	e9 2c       	mov	r14, r9
    172c:	01 c0       	rjmp	.+2      	; 0x1730 <__stack+0x631>
    172e:	e1 2e       	mov	r14, r17
    1730:	80 2f       	mov	r24, r16
    1732:	90 e0       	ldi	r25, 0x00	; 0
    1734:	04 ff       	sbrs	r16, 4
    1736:	0c c0       	rjmp	.+24     	; 0x1750 <__stack+0x651>
    1738:	fe 01       	movw	r30, r28
    173a:	e9 0d       	add	r30, r9
    173c:	f1 1d       	adc	r31, r1
    173e:	20 81       	ld	r18, Z
    1740:	20 33       	cpi	r18, 0x30	; 48
    1742:	11 f4       	brne	.+4      	; 0x1748 <__stack+0x649>
    1744:	09 7e       	andi	r16, 0xE9	; 233
    1746:	09 c0       	rjmp	.+18     	; 0x175a <__stack+0x65b>
    1748:	e3 94       	inc	r14
    174a:	02 ff       	sbrs	r16, 2
    174c:	06 c0       	rjmp	.+12     	; 0x175a <__stack+0x65b>
    174e:	04 c0       	rjmp	.+8      	; 0x1758 <__stack+0x659>
    1750:	86 78       	andi	r24, 0x86	; 134
    1752:	90 70       	andi	r25, 0x00	; 0
    1754:	00 97       	sbiw	r24, 0x00	; 0
    1756:	09 f0       	breq	.+2      	; 0x175a <__stack+0x65b>
    1758:	e3 94       	inc	r14
    175a:	a0 2e       	mov	r10, r16
    175c:	bb 24       	eor	r11, r11
    175e:	03 fd       	sbrc	r16, 3
    1760:	14 c0       	rjmp	.+40     	; 0x178a <__stack+0x68b>
    1762:	00 ff       	sbrs	r16, 0
    1764:	0f c0       	rjmp	.+30     	; 0x1784 <__stack+0x685>
    1766:	ef 14       	cp	r14, r15
    1768:	28 f4       	brcc	.+10     	; 0x1774 <__stack+0x675>
    176a:	19 2d       	mov	r17, r9
    176c:	1f 0d       	add	r17, r15
    176e:	1e 19       	sub	r17, r14
    1770:	ef 2c       	mov	r14, r15
    1772:	08 c0       	rjmp	.+16     	; 0x1784 <__stack+0x685>
    1774:	19 2d       	mov	r17, r9
    1776:	06 c0       	rjmp	.+12     	; 0x1784 <__stack+0x685>
    1778:	80 e2       	ldi	r24, 0x20	; 32
    177a:	90 e0       	ldi	r25, 0x00	; 0
    177c:	b6 01       	movw	r22, r12
    177e:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <fputc>
    1782:	e3 94       	inc	r14
    1784:	ef 14       	cp	r14, r15
    1786:	c0 f3       	brcs	.-16     	; 0x1778 <__stack+0x679>
    1788:	04 c0       	rjmp	.+8      	; 0x1792 <__stack+0x693>
    178a:	ef 14       	cp	r14, r15
    178c:	10 f4       	brcc	.+4      	; 0x1792 <__stack+0x693>
    178e:	fe 18       	sub	r15, r14
    1790:	01 c0       	rjmp	.+2      	; 0x1794 <__stack+0x695>
    1792:	ff 24       	eor	r15, r15
    1794:	a4 fe       	sbrs	r10, 4
    1796:	0f c0       	rjmp	.+30     	; 0x17b6 <__stack+0x6b7>
    1798:	80 e3       	ldi	r24, 0x30	; 48
    179a:	90 e0       	ldi	r25, 0x00	; 0
    179c:	b6 01       	movw	r22, r12
    179e:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <fputc>
    17a2:	a2 fe       	sbrs	r10, 2
    17a4:	1f c0       	rjmp	.+62     	; 0x17e4 <__stack+0x6e5>
    17a6:	a1 fe       	sbrs	r10, 1
    17a8:	03 c0       	rjmp	.+6      	; 0x17b0 <__stack+0x6b1>
    17aa:	88 e5       	ldi	r24, 0x58	; 88
    17ac:	90 e0       	ldi	r25, 0x00	; 0
    17ae:	10 c0       	rjmp	.+32     	; 0x17d0 <__stack+0x6d1>
    17b0:	88 e7       	ldi	r24, 0x78	; 120
    17b2:	90 e0       	ldi	r25, 0x00	; 0
    17b4:	0d c0       	rjmp	.+26     	; 0x17d0 <__stack+0x6d1>
    17b6:	c5 01       	movw	r24, r10
    17b8:	86 78       	andi	r24, 0x86	; 134
    17ba:	90 70       	andi	r25, 0x00	; 0
    17bc:	00 97       	sbiw	r24, 0x00	; 0
    17be:	91 f0       	breq	.+36     	; 0x17e4 <__stack+0x6e5>
    17c0:	a1 fc       	sbrc	r10, 1
    17c2:	02 c0       	rjmp	.+4      	; 0x17c8 <__stack+0x6c9>
    17c4:	80 e2       	ldi	r24, 0x20	; 32
    17c6:	01 c0       	rjmp	.+2      	; 0x17ca <__stack+0x6cb>
    17c8:	8b e2       	ldi	r24, 0x2B	; 43
    17ca:	07 fd       	sbrc	r16, 7
    17cc:	8d e2       	ldi	r24, 0x2D	; 45
    17ce:	90 e0       	ldi	r25, 0x00	; 0
    17d0:	b6 01       	movw	r22, r12
    17d2:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <fputc>
    17d6:	06 c0       	rjmp	.+12     	; 0x17e4 <__stack+0x6e5>
    17d8:	80 e3       	ldi	r24, 0x30	; 48
    17da:	90 e0       	ldi	r25, 0x00	; 0
    17dc:	b6 01       	movw	r22, r12
    17de:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <fputc>
    17e2:	11 50       	subi	r17, 0x01	; 1
    17e4:	91 16       	cp	r9, r17
    17e6:	c0 f3       	brcs	.-16     	; 0x17d8 <__stack+0x6d9>
    17e8:	9a 94       	dec	r9
    17ea:	f1 01       	movw	r30, r2
    17ec:	e9 0d       	add	r30, r9
    17ee:	f1 1d       	adc	r31, r1
    17f0:	80 81       	ld	r24, Z
    17f2:	90 e0       	ldi	r25, 0x00	; 0
    17f4:	b6 01       	movw	r22, r12
    17f6:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <fputc>
    17fa:	99 20       	and	r9, r9
    17fc:	a9 f7       	brne	.-22     	; 0x17e8 <__stack+0x6e9>
    17fe:	06 c0       	rjmp	.+12     	; 0x180c <__stack+0x70d>
    1800:	80 e2       	ldi	r24, 0x20	; 32
    1802:	90 e0       	ldi	r25, 0x00	; 0
    1804:	b6 01       	movw	r22, r12
    1806:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <fputc>
    180a:	fa 94       	dec	r15
    180c:	ff 20       	and	r15, r15
    180e:	c1 f7       	brne	.-16     	; 0x1800 <__stack+0x701>
    1810:	95 cc       	rjmp	.-1750   	; 0x113c <__stack+0x3d>
    1812:	f6 01       	movw	r30, r12
    1814:	26 81       	ldd	r18, Z+6	; 0x06
    1816:	37 81       	ldd	r19, Z+7	; 0x07
    1818:	02 c0       	rjmp	.+4      	; 0x181e <__stack+0x71f>
    181a:	2f ef       	ldi	r18, 0xFF	; 255
    181c:	3f ef       	ldi	r19, 0xFF	; 255
    181e:	c9 01       	movw	r24, r18
    1820:	63 96       	adiw	r28, 0x13	; 19
    1822:	0f b6       	in	r0, 0x3f	; 63
    1824:	f8 94       	cli
    1826:	de bf       	out	0x3e, r29	; 62
    1828:	0f be       	out	0x3f, r0	; 63
    182a:	cd bf       	out	0x3d, r28	; 61
    182c:	cf 91       	pop	r28
    182e:	df 91       	pop	r29
    1830:	1f 91       	pop	r17
    1832:	0f 91       	pop	r16
    1834:	ff 90       	pop	r15
    1836:	ef 90       	pop	r14
    1838:	df 90       	pop	r13
    183a:	cf 90       	pop	r12
    183c:	bf 90       	pop	r11
    183e:	af 90       	pop	r10
    1840:	9f 90       	pop	r9
    1842:	8f 90       	pop	r8
    1844:	7f 90       	pop	r7
    1846:	6f 90       	pop	r6
    1848:	5f 90       	pop	r5
    184a:	4f 90       	pop	r4
    184c:	3f 90       	pop	r3
    184e:	2f 90       	pop	r2
    1850:	08 95       	ret

00001852 <__subsf3>:
    1852:	50 58       	subi	r21, 0x80	; 128

00001854 <__addsf3>:
    1854:	bb 27       	eor	r27, r27
    1856:	aa 27       	eor	r26, r26
    1858:	0e d0       	rcall	.+28     	; 0x1876 <__addsf3x>
    185a:	1c c1       	rjmp	.+568    	; 0x1a94 <__fp_round>
    185c:	0d d1       	rcall	.+538    	; 0x1a78 <__fp_pscA>
    185e:	30 f0       	brcs	.+12     	; 0x186c <__addsf3+0x18>
    1860:	12 d1       	rcall	.+548    	; 0x1a86 <__fp_pscB>
    1862:	20 f0       	brcs	.+8      	; 0x186c <__addsf3+0x18>
    1864:	31 f4       	brne	.+12     	; 0x1872 <__addsf3+0x1e>
    1866:	9f 3f       	cpi	r25, 0xFF	; 255
    1868:	11 f4       	brne	.+4      	; 0x186e <__addsf3+0x1a>
    186a:	1e f4       	brtc	.+6      	; 0x1872 <__addsf3+0x1e>
    186c:	02 c1       	rjmp	.+516    	; 0x1a72 <__fp_nan>
    186e:	0e f4       	brtc	.+2      	; 0x1872 <__addsf3+0x1e>
    1870:	e0 95       	com	r30
    1872:	e7 fb       	bst	r30, 7
    1874:	f8 c0       	rjmp	.+496    	; 0x1a66 <__fp_inf>

00001876 <__addsf3x>:
    1876:	e9 2f       	mov	r30, r25
    1878:	1e d1       	rcall	.+572    	; 0x1ab6 <__fp_split3>
    187a:	80 f3       	brcs	.-32     	; 0x185c <__addsf3+0x8>
    187c:	ba 17       	cp	r27, r26
    187e:	62 07       	cpc	r22, r18
    1880:	73 07       	cpc	r23, r19
    1882:	84 07       	cpc	r24, r20
    1884:	95 07       	cpc	r25, r21
    1886:	18 f0       	brcs	.+6      	; 0x188e <__addsf3x+0x18>
    1888:	71 f4       	brne	.+28     	; 0x18a6 <__addsf3x+0x30>
    188a:	9e f5       	brtc	.+102    	; 0x18f2 <__addsf3x+0x7c>
    188c:	36 c1       	rjmp	.+620    	; 0x1afa <__fp_zero>
    188e:	0e f4       	brtc	.+2      	; 0x1892 <__addsf3x+0x1c>
    1890:	e0 95       	com	r30
    1892:	0b 2e       	mov	r0, r27
    1894:	ba 2f       	mov	r27, r26
    1896:	a0 2d       	mov	r26, r0
    1898:	0b 01       	movw	r0, r22
    189a:	b9 01       	movw	r22, r18
    189c:	90 01       	movw	r18, r0
    189e:	0c 01       	movw	r0, r24
    18a0:	ca 01       	movw	r24, r20
    18a2:	a0 01       	movw	r20, r0
    18a4:	11 24       	eor	r1, r1
    18a6:	ff 27       	eor	r31, r31
    18a8:	59 1b       	sub	r21, r25
    18aa:	99 f0       	breq	.+38     	; 0x18d2 <__addsf3x+0x5c>
    18ac:	59 3f       	cpi	r21, 0xF9	; 249
    18ae:	50 f4       	brcc	.+20     	; 0x18c4 <__addsf3x+0x4e>
    18b0:	50 3e       	cpi	r21, 0xE0	; 224
    18b2:	68 f1       	brcs	.+90     	; 0x190e <__addsf3x+0x98>
    18b4:	1a 16       	cp	r1, r26
    18b6:	f0 40       	sbci	r31, 0x00	; 0
    18b8:	a2 2f       	mov	r26, r18
    18ba:	23 2f       	mov	r18, r19
    18bc:	34 2f       	mov	r19, r20
    18be:	44 27       	eor	r20, r20
    18c0:	58 5f       	subi	r21, 0xF8	; 248
    18c2:	f3 cf       	rjmp	.-26     	; 0x18aa <__addsf3x+0x34>
    18c4:	46 95       	lsr	r20
    18c6:	37 95       	ror	r19
    18c8:	27 95       	ror	r18
    18ca:	a7 95       	ror	r26
    18cc:	f0 40       	sbci	r31, 0x00	; 0
    18ce:	53 95       	inc	r21
    18d0:	c9 f7       	brne	.-14     	; 0x18c4 <__addsf3x+0x4e>
    18d2:	7e f4       	brtc	.+30     	; 0x18f2 <__addsf3x+0x7c>
    18d4:	1f 16       	cp	r1, r31
    18d6:	ba 0b       	sbc	r27, r26
    18d8:	62 0b       	sbc	r22, r18
    18da:	73 0b       	sbc	r23, r19
    18dc:	84 0b       	sbc	r24, r20
    18de:	ba f0       	brmi	.+46     	; 0x190e <__addsf3x+0x98>
    18e0:	91 50       	subi	r25, 0x01	; 1
    18e2:	a1 f0       	breq	.+40     	; 0x190c <__addsf3x+0x96>
    18e4:	ff 0f       	add	r31, r31
    18e6:	bb 1f       	adc	r27, r27
    18e8:	66 1f       	adc	r22, r22
    18ea:	77 1f       	adc	r23, r23
    18ec:	88 1f       	adc	r24, r24
    18ee:	c2 f7       	brpl	.-16     	; 0x18e0 <__addsf3x+0x6a>
    18f0:	0e c0       	rjmp	.+28     	; 0x190e <__addsf3x+0x98>
    18f2:	ba 0f       	add	r27, r26
    18f4:	62 1f       	adc	r22, r18
    18f6:	73 1f       	adc	r23, r19
    18f8:	84 1f       	adc	r24, r20
    18fa:	48 f4       	brcc	.+18     	; 0x190e <__addsf3x+0x98>
    18fc:	87 95       	ror	r24
    18fe:	77 95       	ror	r23
    1900:	67 95       	ror	r22
    1902:	b7 95       	ror	r27
    1904:	f7 95       	ror	r31
    1906:	9e 3f       	cpi	r25, 0xFE	; 254
    1908:	08 f0       	brcs	.+2      	; 0x190c <__addsf3x+0x96>
    190a:	b3 cf       	rjmp	.-154    	; 0x1872 <__addsf3+0x1e>
    190c:	93 95       	inc	r25
    190e:	88 0f       	add	r24, r24
    1910:	08 f0       	brcs	.+2      	; 0x1914 <__addsf3x+0x9e>
    1912:	99 27       	eor	r25, r25
    1914:	ee 0f       	add	r30, r30
    1916:	97 95       	ror	r25
    1918:	87 95       	ror	r24
    191a:	08 95       	ret

0000191c <__divsf3>:
    191c:	0c d0       	rcall	.+24     	; 0x1936 <__divsf3x>
    191e:	ba c0       	rjmp	.+372    	; 0x1a94 <__fp_round>
    1920:	b2 d0       	rcall	.+356    	; 0x1a86 <__fp_pscB>
    1922:	40 f0       	brcs	.+16     	; 0x1934 <__divsf3+0x18>
    1924:	a9 d0       	rcall	.+338    	; 0x1a78 <__fp_pscA>
    1926:	30 f0       	brcs	.+12     	; 0x1934 <__divsf3+0x18>
    1928:	21 f4       	brne	.+8      	; 0x1932 <__divsf3+0x16>
    192a:	5f 3f       	cpi	r21, 0xFF	; 255
    192c:	19 f0       	breq	.+6      	; 0x1934 <__divsf3+0x18>
    192e:	9b c0       	rjmp	.+310    	; 0x1a66 <__fp_inf>
    1930:	51 11       	cpse	r21, r1
    1932:	e4 c0       	rjmp	.+456    	; 0x1afc <__fp_szero>
    1934:	9e c0       	rjmp	.+316    	; 0x1a72 <__fp_nan>

00001936 <__divsf3x>:
    1936:	bf d0       	rcall	.+382    	; 0x1ab6 <__fp_split3>
    1938:	98 f3       	brcs	.-26     	; 0x1920 <__divsf3+0x4>

0000193a <__divsf3_pse>:
    193a:	99 23       	and	r25, r25
    193c:	c9 f3       	breq	.-14     	; 0x1930 <__divsf3+0x14>
    193e:	55 23       	and	r21, r21
    1940:	b1 f3       	breq	.-20     	; 0x192e <__divsf3+0x12>
    1942:	95 1b       	sub	r25, r21
    1944:	55 0b       	sbc	r21, r21
    1946:	bb 27       	eor	r27, r27
    1948:	aa 27       	eor	r26, r26
    194a:	62 17       	cp	r22, r18
    194c:	73 07       	cpc	r23, r19
    194e:	84 07       	cpc	r24, r20
    1950:	38 f0       	brcs	.+14     	; 0x1960 <__divsf3_pse+0x26>
    1952:	9f 5f       	subi	r25, 0xFF	; 255
    1954:	5f 4f       	sbci	r21, 0xFF	; 255
    1956:	22 0f       	add	r18, r18
    1958:	33 1f       	adc	r19, r19
    195a:	44 1f       	adc	r20, r20
    195c:	aa 1f       	adc	r26, r26
    195e:	a9 f3       	breq	.-22     	; 0x194a <__divsf3_pse+0x10>
    1960:	33 d0       	rcall	.+102    	; 0x19c8 <__divsf3_pse+0x8e>
    1962:	0e 2e       	mov	r0, r30
    1964:	3a f0       	brmi	.+14     	; 0x1974 <__divsf3_pse+0x3a>
    1966:	e0 e8       	ldi	r30, 0x80	; 128
    1968:	30 d0       	rcall	.+96     	; 0x19ca <__divsf3_pse+0x90>
    196a:	91 50       	subi	r25, 0x01	; 1
    196c:	50 40       	sbci	r21, 0x00	; 0
    196e:	e6 95       	lsr	r30
    1970:	00 1c       	adc	r0, r0
    1972:	ca f7       	brpl	.-14     	; 0x1966 <__divsf3_pse+0x2c>
    1974:	29 d0       	rcall	.+82     	; 0x19c8 <__divsf3_pse+0x8e>
    1976:	fe 2f       	mov	r31, r30
    1978:	27 d0       	rcall	.+78     	; 0x19c8 <__divsf3_pse+0x8e>
    197a:	66 0f       	add	r22, r22
    197c:	77 1f       	adc	r23, r23
    197e:	88 1f       	adc	r24, r24
    1980:	bb 1f       	adc	r27, r27
    1982:	26 17       	cp	r18, r22
    1984:	37 07       	cpc	r19, r23
    1986:	48 07       	cpc	r20, r24
    1988:	ab 07       	cpc	r26, r27
    198a:	b0 e8       	ldi	r27, 0x80	; 128
    198c:	09 f0       	breq	.+2      	; 0x1990 <__divsf3_pse+0x56>
    198e:	bb 0b       	sbc	r27, r27
    1990:	80 2d       	mov	r24, r0
    1992:	bf 01       	movw	r22, r30
    1994:	ff 27       	eor	r31, r31
    1996:	93 58       	subi	r25, 0x83	; 131
    1998:	5f 4f       	sbci	r21, 0xFF	; 255
    199a:	2a f0       	brmi	.+10     	; 0x19a6 <__divsf3_pse+0x6c>
    199c:	9e 3f       	cpi	r25, 0xFE	; 254
    199e:	51 05       	cpc	r21, r1
    19a0:	68 f0       	brcs	.+26     	; 0x19bc <__divsf3_pse+0x82>
    19a2:	61 c0       	rjmp	.+194    	; 0x1a66 <__fp_inf>
    19a4:	ab c0       	rjmp	.+342    	; 0x1afc <__fp_szero>
    19a6:	5f 3f       	cpi	r21, 0xFF	; 255
    19a8:	ec f3       	brlt	.-6      	; 0x19a4 <__divsf3_pse+0x6a>
    19aa:	98 3e       	cpi	r25, 0xE8	; 232
    19ac:	dc f3       	brlt	.-10     	; 0x19a4 <__divsf3_pse+0x6a>
    19ae:	86 95       	lsr	r24
    19b0:	77 95       	ror	r23
    19b2:	67 95       	ror	r22
    19b4:	b7 95       	ror	r27
    19b6:	f7 95       	ror	r31
    19b8:	9f 5f       	subi	r25, 0xFF	; 255
    19ba:	c9 f7       	brne	.-14     	; 0x19ae <__divsf3_pse+0x74>
    19bc:	88 0f       	add	r24, r24
    19be:	91 1d       	adc	r25, r1
    19c0:	96 95       	lsr	r25
    19c2:	87 95       	ror	r24
    19c4:	97 f9       	bld	r25, 7
    19c6:	08 95       	ret
    19c8:	e1 e0       	ldi	r30, 0x01	; 1
    19ca:	66 0f       	add	r22, r22
    19cc:	77 1f       	adc	r23, r23
    19ce:	88 1f       	adc	r24, r24
    19d0:	bb 1f       	adc	r27, r27
    19d2:	62 17       	cp	r22, r18
    19d4:	73 07       	cpc	r23, r19
    19d6:	84 07       	cpc	r24, r20
    19d8:	ba 07       	cpc	r27, r26
    19da:	20 f0       	brcs	.+8      	; 0x19e4 <__divsf3_pse+0xaa>
    19dc:	62 1b       	sub	r22, r18
    19de:	73 0b       	sbc	r23, r19
    19e0:	84 0b       	sbc	r24, r20
    19e2:	ba 0b       	sbc	r27, r26
    19e4:	ee 1f       	adc	r30, r30
    19e6:	88 f7       	brcc	.-30     	; 0x19ca <__divsf3_pse+0x90>
    19e8:	e0 95       	com	r30
    19ea:	08 95       	ret

000019ec <__floatunsisf>:
    19ec:	e8 94       	clt
    19ee:	09 c0       	rjmp	.+18     	; 0x1a02 <__floatsisf+0x12>

000019f0 <__floatsisf>:
    19f0:	97 fb       	bst	r25, 7
    19f2:	3e f4       	brtc	.+14     	; 0x1a02 <__floatsisf+0x12>
    19f4:	90 95       	com	r25
    19f6:	80 95       	com	r24
    19f8:	70 95       	com	r23
    19fa:	61 95       	neg	r22
    19fc:	7f 4f       	sbci	r23, 0xFF	; 255
    19fe:	8f 4f       	sbci	r24, 0xFF	; 255
    1a00:	9f 4f       	sbci	r25, 0xFF	; 255
    1a02:	99 23       	and	r25, r25
    1a04:	a9 f0       	breq	.+42     	; 0x1a30 <__floatsisf+0x40>
    1a06:	f9 2f       	mov	r31, r25
    1a08:	96 e9       	ldi	r25, 0x96	; 150
    1a0a:	bb 27       	eor	r27, r27
    1a0c:	93 95       	inc	r25
    1a0e:	f6 95       	lsr	r31
    1a10:	87 95       	ror	r24
    1a12:	77 95       	ror	r23
    1a14:	67 95       	ror	r22
    1a16:	b7 95       	ror	r27
    1a18:	f1 11       	cpse	r31, r1
    1a1a:	f8 cf       	rjmp	.-16     	; 0x1a0c <__floatsisf+0x1c>
    1a1c:	fa f4       	brpl	.+62     	; 0x1a5c <__floatsisf+0x6c>
    1a1e:	bb 0f       	add	r27, r27
    1a20:	11 f4       	brne	.+4      	; 0x1a26 <__floatsisf+0x36>
    1a22:	60 ff       	sbrs	r22, 0
    1a24:	1b c0       	rjmp	.+54     	; 0x1a5c <__floatsisf+0x6c>
    1a26:	6f 5f       	subi	r22, 0xFF	; 255
    1a28:	7f 4f       	sbci	r23, 0xFF	; 255
    1a2a:	8f 4f       	sbci	r24, 0xFF	; 255
    1a2c:	9f 4f       	sbci	r25, 0xFF	; 255
    1a2e:	16 c0       	rjmp	.+44     	; 0x1a5c <__floatsisf+0x6c>
    1a30:	88 23       	and	r24, r24
    1a32:	11 f0       	breq	.+4      	; 0x1a38 <__floatsisf+0x48>
    1a34:	96 e9       	ldi	r25, 0x96	; 150
    1a36:	11 c0       	rjmp	.+34     	; 0x1a5a <__floatsisf+0x6a>
    1a38:	77 23       	and	r23, r23
    1a3a:	21 f0       	breq	.+8      	; 0x1a44 <__floatsisf+0x54>
    1a3c:	9e e8       	ldi	r25, 0x8E	; 142
    1a3e:	87 2f       	mov	r24, r23
    1a40:	76 2f       	mov	r23, r22
    1a42:	05 c0       	rjmp	.+10     	; 0x1a4e <__floatsisf+0x5e>
    1a44:	66 23       	and	r22, r22
    1a46:	71 f0       	breq	.+28     	; 0x1a64 <__floatsisf+0x74>
    1a48:	96 e8       	ldi	r25, 0x86	; 134
    1a4a:	86 2f       	mov	r24, r22
    1a4c:	70 e0       	ldi	r23, 0x00	; 0
    1a4e:	60 e0       	ldi	r22, 0x00	; 0
    1a50:	2a f0       	brmi	.+10     	; 0x1a5c <__floatsisf+0x6c>
    1a52:	9a 95       	dec	r25
    1a54:	66 0f       	add	r22, r22
    1a56:	77 1f       	adc	r23, r23
    1a58:	88 1f       	adc	r24, r24
    1a5a:	da f7       	brpl	.-10     	; 0x1a52 <__floatsisf+0x62>
    1a5c:	88 0f       	add	r24, r24
    1a5e:	96 95       	lsr	r25
    1a60:	87 95       	ror	r24
    1a62:	97 f9       	bld	r25, 7
    1a64:	08 95       	ret

00001a66 <__fp_inf>:
    1a66:	97 f9       	bld	r25, 7
    1a68:	9f 67       	ori	r25, 0x7F	; 127
    1a6a:	80 e8       	ldi	r24, 0x80	; 128
    1a6c:	70 e0       	ldi	r23, 0x00	; 0
    1a6e:	60 e0       	ldi	r22, 0x00	; 0
    1a70:	08 95       	ret

00001a72 <__fp_nan>:
    1a72:	9f ef       	ldi	r25, 0xFF	; 255
    1a74:	80 ec       	ldi	r24, 0xC0	; 192
    1a76:	08 95       	ret

00001a78 <__fp_pscA>:
    1a78:	00 24       	eor	r0, r0
    1a7a:	0a 94       	dec	r0
    1a7c:	16 16       	cp	r1, r22
    1a7e:	17 06       	cpc	r1, r23
    1a80:	18 06       	cpc	r1, r24
    1a82:	09 06       	cpc	r0, r25
    1a84:	08 95       	ret

00001a86 <__fp_pscB>:
    1a86:	00 24       	eor	r0, r0
    1a88:	0a 94       	dec	r0
    1a8a:	12 16       	cp	r1, r18
    1a8c:	13 06       	cpc	r1, r19
    1a8e:	14 06       	cpc	r1, r20
    1a90:	05 06       	cpc	r0, r21
    1a92:	08 95       	ret

00001a94 <__fp_round>:
    1a94:	09 2e       	mov	r0, r25
    1a96:	03 94       	inc	r0
    1a98:	00 0c       	add	r0, r0
    1a9a:	11 f4       	brne	.+4      	; 0x1aa0 <__fp_round+0xc>
    1a9c:	88 23       	and	r24, r24
    1a9e:	52 f0       	brmi	.+20     	; 0x1ab4 <__fp_round+0x20>
    1aa0:	bb 0f       	add	r27, r27
    1aa2:	40 f4       	brcc	.+16     	; 0x1ab4 <__fp_round+0x20>
    1aa4:	bf 2b       	or	r27, r31
    1aa6:	11 f4       	brne	.+4      	; 0x1aac <__fp_round+0x18>
    1aa8:	60 ff       	sbrs	r22, 0
    1aaa:	04 c0       	rjmp	.+8      	; 0x1ab4 <__fp_round+0x20>
    1aac:	6f 5f       	subi	r22, 0xFF	; 255
    1aae:	7f 4f       	sbci	r23, 0xFF	; 255
    1ab0:	8f 4f       	sbci	r24, 0xFF	; 255
    1ab2:	9f 4f       	sbci	r25, 0xFF	; 255
    1ab4:	08 95       	ret

00001ab6 <__fp_split3>:
    1ab6:	57 fd       	sbrc	r21, 7
    1ab8:	90 58       	subi	r25, 0x80	; 128
    1aba:	44 0f       	add	r20, r20
    1abc:	55 1f       	adc	r21, r21
    1abe:	59 f0       	breq	.+22     	; 0x1ad6 <__fp_splitA+0x10>
    1ac0:	5f 3f       	cpi	r21, 0xFF	; 255
    1ac2:	71 f0       	breq	.+28     	; 0x1ae0 <__fp_splitA+0x1a>
    1ac4:	47 95       	ror	r20

00001ac6 <__fp_splitA>:
    1ac6:	88 0f       	add	r24, r24
    1ac8:	97 fb       	bst	r25, 7
    1aca:	99 1f       	adc	r25, r25
    1acc:	61 f0       	breq	.+24     	; 0x1ae6 <__fp_splitA+0x20>
    1ace:	9f 3f       	cpi	r25, 0xFF	; 255
    1ad0:	79 f0       	breq	.+30     	; 0x1af0 <__fp_splitA+0x2a>
    1ad2:	87 95       	ror	r24
    1ad4:	08 95       	ret
    1ad6:	12 16       	cp	r1, r18
    1ad8:	13 06       	cpc	r1, r19
    1ada:	14 06       	cpc	r1, r20
    1adc:	55 1f       	adc	r21, r21
    1ade:	f2 cf       	rjmp	.-28     	; 0x1ac4 <__fp_split3+0xe>
    1ae0:	46 95       	lsr	r20
    1ae2:	f1 df       	rcall	.-30     	; 0x1ac6 <__fp_splitA>
    1ae4:	08 c0       	rjmp	.+16     	; 0x1af6 <__fp_splitA+0x30>
    1ae6:	16 16       	cp	r1, r22
    1ae8:	17 06       	cpc	r1, r23
    1aea:	18 06       	cpc	r1, r24
    1aec:	99 1f       	adc	r25, r25
    1aee:	f1 cf       	rjmp	.-30     	; 0x1ad2 <__fp_splitA+0xc>
    1af0:	86 95       	lsr	r24
    1af2:	71 05       	cpc	r23, r1
    1af4:	61 05       	cpc	r22, r1
    1af6:	08 94       	sec
    1af8:	08 95       	ret

00001afa <__fp_zero>:
    1afa:	e8 94       	clt

00001afc <__fp_szero>:
    1afc:	bb 27       	eor	r27, r27
    1afe:	66 27       	eor	r22, r22
    1b00:	77 27       	eor	r23, r23
    1b02:	cb 01       	movw	r24, r22
    1b04:	97 f9       	bld	r25, 7
    1b06:	08 95       	ret

00001b08 <__mulsf3>:
    1b08:	0b d0       	rcall	.+22     	; 0x1b20 <__mulsf3x>
    1b0a:	c4 cf       	rjmp	.-120    	; 0x1a94 <__fp_round>
    1b0c:	b5 df       	rcall	.-150    	; 0x1a78 <__fp_pscA>
    1b0e:	28 f0       	brcs	.+10     	; 0x1b1a <__mulsf3+0x12>
    1b10:	ba df       	rcall	.-140    	; 0x1a86 <__fp_pscB>
    1b12:	18 f0       	brcs	.+6      	; 0x1b1a <__mulsf3+0x12>
    1b14:	95 23       	and	r25, r21
    1b16:	09 f0       	breq	.+2      	; 0x1b1a <__mulsf3+0x12>
    1b18:	a6 cf       	rjmp	.-180    	; 0x1a66 <__fp_inf>
    1b1a:	ab cf       	rjmp	.-170    	; 0x1a72 <__fp_nan>
    1b1c:	11 24       	eor	r1, r1
    1b1e:	ee cf       	rjmp	.-36     	; 0x1afc <__fp_szero>

00001b20 <__mulsf3x>:
    1b20:	ca df       	rcall	.-108    	; 0x1ab6 <__fp_split3>
    1b22:	a0 f3       	brcs	.-24     	; 0x1b0c <__mulsf3+0x4>

00001b24 <__mulsf3_pse>:
    1b24:	95 9f       	mul	r25, r21
    1b26:	d1 f3       	breq	.-12     	; 0x1b1c <__mulsf3+0x14>
    1b28:	95 0f       	add	r25, r21
    1b2a:	50 e0       	ldi	r21, 0x00	; 0
    1b2c:	55 1f       	adc	r21, r21
    1b2e:	62 9f       	mul	r22, r18
    1b30:	f0 01       	movw	r30, r0
    1b32:	72 9f       	mul	r23, r18
    1b34:	bb 27       	eor	r27, r27
    1b36:	f0 0d       	add	r31, r0
    1b38:	b1 1d       	adc	r27, r1
    1b3a:	63 9f       	mul	r22, r19
    1b3c:	aa 27       	eor	r26, r26
    1b3e:	f0 0d       	add	r31, r0
    1b40:	b1 1d       	adc	r27, r1
    1b42:	aa 1f       	adc	r26, r26
    1b44:	64 9f       	mul	r22, r20
    1b46:	66 27       	eor	r22, r22
    1b48:	b0 0d       	add	r27, r0
    1b4a:	a1 1d       	adc	r26, r1
    1b4c:	66 1f       	adc	r22, r22
    1b4e:	82 9f       	mul	r24, r18
    1b50:	22 27       	eor	r18, r18
    1b52:	b0 0d       	add	r27, r0
    1b54:	a1 1d       	adc	r26, r1
    1b56:	62 1f       	adc	r22, r18
    1b58:	73 9f       	mul	r23, r19
    1b5a:	b0 0d       	add	r27, r0
    1b5c:	a1 1d       	adc	r26, r1
    1b5e:	62 1f       	adc	r22, r18
    1b60:	83 9f       	mul	r24, r19
    1b62:	a0 0d       	add	r26, r0
    1b64:	61 1d       	adc	r22, r1
    1b66:	22 1f       	adc	r18, r18
    1b68:	74 9f       	mul	r23, r20
    1b6a:	33 27       	eor	r19, r19
    1b6c:	a0 0d       	add	r26, r0
    1b6e:	61 1d       	adc	r22, r1
    1b70:	23 1f       	adc	r18, r19
    1b72:	84 9f       	mul	r24, r20
    1b74:	60 0d       	add	r22, r0
    1b76:	21 1d       	adc	r18, r1
    1b78:	82 2f       	mov	r24, r18
    1b7a:	76 2f       	mov	r23, r22
    1b7c:	6a 2f       	mov	r22, r26
    1b7e:	11 24       	eor	r1, r1
    1b80:	9f 57       	subi	r25, 0x7F	; 127
    1b82:	50 40       	sbci	r21, 0x00	; 0
    1b84:	8a f0       	brmi	.+34     	; 0x1ba8 <__mulsf3_pse+0x84>
    1b86:	e1 f0       	breq	.+56     	; 0x1bc0 <__mulsf3_pse+0x9c>
    1b88:	88 23       	and	r24, r24
    1b8a:	4a f0       	brmi	.+18     	; 0x1b9e <__mulsf3_pse+0x7a>
    1b8c:	ee 0f       	add	r30, r30
    1b8e:	ff 1f       	adc	r31, r31
    1b90:	bb 1f       	adc	r27, r27
    1b92:	66 1f       	adc	r22, r22
    1b94:	77 1f       	adc	r23, r23
    1b96:	88 1f       	adc	r24, r24
    1b98:	91 50       	subi	r25, 0x01	; 1
    1b9a:	50 40       	sbci	r21, 0x00	; 0
    1b9c:	a9 f7       	brne	.-22     	; 0x1b88 <__mulsf3_pse+0x64>
    1b9e:	9e 3f       	cpi	r25, 0xFE	; 254
    1ba0:	51 05       	cpc	r21, r1
    1ba2:	70 f0       	brcs	.+28     	; 0x1bc0 <__mulsf3_pse+0x9c>
    1ba4:	60 cf       	rjmp	.-320    	; 0x1a66 <__fp_inf>
    1ba6:	aa cf       	rjmp	.-172    	; 0x1afc <__fp_szero>
    1ba8:	5f 3f       	cpi	r21, 0xFF	; 255
    1baa:	ec f3       	brlt	.-6      	; 0x1ba6 <__mulsf3_pse+0x82>
    1bac:	98 3e       	cpi	r25, 0xE8	; 232
    1bae:	dc f3       	brlt	.-10     	; 0x1ba6 <__mulsf3_pse+0x82>
    1bb0:	86 95       	lsr	r24
    1bb2:	77 95       	ror	r23
    1bb4:	67 95       	ror	r22
    1bb6:	b7 95       	ror	r27
    1bb8:	f7 95       	ror	r31
    1bba:	e7 95       	ror	r30
    1bbc:	9f 5f       	subi	r25, 0xFF	; 255
    1bbe:	c1 f7       	brne	.-16     	; 0x1bb0 <__mulsf3_pse+0x8c>
    1bc0:	fe 2b       	or	r31, r30
    1bc2:	88 0f       	add	r24, r24
    1bc4:	91 1d       	adc	r25, r1
    1bc6:	96 95       	lsr	r25
    1bc8:	87 95       	ror	r24
    1bca:	97 f9       	bld	r25, 7
    1bcc:	08 95       	ret

00001bce <__udivmodqi4>:
    1bce:	99 1b       	sub	r25, r25
    1bd0:	79 e0       	ldi	r23, 0x09	; 9
    1bd2:	04 c0       	rjmp	.+8      	; 0x1bdc <__udivmodqi4_ep>

00001bd4 <__udivmodqi4_loop>:
    1bd4:	99 1f       	adc	r25, r25
    1bd6:	96 17       	cp	r25, r22
    1bd8:	08 f0       	brcs	.+2      	; 0x1bdc <__udivmodqi4_ep>
    1bda:	96 1b       	sub	r25, r22

00001bdc <__udivmodqi4_ep>:
    1bdc:	88 1f       	adc	r24, r24
    1bde:	7a 95       	dec	r23
    1be0:	c9 f7       	brne	.-14     	; 0x1bd4 <__udivmodqi4_loop>
    1be2:	80 95       	com	r24
    1be4:	08 95       	ret

00001be6 <__divmodhi4>:
    1be6:	97 fb       	bst	r25, 7
    1be8:	09 2e       	mov	r0, r25
    1bea:	07 26       	eor	r0, r23
    1bec:	0a d0       	rcall	.+20     	; 0x1c02 <__divmodhi4_neg1>
    1bee:	77 fd       	sbrc	r23, 7
    1bf0:	04 d0       	rcall	.+8      	; 0x1bfa <__divmodhi4_neg2>
    1bf2:	0c d0       	rcall	.+24     	; 0x1c0c <__udivmodhi4>
    1bf4:	06 d0       	rcall	.+12     	; 0x1c02 <__divmodhi4_neg1>
    1bf6:	00 20       	and	r0, r0
    1bf8:	1a f4       	brpl	.+6      	; 0x1c00 <__divmodhi4_exit>

00001bfa <__divmodhi4_neg2>:
    1bfa:	70 95       	com	r23
    1bfc:	61 95       	neg	r22
    1bfe:	7f 4f       	sbci	r23, 0xFF	; 255

00001c00 <__divmodhi4_exit>:
    1c00:	08 95       	ret

00001c02 <__divmodhi4_neg1>:
    1c02:	f6 f7       	brtc	.-4      	; 0x1c00 <__divmodhi4_exit>
    1c04:	90 95       	com	r25
    1c06:	81 95       	neg	r24
    1c08:	9f 4f       	sbci	r25, 0xFF	; 255
    1c0a:	08 95       	ret

00001c0c <__udivmodhi4>:
    1c0c:	aa 1b       	sub	r26, r26
    1c0e:	bb 1b       	sub	r27, r27
    1c10:	51 e1       	ldi	r21, 0x11	; 17
    1c12:	07 c0       	rjmp	.+14     	; 0x1c22 <__udivmodhi4_ep>

00001c14 <__udivmodhi4_loop>:
    1c14:	aa 1f       	adc	r26, r26
    1c16:	bb 1f       	adc	r27, r27
    1c18:	a6 17       	cp	r26, r22
    1c1a:	b7 07       	cpc	r27, r23
    1c1c:	10 f0       	brcs	.+4      	; 0x1c22 <__udivmodhi4_ep>
    1c1e:	a6 1b       	sub	r26, r22
    1c20:	b7 0b       	sbc	r27, r23

00001c22 <__udivmodhi4_ep>:
    1c22:	88 1f       	adc	r24, r24
    1c24:	99 1f       	adc	r25, r25
    1c26:	5a 95       	dec	r21
    1c28:	a9 f7       	brne	.-22     	; 0x1c14 <__udivmodhi4_loop>
    1c2a:	80 95       	com	r24
    1c2c:	90 95       	com	r25
    1c2e:	bc 01       	movw	r22, r24
    1c30:	cd 01       	movw	r24, r26
    1c32:	08 95       	ret

00001c34 <__ftoa_engine>:
    1c34:	28 30       	cpi	r18, 0x08	; 8
    1c36:	08 f0       	brcs	.+2      	; 0x1c3a <__ftoa_engine+0x6>
    1c38:	27 e0       	ldi	r18, 0x07	; 7
    1c3a:	33 27       	eor	r19, r19
    1c3c:	da 01       	movw	r26, r20
    1c3e:	99 0f       	add	r25, r25
    1c40:	31 1d       	adc	r19, r1
    1c42:	87 fd       	sbrc	r24, 7
    1c44:	91 60       	ori	r25, 0x01	; 1
    1c46:	00 96       	adiw	r24, 0x00	; 0
    1c48:	61 05       	cpc	r22, r1
    1c4a:	71 05       	cpc	r23, r1
    1c4c:	39 f4       	brne	.+14     	; 0x1c5c <__ftoa_engine+0x28>
    1c4e:	32 60       	ori	r19, 0x02	; 2
    1c50:	2e 5f       	subi	r18, 0xFE	; 254
    1c52:	3d 93       	st	X+, r19
    1c54:	30 e3       	ldi	r19, 0x30	; 48
    1c56:	2a 95       	dec	r18
    1c58:	e1 f7       	brne	.-8      	; 0x1c52 <__ftoa_engine+0x1e>
    1c5a:	08 95       	ret
    1c5c:	9f 3f       	cpi	r25, 0xFF	; 255
    1c5e:	30 f0       	brcs	.+12     	; 0x1c6c <__ftoa_engine+0x38>
    1c60:	80 38       	cpi	r24, 0x80	; 128
    1c62:	71 05       	cpc	r23, r1
    1c64:	61 05       	cpc	r22, r1
    1c66:	09 f0       	breq	.+2      	; 0x1c6a <__ftoa_engine+0x36>
    1c68:	3c 5f       	subi	r19, 0xFC	; 252
    1c6a:	3c 5f       	subi	r19, 0xFC	; 252
    1c6c:	3d 93       	st	X+, r19
    1c6e:	91 30       	cpi	r25, 0x01	; 1
    1c70:	08 f0       	brcs	.+2      	; 0x1c74 <__ftoa_engine+0x40>
    1c72:	80 68       	ori	r24, 0x80	; 128
    1c74:	91 1d       	adc	r25, r1
    1c76:	df 93       	push	r29
    1c78:	cf 93       	push	r28
    1c7a:	1f 93       	push	r17
    1c7c:	0f 93       	push	r16
    1c7e:	ff 92       	push	r15
    1c80:	ef 92       	push	r14
    1c82:	19 2f       	mov	r17, r25
    1c84:	98 7f       	andi	r25, 0xF8	; 248
    1c86:	96 95       	lsr	r25
    1c88:	e9 2f       	mov	r30, r25
    1c8a:	96 95       	lsr	r25
    1c8c:	96 95       	lsr	r25
    1c8e:	e9 0f       	add	r30, r25
    1c90:	ff 27       	eor	r31, r31
    1c92:	e2 51       	subi	r30, 0x12	; 18
    1c94:	ff 4f       	sbci	r31, 0xFF	; 255
    1c96:	99 27       	eor	r25, r25
    1c98:	33 27       	eor	r19, r19
    1c9a:	ee 24       	eor	r14, r14
    1c9c:	ff 24       	eor	r15, r15
    1c9e:	a7 01       	movw	r20, r14
    1ca0:	e7 01       	movw	r28, r14
    1ca2:	05 90       	lpm	r0, Z+
    1ca4:	08 94       	sec
    1ca6:	07 94       	ror	r0
    1ca8:	28 f4       	brcc	.+10     	; 0x1cb4 <__ftoa_engine+0x80>
    1caa:	36 0f       	add	r19, r22
    1cac:	e7 1e       	adc	r14, r23
    1cae:	f8 1e       	adc	r15, r24
    1cb0:	49 1f       	adc	r20, r25
    1cb2:	51 1d       	adc	r21, r1
    1cb4:	66 0f       	add	r22, r22
    1cb6:	77 1f       	adc	r23, r23
    1cb8:	88 1f       	adc	r24, r24
    1cba:	99 1f       	adc	r25, r25
    1cbc:	06 94       	lsr	r0
    1cbe:	a1 f7       	brne	.-24     	; 0x1ca8 <__ftoa_engine+0x74>
    1cc0:	05 90       	lpm	r0, Z+
    1cc2:	07 94       	ror	r0
    1cc4:	28 f4       	brcc	.+10     	; 0x1cd0 <__ftoa_engine+0x9c>
    1cc6:	e7 0e       	add	r14, r23
    1cc8:	f8 1e       	adc	r15, r24
    1cca:	49 1f       	adc	r20, r25
    1ccc:	56 1f       	adc	r21, r22
    1cce:	c1 1d       	adc	r28, r1
    1cd0:	77 0f       	add	r23, r23
    1cd2:	88 1f       	adc	r24, r24
    1cd4:	99 1f       	adc	r25, r25
    1cd6:	66 1f       	adc	r22, r22
    1cd8:	06 94       	lsr	r0
    1cda:	a1 f7       	brne	.-24     	; 0x1cc4 <__ftoa_engine+0x90>
    1cdc:	05 90       	lpm	r0, Z+
    1cde:	07 94       	ror	r0
    1ce0:	28 f4       	brcc	.+10     	; 0x1cec <__ftoa_engine+0xb8>
    1ce2:	f8 0e       	add	r15, r24
    1ce4:	49 1f       	adc	r20, r25
    1ce6:	56 1f       	adc	r21, r22
    1ce8:	c7 1f       	adc	r28, r23
    1cea:	d1 1d       	adc	r29, r1
    1cec:	88 0f       	add	r24, r24
    1cee:	99 1f       	adc	r25, r25
    1cf0:	66 1f       	adc	r22, r22
    1cf2:	77 1f       	adc	r23, r23
    1cf4:	06 94       	lsr	r0
    1cf6:	a1 f7       	brne	.-24     	; 0x1ce0 <__ftoa_engine+0xac>
    1cf8:	05 90       	lpm	r0, Z+
    1cfa:	07 94       	ror	r0
    1cfc:	20 f4       	brcc	.+8      	; 0x1d06 <__ftoa_engine+0xd2>
    1cfe:	49 0f       	add	r20, r25
    1d00:	56 1f       	adc	r21, r22
    1d02:	c7 1f       	adc	r28, r23
    1d04:	d8 1f       	adc	r29, r24
    1d06:	99 0f       	add	r25, r25
    1d08:	66 1f       	adc	r22, r22
    1d0a:	77 1f       	adc	r23, r23
    1d0c:	88 1f       	adc	r24, r24
    1d0e:	06 94       	lsr	r0
    1d10:	a9 f7       	brne	.-22     	; 0x1cfc <__ftoa_engine+0xc8>
    1d12:	84 91       	lpm	r24, Z+
    1d14:	10 95       	com	r17
    1d16:	17 70       	andi	r17, 0x07	; 7
    1d18:	41 f0       	breq	.+16     	; 0x1d2a <__ftoa_engine+0xf6>
    1d1a:	d6 95       	lsr	r29
    1d1c:	c7 95       	ror	r28
    1d1e:	57 95       	ror	r21
    1d20:	47 95       	ror	r20
    1d22:	f7 94       	ror	r15
    1d24:	e7 94       	ror	r14
    1d26:	1a 95       	dec	r17
    1d28:	c1 f7       	brne	.-16     	; 0x1d1a <__ftoa_engine+0xe6>
    1d2a:	e4 e9       	ldi	r30, 0x94	; 148
    1d2c:	f0 e0       	ldi	r31, 0x00	; 0
    1d2e:	68 94       	set
    1d30:	15 90       	lpm	r1, Z+
    1d32:	15 91       	lpm	r17, Z+
    1d34:	35 91       	lpm	r19, Z+
    1d36:	65 91       	lpm	r22, Z+
    1d38:	95 91       	lpm	r25, Z+
    1d3a:	05 90       	lpm	r0, Z+
    1d3c:	7f e2       	ldi	r23, 0x2F	; 47
    1d3e:	73 95       	inc	r23
    1d40:	e1 18       	sub	r14, r1
    1d42:	f1 0a       	sbc	r15, r17
    1d44:	43 0b       	sbc	r20, r19
    1d46:	56 0b       	sbc	r21, r22
    1d48:	c9 0b       	sbc	r28, r25
    1d4a:	d0 09       	sbc	r29, r0
    1d4c:	c0 f7       	brcc	.-16     	; 0x1d3e <__ftoa_engine+0x10a>
    1d4e:	e1 0c       	add	r14, r1
    1d50:	f1 1e       	adc	r15, r17
    1d52:	43 1f       	adc	r20, r19
    1d54:	56 1f       	adc	r21, r22
    1d56:	c9 1f       	adc	r28, r25
    1d58:	d0 1d       	adc	r29, r0
    1d5a:	7e f4       	brtc	.+30     	; 0x1d7a <__ftoa_engine+0x146>
    1d5c:	70 33       	cpi	r23, 0x30	; 48
    1d5e:	11 f4       	brne	.+4      	; 0x1d64 <__ftoa_engine+0x130>
    1d60:	8a 95       	dec	r24
    1d62:	e6 cf       	rjmp	.-52     	; 0x1d30 <__ftoa_engine+0xfc>
    1d64:	e8 94       	clt
    1d66:	01 50       	subi	r16, 0x01	; 1
    1d68:	30 f0       	brcs	.+12     	; 0x1d76 <__ftoa_engine+0x142>
    1d6a:	08 0f       	add	r16, r24
    1d6c:	0a f4       	brpl	.+2      	; 0x1d70 <__ftoa_engine+0x13c>
    1d6e:	00 27       	eor	r16, r16
    1d70:	02 17       	cp	r16, r18
    1d72:	08 f4       	brcc	.+2      	; 0x1d76 <__ftoa_engine+0x142>
    1d74:	20 2f       	mov	r18, r16
    1d76:	23 95       	inc	r18
    1d78:	02 2f       	mov	r16, r18
    1d7a:	7a 33       	cpi	r23, 0x3A	; 58
    1d7c:	28 f0       	brcs	.+10     	; 0x1d88 <__ftoa_engine+0x154>
    1d7e:	79 e3       	ldi	r23, 0x39	; 57
    1d80:	7d 93       	st	X+, r23
    1d82:	2a 95       	dec	r18
    1d84:	e9 f7       	brne	.-6      	; 0x1d80 <__ftoa_engine+0x14c>
    1d86:	10 c0       	rjmp	.+32     	; 0x1da8 <__ftoa_engine+0x174>
    1d88:	7d 93       	st	X+, r23
    1d8a:	2a 95       	dec	r18
    1d8c:	89 f6       	brne	.-94     	; 0x1d30 <__ftoa_engine+0xfc>
    1d8e:	06 94       	lsr	r0
    1d90:	97 95       	ror	r25
    1d92:	67 95       	ror	r22
    1d94:	37 95       	ror	r19
    1d96:	17 95       	ror	r17
    1d98:	17 94       	ror	r1
    1d9a:	e1 18       	sub	r14, r1
    1d9c:	f1 0a       	sbc	r15, r17
    1d9e:	43 0b       	sbc	r20, r19
    1da0:	56 0b       	sbc	r21, r22
    1da2:	c9 0b       	sbc	r28, r25
    1da4:	d0 09       	sbc	r29, r0
    1da6:	98 f0       	brcs	.+38     	; 0x1dce <__ftoa_engine+0x19a>
    1da8:	23 95       	inc	r18
    1daa:	7e 91       	ld	r23, -X
    1dac:	73 95       	inc	r23
    1dae:	7a 33       	cpi	r23, 0x3A	; 58
    1db0:	08 f0       	brcs	.+2      	; 0x1db4 <__ftoa_engine+0x180>
    1db2:	70 e3       	ldi	r23, 0x30	; 48
    1db4:	7c 93       	st	X, r23
    1db6:	20 13       	cpse	r18, r16
    1db8:	b8 f7       	brcc	.-18     	; 0x1da8 <__ftoa_engine+0x174>
    1dba:	7e 91       	ld	r23, -X
    1dbc:	70 61       	ori	r23, 0x10	; 16
    1dbe:	7d 93       	st	X+, r23
    1dc0:	30 f0       	brcs	.+12     	; 0x1dce <__ftoa_engine+0x19a>
    1dc2:	83 95       	inc	r24
    1dc4:	71 e3       	ldi	r23, 0x31	; 49
    1dc6:	7d 93       	st	X+, r23
    1dc8:	70 e3       	ldi	r23, 0x30	; 48
    1dca:	2a 95       	dec	r18
    1dcc:	e1 f7       	brne	.-8      	; 0x1dc6 <__ftoa_engine+0x192>
    1dce:	11 24       	eor	r1, r1
    1dd0:	ef 90       	pop	r14
    1dd2:	ff 90       	pop	r15
    1dd4:	0f 91       	pop	r16
    1dd6:	1f 91       	pop	r17
    1dd8:	cf 91       	pop	r28
    1dda:	df 91       	pop	r29
    1ddc:	99 27       	eor	r25, r25
    1dde:	87 fd       	sbrc	r24, 7
    1de0:	90 95       	com	r25
    1de2:	08 95       	ret

00001de4 <strnlen_P>:
    1de4:	fc 01       	movw	r30, r24
    1de6:	05 90       	lpm	r0, Z+
    1de8:	61 50       	subi	r22, 0x01	; 1
    1dea:	70 40       	sbci	r23, 0x00	; 0
    1dec:	01 10       	cpse	r0, r1
    1dee:	d8 f7       	brcc	.-10     	; 0x1de6 <strnlen_P+0x2>
    1df0:	80 95       	com	r24
    1df2:	90 95       	com	r25
    1df4:	8e 0f       	add	r24, r30
    1df6:	9f 1f       	adc	r25, r31
    1df8:	08 95       	ret

00001dfa <strnlen>:
    1dfa:	fc 01       	movw	r30, r24
    1dfc:	61 50       	subi	r22, 0x01	; 1
    1dfe:	70 40       	sbci	r23, 0x00	; 0
    1e00:	01 90       	ld	r0, Z+
    1e02:	01 10       	cpse	r0, r1
    1e04:	d8 f7       	brcc	.-10     	; 0x1dfc <strnlen+0x2>
    1e06:	80 95       	com	r24
    1e08:	90 95       	com	r25
    1e0a:	8e 0f       	add	r24, r30
    1e0c:	9f 1f       	adc	r25, r31
    1e0e:	08 95       	ret

00001e10 <fputc>:
    1e10:	0f 93       	push	r16
    1e12:	1f 93       	push	r17
    1e14:	cf 93       	push	r28
    1e16:	df 93       	push	r29
    1e18:	8c 01       	movw	r16, r24
    1e1a:	eb 01       	movw	r28, r22
    1e1c:	8b 81       	ldd	r24, Y+3	; 0x03
    1e1e:	81 ff       	sbrs	r24, 1
    1e20:	1b c0       	rjmp	.+54     	; 0x1e58 <fputc+0x48>
    1e22:	82 ff       	sbrs	r24, 2
    1e24:	0d c0       	rjmp	.+26     	; 0x1e40 <fputc+0x30>
    1e26:	2e 81       	ldd	r18, Y+6	; 0x06
    1e28:	3f 81       	ldd	r19, Y+7	; 0x07
    1e2a:	8c 81       	ldd	r24, Y+4	; 0x04
    1e2c:	9d 81       	ldd	r25, Y+5	; 0x05
    1e2e:	28 17       	cp	r18, r24
    1e30:	39 07       	cpc	r19, r25
    1e32:	64 f4       	brge	.+24     	; 0x1e4c <fputc+0x3c>
    1e34:	e8 81       	ld	r30, Y
    1e36:	f9 81       	ldd	r31, Y+1	; 0x01
    1e38:	01 93       	st	Z+, r16
    1e3a:	f9 83       	std	Y+1, r31	; 0x01
    1e3c:	e8 83       	st	Y, r30
    1e3e:	06 c0       	rjmp	.+12     	; 0x1e4c <fputc+0x3c>
    1e40:	e8 85       	ldd	r30, Y+8	; 0x08
    1e42:	f9 85       	ldd	r31, Y+9	; 0x09
    1e44:	80 2f       	mov	r24, r16
    1e46:	09 95       	icall
    1e48:	00 97       	sbiw	r24, 0x00	; 0
    1e4a:	31 f4       	brne	.+12     	; 0x1e58 <fputc+0x48>
    1e4c:	8e 81       	ldd	r24, Y+6	; 0x06
    1e4e:	9f 81       	ldd	r25, Y+7	; 0x07
    1e50:	01 96       	adiw	r24, 0x01	; 1
    1e52:	9f 83       	std	Y+7, r25	; 0x07
    1e54:	8e 83       	std	Y+6, r24	; 0x06
    1e56:	02 c0       	rjmp	.+4      	; 0x1e5c <fputc+0x4c>
    1e58:	0f ef       	ldi	r16, 0xFF	; 255
    1e5a:	1f ef       	ldi	r17, 0xFF	; 255
    1e5c:	c8 01       	movw	r24, r16
    1e5e:	df 91       	pop	r29
    1e60:	cf 91       	pop	r28
    1e62:	1f 91       	pop	r17
    1e64:	0f 91       	pop	r16
    1e66:	08 95       	ret

00001e68 <sprintf>:
    1e68:	0f 93       	push	r16
    1e6a:	1f 93       	push	r17
    1e6c:	df 93       	push	r29
    1e6e:	cf 93       	push	r28
    1e70:	cd b7       	in	r28, 0x3d	; 61
    1e72:	de b7       	in	r29, 0x3e	; 62
    1e74:	2e 97       	sbiw	r28, 0x0e	; 14
    1e76:	0f b6       	in	r0, 0x3f	; 63
    1e78:	f8 94       	cli
    1e7a:	de bf       	out	0x3e, r29	; 62
    1e7c:	0f be       	out	0x3f, r0	; 63
    1e7e:	cd bf       	out	0x3d, r28	; 61
    1e80:	0d 89       	ldd	r16, Y+21	; 0x15
    1e82:	1e 89       	ldd	r17, Y+22	; 0x16
    1e84:	86 e0       	ldi	r24, 0x06	; 6
    1e86:	8c 83       	std	Y+4, r24	; 0x04
    1e88:	1a 83       	std	Y+2, r17	; 0x02
    1e8a:	09 83       	std	Y+1, r16	; 0x01
    1e8c:	8f ef       	ldi	r24, 0xFF	; 255
    1e8e:	9f e7       	ldi	r25, 0x7F	; 127
    1e90:	9e 83       	std	Y+6, r25	; 0x06
    1e92:	8d 83       	std	Y+5, r24	; 0x05
    1e94:	9e 01       	movw	r18, r28
    1e96:	27 5e       	subi	r18, 0xE7	; 231
    1e98:	3f 4f       	sbci	r19, 0xFF	; 255
    1e9a:	ce 01       	movw	r24, r28
    1e9c:	01 96       	adiw	r24, 0x01	; 1
    1e9e:	6f 89       	ldd	r22, Y+23	; 0x17
    1ea0:	78 8d       	ldd	r23, Y+24	; 0x18
    1ea2:	a9 01       	movw	r20, r18
    1ea4:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <vfprintf>
    1ea8:	ef 81       	ldd	r30, Y+7	; 0x07
    1eaa:	f8 85       	ldd	r31, Y+8	; 0x08
    1eac:	e0 0f       	add	r30, r16
    1eae:	f1 1f       	adc	r31, r17
    1eb0:	10 82       	st	Z, r1
    1eb2:	2e 96       	adiw	r28, 0x0e	; 14
    1eb4:	0f b6       	in	r0, 0x3f	; 63
    1eb6:	f8 94       	cli
    1eb8:	de bf       	out	0x3e, r29	; 62
    1eba:	0f be       	out	0x3f, r0	; 63
    1ebc:	cd bf       	out	0x3d, r28	; 61
    1ebe:	cf 91       	pop	r28
    1ec0:	df 91       	pop	r29
    1ec2:	1f 91       	pop	r17
    1ec4:	0f 91       	pop	r16
    1ec6:	08 95       	ret

00001ec8 <__ultoa_invert>:
    1ec8:	fa 01       	movw	r30, r20
    1eca:	aa 27       	eor	r26, r26
    1ecc:	28 30       	cpi	r18, 0x08	; 8
    1ece:	51 f1       	breq	.+84     	; 0x1f24 <__ultoa_invert+0x5c>
    1ed0:	20 31       	cpi	r18, 0x10	; 16
    1ed2:	81 f1       	breq	.+96     	; 0x1f34 <__ultoa_invert+0x6c>
    1ed4:	e8 94       	clt
    1ed6:	6f 93       	push	r22
    1ed8:	6e 7f       	andi	r22, 0xFE	; 254
    1eda:	6e 5f       	subi	r22, 0xFE	; 254
    1edc:	7f 4f       	sbci	r23, 0xFF	; 255
    1ede:	8f 4f       	sbci	r24, 0xFF	; 255
    1ee0:	9f 4f       	sbci	r25, 0xFF	; 255
    1ee2:	af 4f       	sbci	r26, 0xFF	; 255
    1ee4:	b1 e0       	ldi	r27, 0x01	; 1
    1ee6:	3e d0       	rcall	.+124    	; 0x1f64 <__ultoa_invert+0x9c>
    1ee8:	b4 e0       	ldi	r27, 0x04	; 4
    1eea:	3c d0       	rcall	.+120    	; 0x1f64 <__ultoa_invert+0x9c>
    1eec:	67 0f       	add	r22, r23
    1eee:	78 1f       	adc	r23, r24
    1ef0:	89 1f       	adc	r24, r25
    1ef2:	9a 1f       	adc	r25, r26
    1ef4:	a1 1d       	adc	r26, r1
    1ef6:	68 0f       	add	r22, r24
    1ef8:	79 1f       	adc	r23, r25
    1efa:	8a 1f       	adc	r24, r26
    1efc:	91 1d       	adc	r25, r1
    1efe:	a1 1d       	adc	r26, r1
    1f00:	6a 0f       	add	r22, r26
    1f02:	71 1d       	adc	r23, r1
    1f04:	81 1d       	adc	r24, r1
    1f06:	91 1d       	adc	r25, r1
    1f08:	a1 1d       	adc	r26, r1
    1f0a:	20 d0       	rcall	.+64     	; 0x1f4c <__ultoa_invert+0x84>
    1f0c:	09 f4       	brne	.+2      	; 0x1f10 <__ultoa_invert+0x48>
    1f0e:	68 94       	set
    1f10:	3f 91       	pop	r19
    1f12:	2a e0       	ldi	r18, 0x0A	; 10
    1f14:	26 9f       	mul	r18, r22
    1f16:	11 24       	eor	r1, r1
    1f18:	30 19       	sub	r19, r0
    1f1a:	30 5d       	subi	r19, 0xD0	; 208
    1f1c:	31 93       	st	Z+, r19
    1f1e:	de f6       	brtc	.-74     	; 0x1ed6 <__ultoa_invert+0xe>
    1f20:	cf 01       	movw	r24, r30
    1f22:	08 95       	ret
    1f24:	46 2f       	mov	r20, r22
    1f26:	47 70       	andi	r20, 0x07	; 7
    1f28:	40 5d       	subi	r20, 0xD0	; 208
    1f2a:	41 93       	st	Z+, r20
    1f2c:	b3 e0       	ldi	r27, 0x03	; 3
    1f2e:	0f d0       	rcall	.+30     	; 0x1f4e <__ultoa_invert+0x86>
    1f30:	c9 f7       	brne	.-14     	; 0x1f24 <__ultoa_invert+0x5c>
    1f32:	f6 cf       	rjmp	.-20     	; 0x1f20 <__ultoa_invert+0x58>
    1f34:	46 2f       	mov	r20, r22
    1f36:	4f 70       	andi	r20, 0x0F	; 15
    1f38:	40 5d       	subi	r20, 0xD0	; 208
    1f3a:	4a 33       	cpi	r20, 0x3A	; 58
    1f3c:	18 f0       	brcs	.+6      	; 0x1f44 <__ultoa_invert+0x7c>
    1f3e:	49 5d       	subi	r20, 0xD9	; 217
    1f40:	31 fd       	sbrc	r19, 1
    1f42:	40 52       	subi	r20, 0x20	; 32
    1f44:	41 93       	st	Z+, r20
    1f46:	02 d0       	rcall	.+4      	; 0x1f4c <__ultoa_invert+0x84>
    1f48:	a9 f7       	brne	.-22     	; 0x1f34 <__ultoa_invert+0x6c>
    1f4a:	ea cf       	rjmp	.-44     	; 0x1f20 <__ultoa_invert+0x58>
    1f4c:	b4 e0       	ldi	r27, 0x04	; 4
    1f4e:	a6 95       	lsr	r26
    1f50:	97 95       	ror	r25
    1f52:	87 95       	ror	r24
    1f54:	77 95       	ror	r23
    1f56:	67 95       	ror	r22
    1f58:	ba 95       	dec	r27
    1f5a:	c9 f7       	brne	.-14     	; 0x1f4e <__ultoa_invert+0x86>
    1f5c:	00 97       	sbiw	r24, 0x00	; 0
    1f5e:	61 05       	cpc	r22, r1
    1f60:	71 05       	cpc	r23, r1
    1f62:	08 95       	ret
    1f64:	9b 01       	movw	r18, r22
    1f66:	ac 01       	movw	r20, r24
    1f68:	0a 2e       	mov	r0, r26
    1f6a:	06 94       	lsr	r0
    1f6c:	57 95       	ror	r21
    1f6e:	47 95       	ror	r20
    1f70:	37 95       	ror	r19
    1f72:	27 95       	ror	r18
    1f74:	ba 95       	dec	r27
    1f76:	c9 f7       	brne	.-14     	; 0x1f6a <__ultoa_invert+0xa2>
    1f78:	62 0f       	add	r22, r18
    1f7a:	73 1f       	adc	r23, r19
    1f7c:	84 1f       	adc	r24, r20
    1f7e:	95 1f       	adc	r25, r21
    1f80:	a0 1d       	adc	r26, r0
    1f82:	08 95       	ret

00001f84 <_exit>:
    1f84:	f8 94       	cli

00001f86 <__stop_program>:
    1f86:	ff cf       	rjmp	.-2      	; 0x1f86 <__stop_program>
