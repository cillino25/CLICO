
CLICO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000014c  00800100  000025e8  0000267c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000025e8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003a  0080024c  0080024c  000027c8  2**0
                  ALLOC
  3 .stab         00002eb0  00000000  00000000  000027c8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000779  00000000  00000000  00005678  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000080  00000000  00000000  00005df1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000386  00000000  00000000  00005e71  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000176e  00000000  00000000  000061f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000064c  00000000  00000000  00007965  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001deb  00000000  00000000  00007fb1  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000190  00000000  00000000  00009d9c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000005ef  00000000  00000000  00009f2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001276  00000000  00000000  0000a51b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 00000121  00000000  00000000  0000b791  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000078  00000000  00000000  0000b8b2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__ctors_end>
       4:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
       8:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
       c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      10:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      14:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      18:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      1c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      20:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      24:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      28:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      2c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      30:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      34:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      38:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      3c:	0c 94 de 02 	jmp	0x5bc	; 0x5bc <__vector_15>
      40:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      44:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      48:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      4c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      50:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      54:	0c 94 d4 04 	jmp	0x9a8	; 0x9a8 <__vector_21>
      58:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      5c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      60:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      64:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      68:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      6c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      70:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      74:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      78:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      7c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      80:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      84:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>
      88:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__bad_interrupt>

0000008c <__c.1912>:
      8c:	6e 61 6e 00                                         nan.

00000090 <__c.1910>:
      90:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      a0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      b0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      c0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      d0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      e0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      f0:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     100:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     110:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     120:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     130:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     140:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     150:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     160:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     170:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     180:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000018e <__ctors_end>:
     18e:	11 24       	eor	r1, r1
     190:	1f be       	out	0x3f, r1	; 63
     192:	cf ef       	ldi	r28, 0xFF	; 255
     194:	d0 e1       	ldi	r29, 0x10	; 16
     196:	de bf       	out	0x3e, r29	; 62
     198:	cd bf       	out	0x3d, r28	; 61

0000019a <__do_copy_data>:
     19a:	12 e0       	ldi	r17, 0x02	; 2
     19c:	a0 e0       	ldi	r26, 0x00	; 0
     19e:	b1 e0       	ldi	r27, 0x01	; 1
     1a0:	e8 ee       	ldi	r30, 0xE8	; 232
     1a2:	f5 e2       	ldi	r31, 0x25	; 37
     1a4:	00 e0       	ldi	r16, 0x00	; 0
     1a6:	0b bf       	out	0x3b, r16	; 59
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <__do_copy_data+0x14>
     1aa:	07 90       	elpm	r0, Z+
     1ac:	0d 92       	st	X+, r0
     1ae:	ac 34       	cpi	r26, 0x4C	; 76
     1b0:	b1 07       	cpc	r27, r17
     1b2:	d9 f7       	brne	.-10     	; 0x1aa <__do_copy_data+0x10>

000001b4 <__do_clear_bss>:
     1b4:	12 e0       	ldi	r17, 0x02	; 2
     1b6:	ac e4       	ldi	r26, 0x4C	; 76
     1b8:	b2 e0       	ldi	r27, 0x02	; 2
     1ba:	01 c0       	rjmp	.+2      	; 0x1be <.do_clear_bss_start>

000001bc <.do_clear_bss_loop>:
     1bc:	1d 92       	st	X+, r1

000001be <.do_clear_bss_start>:
     1be:	a6 38       	cpi	r26, 0x86	; 134
     1c0:	b1 07       	cpc	r27, r17
     1c2:	e1 f7       	brne	.-8      	; 0x1bc <.do_clear_bss_loop>
     1c4:	0e 94 3d 07 	call	0xe7a	; 0xe7a <main>
     1c8:	0c 94 f2 12 	jmp	0x25e4	; 0x25e4 <_exit>

000001cc <__bad_interrupt>:
     1cc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001d0 <changeEditTime>:
int isLeapYear(uint8_t year){
	if((year%4)==0) return 1;
	return 0;
}

void changeEditTime(uint8_t bPosition, uint8_t bButton){
     1d0:	98 2f       	mov	r25, r24
     1d2:	46 2f       	mov	r20, r22
	int bMunita;
	int bMdecine;
	int bSunita;
	int bSdecine;
	
	bHunita = tTimeEditing.bHour % 10;
     1d4:	30 91 72 02 	lds	r19, 0x0272
	bHdecine = tTimeEditing.bHour / 10;
     1d8:	a0 91 72 02 	lds	r26, 0x0272
	bMunita = tTimeEditing.bMin % 10;
     1dc:	80 91 71 02 	lds	r24, 0x0271
	bMdecine = tTimeEditing.bMin / 10;
     1e0:	f0 91 71 02 	lds	r31, 0x0271
	bSunita = tTimeEditing.bSec % 10;
     1e4:	20 91 70 02 	lds	r18, 0x0270
	bSdecine = tTimeEditing.bSec / 10;
     1e8:	e0 91 70 02 	lds	r30, 0x0270
		
	switch(bPosition){
     1ec:	93 30       	cpi	r25, 0x03	; 3
     1ee:	09 f4       	brne	.+2      	; 0x1f2 <changeEditTime+0x22>
     1f0:	59 c0       	rjmp	.+178    	; 0x2a4 <changeEditTime+0xd4>
     1f2:	94 30       	cpi	r25, 0x04	; 4
     1f4:	30 f4       	brcc	.+12     	; 0x202 <changeEditTime+0x32>
     1f6:	99 23       	and	r25, r25
     1f8:	71 f0       	breq	.+28     	; 0x216 <changeEditTime+0x46>
     1fa:	91 30       	cpi	r25, 0x01	; 1
     1fc:	09 f0       	breq	.+2      	; 0x200 <changeEditTime+0x30>
     1fe:	ce c0       	rjmp	.+412    	; 0x39c <changeEditTime+0x1cc>
     200:	23 c0       	rjmp	.+70     	; 0x248 <changeEditTime+0x78>
     202:	96 30       	cpi	r25, 0x06	; 6
     204:	09 f4       	brne	.+2      	; 0x208 <changeEditTime+0x38>
     206:	8b c0       	rjmp	.+278    	; 0x31e <changeEditTime+0x14e>
     208:	97 30       	cpi	r25, 0x07	; 7
     20a:	09 f4       	brne	.+2      	; 0x20e <changeEditTime+0x3e>
     20c:	9e c0       	rjmp	.+316    	; 0x34a <changeEditTime+0x17a>
     20e:	94 30       	cpi	r25, 0x04	; 4
     210:	09 f0       	breq	.+2      	; 0x214 <changeEditTime+0x44>
     212:	c4 c0       	rjmp	.+392    	; 0x39c <changeEditTime+0x1cc>
     214:	60 c0       	rjmp	.+192    	; 0x2d6 <changeEditTime+0x106>
		case 0:
			;EDIT_TIME_DATE(0,BTN_A,BTN_B,bButton, tTimeEditing.bHour, bHdecine, bHunita, 2,3)
     216:	62 30       	cpi	r22, 0x02	; 2
     218:	49 f4       	brne	.+18     	; 0x22c <changeEditTime+0x5c>
     21a:	80 91 72 02 	lds	r24, 0x0272
     21e:	8e 30       	cpi	r24, 0x0E	; 14
     220:	08 f0       	brcs	.+2      	; 0x224 <changeEditTime+0x54>
     222:	bc c0       	rjmp	.+376    	; 0x39c <changeEditTime+0x1cc>
     224:	80 91 72 02 	lds	r24, 0x0272
     228:	86 5f       	subi	r24, 0xF6	; 246
     22a:	0b c0       	rjmp	.+22     	; 0x242 <changeEditTime+0x72>
     22c:	64 30       	cpi	r22, 0x04	; 4
     22e:	09 f0       	breq	.+2      	; 0x232 <changeEditTime+0x62>
     230:	b5 c0       	rjmp	.+362    	; 0x39c <changeEditTime+0x1cc>
     232:	80 91 72 02 	lds	r24, 0x0272
     236:	8a 30       	cpi	r24, 0x0A	; 10
     238:	08 f4       	brcc	.+2      	; 0x23c <changeEditTime+0x6c>
     23a:	b0 c0       	rjmp	.+352    	; 0x39c <changeEditTime+0x1cc>
     23c:	80 91 72 02 	lds	r24, 0x0272
     240:	8a 50       	subi	r24, 0x0A	; 10
     242:	80 93 72 02 	sts	0x0272, r24
     246:	08 95       	ret
	int bMunita;
	int bMdecine;
	int bSunita;
	int bSdecine;
	
	bHunita = tTimeEditing.bHour % 10;
     248:	5a e0       	ldi	r21, 0x0A	; 10
     24a:	83 2f       	mov	r24, r19
     24c:	65 2f       	mov	r22, r21
     24e:	0e 94 17 11 	call	0x222e	; 0x222e <__udivmodqi4>
     252:	29 2f       	mov	r18, r25
     254:	30 e0       	ldi	r19, 0x00	; 0
	bHdecine = tTimeEditing.bHour / 10;
     256:	8a 2f       	mov	r24, r26
     258:	0e 94 17 11 	call	0x222e	; 0x222e <__udivmodqi4>
	switch(bPosition){
		case 0:
			;EDIT_TIME_DATE(0,BTN_A,BTN_B,bButton, tTimeEditing.bHour, bHdecine, bHunita, 2,3)
			break;
		case 1:
			;EDIT_TIME_DATE(1,BTN_A,BTN_B,bButton, tTimeEditing.bHour, bHdecine, bHunita, 2,3)
     25c:	42 30       	cpi	r20, 0x02	; 2
     25e:	81 f4       	brne	.+32     	; 0x280 <changeEditTime+0xb0>
     260:	23 30       	cpi	r18, 0x03	; 3
     262:	31 05       	cpc	r19, r1
     264:	54 f0       	brlt	.+20     	; 0x27a <changeEditTime+0xaa>
	int bMdecine;
	int bSunita;
	int bSdecine;
	
	bHunita = tTimeEditing.bHour % 10;
	bHdecine = tTimeEditing.bHour / 10;
     266:	48 2f       	mov	r20, r24
     268:	50 e0       	ldi	r21, 0x00	; 0
	switch(bPosition){
		case 0:
			;EDIT_TIME_DATE(0,BTN_A,BTN_B,bButton, tTimeEditing.bHour, bHdecine, bHunita, 2,3)
			break;
		case 1:
			;EDIT_TIME_DATE(1,BTN_A,BTN_B,bButton, tTimeEditing.bHour, bHdecine, bHunita, 2,3)
     26a:	42 30       	cpi	r20, 0x02	; 2
     26c:	51 05       	cpc	r21, r1
     26e:	0c f0       	brlt	.+2      	; 0x272 <changeEditTime+0xa2>
     270:	95 c0       	rjmp	.+298    	; 0x39c <changeEditTime+0x1cc>
     272:	29 30       	cpi	r18, 0x09	; 9
     274:	31 05       	cpc	r19, r1
     276:	09 f4       	brne	.+2      	; 0x27a <changeEditTime+0xaa>
     278:	91 c0       	rjmp	.+290    	; 0x39c <changeEditTime+0x1cc>
     27a:	2f 5f       	subi	r18, 0xFF	; 255
     27c:	3f 4f       	sbci	r19, 0xFF	; 255
     27e:	09 c0       	rjmp	.+18     	; 0x292 <changeEditTime+0xc2>
     280:	44 30       	cpi	r20, 0x04	; 4
     282:	09 f0       	breq	.+2      	; 0x286 <changeEditTime+0xb6>
     284:	8b c0       	rjmp	.+278    	; 0x39c <changeEditTime+0x1cc>
     286:	21 15       	cp	r18, r1
     288:	31 05       	cpc	r19, r1
     28a:	09 f4       	brne	.+2      	; 0x28e <changeEditTime+0xbe>
     28c:	87 c0       	rjmp	.+270    	; 0x39c <changeEditTime+0x1cc>
     28e:	21 50       	subi	r18, 0x01	; 1
     290:	30 40       	sbci	r19, 0x00	; 0
     292:	88 0f       	add	r24, r24
     294:	98 2f       	mov	r25, r24
     296:	99 0f       	add	r25, r25
     298:	99 0f       	add	r25, r25
     29a:	98 0f       	add	r25, r24
     29c:	92 0f       	add	r25, r18
     29e:	90 93 72 02 	sts	0x0272, r25
     2a2:	08 95       	ret
			break;
		case 3:
			;EDIT_TIME_DATE(0,BTN_A,BTN_B,bButton, tTimeEditing.bMin, bMdecine, bMunita, 5,9)
     2a4:	62 30       	cpi	r22, 0x02	; 2
     2a6:	49 f4       	brne	.+18     	; 0x2ba <changeEditTime+0xea>
     2a8:	80 91 71 02 	lds	r24, 0x0271
     2ac:	82 33       	cpi	r24, 0x32	; 50
     2ae:	08 f0       	brcs	.+2      	; 0x2b2 <changeEditTime+0xe2>
     2b0:	75 c0       	rjmp	.+234    	; 0x39c <changeEditTime+0x1cc>
     2b2:	80 91 71 02 	lds	r24, 0x0271
     2b6:	86 5f       	subi	r24, 0xF6	; 246
     2b8:	0b c0       	rjmp	.+22     	; 0x2d0 <changeEditTime+0x100>
     2ba:	64 30       	cpi	r22, 0x04	; 4
     2bc:	09 f0       	breq	.+2      	; 0x2c0 <changeEditTime+0xf0>
     2be:	6e c0       	rjmp	.+220    	; 0x39c <changeEditTime+0x1cc>
     2c0:	80 91 71 02 	lds	r24, 0x0271
     2c4:	8a 30       	cpi	r24, 0x0A	; 10
     2c6:	08 f4       	brcc	.+2      	; 0x2ca <changeEditTime+0xfa>
     2c8:	69 c0       	rjmp	.+210    	; 0x39c <changeEditTime+0x1cc>
     2ca:	80 91 71 02 	lds	r24, 0x0271
     2ce:	8a 50       	subi	r24, 0x0A	; 10
     2d0:	80 93 71 02 	sts	0x0271, r24
     2d4:	08 95       	ret
	int bSunita;
	int bSdecine;
	
	bHunita = tTimeEditing.bHour % 10;
	bHdecine = tTimeEditing.bHour / 10;
	bMunita = tTimeEditing.bMin % 10;
     2d6:	5a e0       	ldi	r21, 0x0A	; 10
     2d8:	65 2f       	mov	r22, r21
     2da:	0e 94 17 11 	call	0x222e	; 0x222e <__udivmodqi4>
     2de:	29 2f       	mov	r18, r25
     2e0:	30 e0       	ldi	r19, 0x00	; 0
	bMdecine = tTimeEditing.bMin / 10;
     2e2:	8f 2f       	mov	r24, r31
     2e4:	0e 94 17 11 	call	0x222e	; 0x222e <__udivmodqi4>
			break;
		case 3:
			;EDIT_TIME_DATE(0,BTN_A,BTN_B,bButton, tTimeEditing.bMin, bMdecine, bMunita, 5,9)
			break;
		case 4:
			;EDIT_TIME_DATE(1,BTN_A,BTN_B,bButton, tTimeEditing.bMin, bMdecine, bMunita, 5,9)
     2e8:	42 30       	cpi	r20, 0x02	; 2
     2ea:	39 f4       	brne	.+14     	; 0x2fa <changeEditTime+0x12a>
     2ec:	29 30       	cpi	r18, 0x09	; 9
     2ee:	31 05       	cpc	r19, r1
     2f0:	09 f4       	brne	.+2      	; 0x2f4 <changeEditTime+0x124>
     2f2:	54 c0       	rjmp	.+168    	; 0x39c <changeEditTime+0x1cc>
     2f4:	2f 5f       	subi	r18, 0xFF	; 255
     2f6:	3f 4f       	sbci	r19, 0xFF	; 255
     2f8:	09 c0       	rjmp	.+18     	; 0x30c <changeEditTime+0x13c>
     2fa:	44 30       	cpi	r20, 0x04	; 4
     2fc:	09 f0       	breq	.+2      	; 0x300 <changeEditTime+0x130>
     2fe:	4e c0       	rjmp	.+156    	; 0x39c <changeEditTime+0x1cc>
     300:	21 15       	cp	r18, r1
     302:	31 05       	cpc	r19, r1
     304:	09 f4       	brne	.+2      	; 0x308 <changeEditTime+0x138>
     306:	4a c0       	rjmp	.+148    	; 0x39c <changeEditTime+0x1cc>
     308:	21 50       	subi	r18, 0x01	; 1
     30a:	30 40       	sbci	r19, 0x00	; 0
     30c:	88 0f       	add	r24, r24
     30e:	98 2f       	mov	r25, r24
     310:	99 0f       	add	r25, r25
     312:	99 0f       	add	r25, r25
     314:	98 0f       	add	r25, r24
     316:	92 0f       	add	r25, r18
     318:	90 93 71 02 	sts	0x0271, r25
     31c:	08 95       	ret
			break;
		case 6:
			;EDIT_TIME_DATE(0,BTN_A,BTN_B,bButton, tTimeEditing.bSec, bSdecine, bSunita, 5,9)
     31e:	62 30       	cpi	r22, 0x02	; 2
     320:	41 f4       	brne	.+16     	; 0x332 <changeEditTime+0x162>
     322:	80 91 70 02 	lds	r24, 0x0270
     326:	82 33       	cpi	r24, 0x32	; 50
     328:	c8 f5       	brcc	.+114    	; 0x39c <changeEditTime+0x1cc>
     32a:	80 91 70 02 	lds	r24, 0x0270
     32e:	86 5f       	subi	r24, 0xF6	; 246
     330:	09 c0       	rjmp	.+18     	; 0x344 <changeEditTime+0x174>
     332:	64 30       	cpi	r22, 0x04	; 4
     334:	99 f5       	brne	.+102    	; 0x39c <changeEditTime+0x1cc>
     336:	80 91 70 02 	lds	r24, 0x0270
     33a:	8a 30       	cpi	r24, 0x0A	; 10
     33c:	78 f1       	brcs	.+94     	; 0x39c <changeEditTime+0x1cc>
     33e:	80 91 70 02 	lds	r24, 0x0270
     342:	8a 50       	subi	r24, 0x0A	; 10
     344:	80 93 70 02 	sts	0x0270, r24
     348:	08 95       	ret
	
	bHunita = tTimeEditing.bHour % 10;
	bHdecine = tTimeEditing.bHour / 10;
	bMunita = tTimeEditing.bMin % 10;
	bMdecine = tTimeEditing.bMin / 10;
	bSunita = tTimeEditing.bSec % 10;
     34a:	5a e0       	ldi	r21, 0x0A	; 10
     34c:	82 2f       	mov	r24, r18
     34e:	65 2f       	mov	r22, r21
     350:	0e 94 17 11 	call	0x222e	; 0x222e <__udivmodqi4>
     354:	29 2f       	mov	r18, r25
     356:	30 e0       	ldi	r19, 0x00	; 0
	bSdecine = tTimeEditing.bSec / 10;
     358:	8e 2f       	mov	r24, r30
     35a:	0e 94 17 11 	call	0x222e	; 0x222e <__udivmodqi4>
			break;
		case 6:
			;EDIT_TIME_DATE(0,BTN_A,BTN_B,bButton, tTimeEditing.bSec, bSdecine, bSunita, 5,9)
			break;
		case 7:
			;EDIT_TIME_DATE(1,BTN_A,BTN_B,bButton, tTimeEditing.bSec, bSdecine, bSunita, 5,9)
     35e:	42 30       	cpi	r20, 0x02	; 2
     360:	71 f4       	brne	.+28     	; 0x37e <changeEditTime+0x1ae>
     362:	29 30       	cpi	r18, 0x09	; 9
     364:	31 05       	cpc	r19, r1
     366:	d1 f0       	breq	.+52     	; 0x39c <changeEditTime+0x1cc>
     368:	2f 5f       	subi	r18, 0xFF	; 255
     36a:	3f 4f       	sbci	r19, 0xFF	; 255
     36c:	88 0f       	add	r24, r24
     36e:	98 2f       	mov	r25, r24
     370:	99 0f       	add	r25, r25
     372:	99 0f       	add	r25, r25
     374:	98 0f       	add	r25, r24
     376:	92 0f       	add	r25, r18
     378:	90 93 70 02 	sts	0x0270, r25
     37c:	08 95       	ret
     37e:	44 30       	cpi	r20, 0x04	; 4
     380:	69 f4       	brne	.+26     	; 0x39c <changeEditTime+0x1cc>
     382:	21 15       	cp	r18, r1
     384:	31 05       	cpc	r19, r1
     386:	51 f0       	breq	.+20     	; 0x39c <changeEditTime+0x1cc>
     388:	21 50       	subi	r18, 0x01	; 1
     38a:	30 40       	sbci	r19, 0x00	; 0
     38c:	88 0f       	add	r24, r24
     38e:	98 2f       	mov	r25, r24
     390:	99 0f       	add	r25, r25
     392:	99 0f       	add	r25, r25
     394:	98 0f       	add	r25, r24
     396:	92 0f       	add	r25, r18
     398:	90 93 70 02 	sts	0x0270, r25
     39c:	08 95       	ret

0000039e <LCDBusyLoop>:
	//This function waits till lcd is BUSY

	uint8_t busy,status=0x00,temp;

	//Change Port to input type because we are reading data
	LCD_DATA_DDR&=0xF0;
     39e:	8a b3       	in	r24, 0x1a	; 26
     3a0:	80 7f       	andi	r24, 0xF0	; 240
     3a2:	8a bb       	out	0x1a, r24	; 26

	//change LCD mode
	SET_RW();		//Read mode
     3a4:	a8 9a       	sbi	0x15, 0	; 21
	CLEAR_RS();		//Read status
     3a6:	a9 98       	cbi	0x15, 1	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3a8:	82 e0       	ldi	r24, 0x02	; 2
     3aa:	8a 95       	dec	r24
     3ac:	f1 f7       	brne	.-4      	; 0x3aa <LCDBusyLoop+0xc>
     3ae:	00 c0       	rjmp	.+0      	; 0x3b0 <LCDBusyLoop+0x12>

	
	do
	{

		SET_E();
     3b0:	aa 9a       	sbi	0x15, 2	; 21
     3b2:	92 e0       	ldi	r25, 0x02	; 2
     3b4:	9a 95       	dec	r25
     3b6:	f1 f7       	brne	.-4      	; 0x3b4 <LCDBusyLoop+0x16>
     3b8:	00 c0       	rjmp	.+0      	; 0x3ba <LCDBusyLoop+0x1c>

		//Wait tDA for data to become available
		_delay_us(0.5);

		status=LCD_DATA_PIN;
     3ba:	89 b3       	in	r24, 0x19	; 25
		status=status<<4;
     3bc:	82 95       	swap	r24
     3be:	80 7f       	andi	r24, 0xF0	; 240
     3c0:	92 e0       	ldi	r25, 0x02	; 2
     3c2:	9a 95       	dec	r25
     3c4:	f1 f7       	brne	.-4      	; 0x3c2 <LCDBusyLoop+0x24>
     3c6:	00 c0       	rjmp	.+0      	; 0x3c8 <LCDBusyLoop+0x2a>

		_delay_us(0.5);

		//Pull E low
		CLEAR_E();
     3c8:	aa 98       	cbi	0x15, 2	; 21
     3ca:	95 e0       	ldi	r25, 0x05	; 5
     3cc:	9a 95       	dec	r25
     3ce:	f1 f7       	brne	.-4      	; 0x3cc <LCDBusyLoop+0x2e>
     3d0:	00 00       	nop
		_delay_us(1);	//tEL

		SET_E();
     3d2:	aa 9a       	sbi	0x15, 2	; 21
     3d4:	92 e0       	ldi	r25, 0x02	; 2
     3d6:	9a 95       	dec	r25
     3d8:	f1 f7       	brne	.-4      	; 0x3d6 <LCDBusyLoop+0x38>
     3da:	00 c0       	rjmp	.+0      	; 0x3dc <LCDBusyLoop+0x3e>
		_delay_us(0.5);

		temp=LCD_DATA_PIN;
     3dc:	99 b3       	in	r25, 0x19	; 25
     3de:	92 e0       	ldi	r25, 0x02	; 2
     3e0:	9a 95       	dec	r25
     3e2:	f1 f7       	brne	.-4      	; 0x3e0 <LCDBusyLoop+0x42>
     3e4:	00 c0       	rjmp	.+0      	; 0x3e6 <LCDBusyLoop+0x48>
		status=status|temp;

		busy=status & 0b10000000;

		_delay_us(0.5);
		CLEAR_E();
     3e6:	aa 98       	cbi	0x15, 2	; 21
     3e8:	95 e0       	ldi	r25, 0x05	; 5
     3ea:	9a 95       	dec	r25
     3ec:	f1 f7       	brne	.-4      	; 0x3ea <LCDBusyLoop+0x4c>
     3ee:	00 00       	nop
		_delay_us(1);	//tEL
	}while(busy);
     3f0:	87 fd       	sbrc	r24, 7
     3f2:	de cf       	rjmp	.-68     	; 0x3b0 <LCDBusyLoop+0x12>

	CLEAR_RW();		//write mode
     3f4:	a8 98       	cbi	0x15, 0	; 21
	//Change Port to output
	LCD_DATA_DDR|=0x0F;
     3f6:	8a b3       	in	r24, 0x1a	; 26
     3f8:	8f 60       	ori	r24, 0x0F	; 15
     3fa:	8a bb       	out	0x1a, r24	; 26

}
     3fc:	08 95       	ret

000003fe <LCDByte>:
	//NOTE: THIS FUNCTION RETURS ONLY WHEN LCD HAS PROCESSED THE COMMAND

	uint8_t hn,ln;			//Nibbles
	uint8_t temp;

	hn=c>>4;
     3fe:	28 2f       	mov	r18, r24
     400:	22 95       	swap	r18
     402:	2f 70       	andi	r18, 0x0F	; 15
	ln=(c & 0x0F);
     404:	8f 70       	andi	r24, 0x0F	; 15

	if(isdata==0)
     406:	66 23       	and	r22, r22
     408:	11 f4       	brne	.+4      	; 0x40e <LCDByte+0x10>
		CLEAR_RS();
     40a:	a9 98       	cbi	0x15, 1	; 21
     40c:	01 c0       	rjmp	.+2      	; 0x410 <LCDByte+0x12>
	else
		SET_RS();
     40e:	a9 9a       	sbi	0x15, 1	; 21
     410:	92 e0       	ldi	r25, 0x02	; 2
     412:	9a 95       	dec	r25
     414:	f1 f7       	brne	.-4      	; 0x412 <LCDByte+0x14>
     416:	00 c0       	rjmp	.+0      	; 0x418 <LCDByte+0x1a>

	_delay_us(0.500);		//tAS

	SET_E();
     418:	aa 9a       	sbi	0x15, 2	; 21

	//Send high nibble

	temp=(LCD_DATA_PORT & 0XF0)|(hn);
     41a:	9b b3       	in	r25, 0x1b	; 27
     41c:	90 7f       	andi	r25, 0xF0	; 240
     41e:	92 2b       	or	r25, r18
	LCD_DATA_PORT=temp;
     420:	9b bb       	out	0x1b, r25	; 27
     422:	95 e0       	ldi	r25, 0x05	; 5
     424:	9a 95       	dec	r25
     426:	f1 f7       	brne	.-4      	; 0x424 <LCDByte+0x26>
     428:	00 00       	nop

	_delay_us(1);			//tEH

	//Now data lines are stable pull E low for transmission

	CLEAR_E();
     42a:	aa 98       	cbi	0x15, 2	; 21
     42c:	95 e0       	ldi	r25, 0x05	; 5
     42e:	9a 95       	dec	r25
     430:	f1 f7       	brne	.-4      	; 0x42e <LCDByte+0x30>
     432:	00 00       	nop

	_delay_us(1);

	//Send the lower nibble
	SET_E();
     434:	aa 9a       	sbi	0x15, 2	; 21

	temp=(LCD_DATA_PORT & 0XF0)|(ln);
     436:	9b b3       	in	r25, 0x1b	; 27
     438:	90 7f       	andi	r25, 0xF0	; 240
     43a:	98 2b       	or	r25, r24

	LCD_DATA_PORT=temp;
     43c:	9b bb       	out	0x1b, r25	; 27
     43e:	85 e0       	ldi	r24, 0x05	; 5
     440:	8a 95       	dec	r24
     442:	f1 f7       	brne	.-4      	; 0x440 <LCDByte+0x42>
     444:	00 00       	nop

	_delay_us(1);			//tEH

	//SEND

	CLEAR_E();
     446:	aa 98       	cbi	0x15, 2	; 21
     448:	95 e0       	ldi	r25, 0x05	; 5
     44a:	9a 95       	dec	r25
     44c:	f1 f7       	brne	.-4      	; 0x44a <LCDByte+0x4c>
     44e:	00 00       	nop

	_delay_us(1);			//tEL

	LCDBusyLoop();
     450:	0e 94 cf 01 	call	0x39e	; 0x39e <LCDBusyLoop>
}
     454:	08 95       	ret

00000456 <InitLCD>:
	LCD_DATA_DDR|=0x0F;

}

void InitLCD(uint8_t style)
{
     456:	df 93       	push	r29
     458:	cf 93       	push	r28
     45a:	0f 92       	push	r0
     45c:	cd b7       	in	r28, 0x3d	; 61
     45e:	de b7       	in	r29, 0x3e	; 62
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     460:	2f ef       	ldi	r18, 0xFF	; 255
     462:	36 e7       	ldi	r19, 0x76	; 118
     464:	41 e0       	ldi	r20, 0x01	; 1
     466:	21 50       	subi	r18, 0x01	; 1
     468:	30 40       	sbci	r19, 0x00	; 0
     46a:	40 40       	sbci	r20, 0x00	; 0
     46c:	e1 f7       	brne	.-8      	; 0x466 <InitLCD+0x10>
     46e:	00 c0       	rjmp	.+0      	; 0x470 <InitLCD+0x1a>
     470:	00 00       	nop
	
	//After power on Wait for LCD to Initialize
	_delay_ms(30);
	
	//Set IO Ports
	LCD_DATA_DDR|=(0x0F);
     472:	9a b3       	in	r25, 0x1a	; 26
     474:	9f 60       	ori	r25, 0x0F	; 15
     476:	9a bb       	out	0x1a, r25	; 26
	LCD_E_DDR|=(1<<LCD_E_POS);
     478:	a2 9a       	sbi	0x14, 2	; 20
	LCD_RS_DDR|=(1<<LCD_RS_POS);
     47a:	a1 9a       	sbi	0x14, 1	; 20
	LCD_RW_DDR|=(1<<LCD_RW_POS);
     47c:	a0 9a       	sbi	0x14, 0	; 20

	LCD_DATA_PORT&=0XF0;
     47e:	9b b3       	in	r25, 0x1b	; 27
     480:	90 7f       	andi	r25, 0xF0	; 240
     482:	9b bb       	out	0x1b, r25	; 27
	CLEAR_E();
     484:	aa 98       	cbi	0x15, 2	; 21
	CLEAR_RW();
     486:	a8 98       	cbi	0x15, 0	; 21
	CLEAR_RS();
     488:	a9 98       	cbi	0x15, 1	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     48a:	00 c0       	rjmp	.+0      	; 0x48c <InitLCD+0x36>
     48c:	00 c0       	rjmp	.+0      	; 0x48e <InitLCD+0x38>
     48e:	00 00       	nop

	//Set 4-bit mode
	_delay_us(0.3);	//tAS

	SET_E();
     490:	aa 9a       	sbi	0x15, 2	; 21
	LCD_DATA_PORT|=(0b00000010); //[B] To transfer 0b00100000 i was using LCD_DATA_PORT|=0b00100000
     492:	d9 9a       	sbi	0x1b, 1	; 27
     494:	35 e0       	ldi	r19, 0x05	; 5
     496:	3a 95       	dec	r19
     498:	f1 f7       	brne	.-4      	; 0x496 <InitLCD+0x40>
     49a:	00 00       	nop
	_delay_us(1);
	CLEAR_E();
     49c:	aa 98       	cbi	0x15, 2	; 21
     49e:	45 e0       	ldi	r20, 0x05	; 5
     4a0:	4a 95       	dec	r20
     4a2:	f1 f7       	brne	.-4      	; 0x4a0 <InitLCD+0x4a>
     4a4:	00 00       	nop
	_delay_us(1);
	
	//Wait for LCD to execute the Functionset Command
	LCDBusyLoop();                                    //[B] Forgot this delay
     4a6:	89 83       	std	Y+1, r24	; 0x01
     4a8:	0e 94 cf 01 	call	0x39e	; 0x39e <LCDBusyLoop>

	//Now the LCD is in 4-bit mode

	LCDCmd(0b00001100|style);	//Display On
     4ac:	89 81       	ldd	r24, Y+1	; 0x01
     4ae:	8c 60       	ori	r24, 0x0C	; 12
     4b0:	60 e0       	ldi	r22, 0x00	; 0
     4b2:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
	LCDCmd(0b00101000);			//function set 4-bit,2 line 5x7 dot format
     4b6:	88 e2       	ldi	r24, 0x28	; 40
     4b8:	60 e0       	ldi	r22, 0x00	; 0
     4ba:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
}
     4be:	0f 90       	pop	r0
     4c0:	cf 91       	pop	r28
     4c2:	df 91       	pop	r29
     4c4:	08 95       	ret

000004c6 <LCDWriteString>:
void LCDWriteString(const char *msg)
{
     4c6:	ef 92       	push	r14
     4c8:	ff 92       	push	r15
     4ca:	cf 93       	push	r28
     4cc:	df 93       	push	r29
     4ce:	e8 2e       	mov	r14, r24
     4d0:	e7 01       	movw	r28, r14
     4d2:	7e 01       	movw	r14, r28
     4d4:	f9 2e       	mov	r15, r25
     4d6:	e7 01       	movw	r28, r14
	Arguments:
	msg: a null terminated string to print


	*****************************************************************/
 while(*msg!='\0')
     4d8:	03 c0       	rjmp	.+6      	; 0x4e0 <LCDWriteString+0x1a>
 {
	LCDData(*msg);
     4da:	61 e0       	ldi	r22, 0x01	; 1
     4dc:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
	Arguments:
	msg: a null terminated string to print


	*****************************************************************/
 while(*msg!='\0')
     4e0:	89 91       	ld	r24, Y+
     4e2:	88 23       	and	r24, r24
     4e4:	d1 f7       	brne	.-12     	; 0x4da <LCDWriteString+0x14>
 {
	LCDData(*msg);
	msg++;
 }
}
     4e6:	df 91       	pop	r29
     4e8:	cf 91       	pop	r28
     4ea:	ff 90       	pop	r15
     4ec:	ef 90       	pop	r14
     4ee:	08 95       	ret

000004f0 <LCDWriteInt>:

void LCDWriteInt(int val,unsigned int field_length)
{
     4f0:	ef 92       	push	r14
     4f2:	ff 92       	push	r15
     4f4:	0f 93       	push	r16
     4f6:	1f 93       	push	r17
     4f8:	df 93       	push	r29
     4fa:	cf 93       	push	r28
     4fc:	00 d0       	rcall	.+0      	; 0x4fe <LCDWriteInt+0xe>
     4fe:	00 d0       	rcall	.+0      	; 0x500 <LCDWriteInt+0x10>
     500:	0f 92       	push	r0
     502:	cd b7       	in	r28, 0x3d	; 61
     504:	de b7       	in	r29, 0x3e	; 62
     506:	9b 01       	movw	r18, r22
	2)unsigned int field_length :total length of field in which the value is printed
	must be between 1-5 if it is -1 the field length is no of digits in the val

	****************************************************************/

	char str[5]={0,0,0,0,0};
     508:	fe 01       	movw	r30, r28
     50a:	31 96       	adiw	r30, 0x01	; 1
     50c:	45 e0       	ldi	r20, 0x05	; 5
     50e:	df 01       	movw	r26, r30
     510:	1d 92       	st	X+, r1
     512:	4a 95       	dec	r20
     514:	e9 f7       	brne	.-6      	; 0x510 <LCDWriteInt+0x20>
     516:	fe 01       	movw	r30, r28
     518:	36 96       	adiw	r30, 0x06	; 6
	int i=4,j=0;
	while(val)
	{
	str[i]=val%10;
     51a:	0a e0       	ldi	r16, 0x0A	; 10
     51c:	10 e0       	ldi	r17, 0x00	; 0

	****************************************************************/

	char str[5]={0,0,0,0,0};
	int i=4,j=0;
	while(val)
     51e:	05 c0       	rjmp	.+10     	; 0x52a <LCDWriteInt+0x3a>
	{
	str[i]=val%10;
     520:	b8 01       	movw	r22, r16
     522:	0e 94 23 11 	call	0x2246	; 0x2246 <__divmodhi4>
     526:	82 93       	st	-Z, r24
	val=val/10;
     528:	cb 01       	movw	r24, r22

	****************************************************************/

	char str[5]={0,0,0,0,0};
	int i=4,j=0;
	while(val)
     52a:	00 97       	sbiw	r24, 0x00	; 0
     52c:	c9 f7       	brne	.-14     	; 0x520 <LCDWriteInt+0x30>
	{
	str[i]=val%10;
	val=val/10;
	i--;
	}
	if(field_length==-1)
     52e:	bf ef       	ldi	r27, 0xFF	; 255
     530:	2f 3f       	cpi	r18, 0xFF	; 255
     532:	3b 07       	cpc	r19, r27
     534:	51 f4       	brne	.+20     	; 0x54a <LCDWriteInt+0x5a>
     536:	fe 01       	movw	r30, r28
     538:	31 96       	adiw	r30, 0x01	; 1
     53a:	80 e0       	ldi	r24, 0x00	; 0
     53c:	90 e0       	ldi	r25, 0x00	; 0
     53e:	01 c0       	rjmp	.+2      	; 0x542 <LCDWriteInt+0x52>
		while(str[j]==0) j++;
     540:	01 96       	adiw	r24, 0x01	; 1
     542:	21 91       	ld	r18, Z+
     544:	22 23       	and	r18, r18
     546:	e1 f3       	breq	.-8      	; 0x540 <LCDWriteInt+0x50>
     548:	04 c0       	rjmp	.+8      	; 0x552 <LCDWriteInt+0x62>
	else
		j=5-field_length;
     54a:	85 e0       	ldi	r24, 0x05	; 5
     54c:	90 e0       	ldi	r25, 0x00	; 0
     54e:	82 1b       	sub	r24, r18
     550:	93 0b       	sbc	r25, r19
	LCDData(*msg);
	msg++;
 }
}

void LCDWriteInt(int val,unsigned int field_length)
     552:	8e 01       	movw	r16, r28
     554:	0f 5f       	subi	r16, 0xFF	; 255
     556:	1f 4f       	sbci	r17, 0xFF	; 255
     558:	08 0f       	add	r16, r24
     55a:	19 1f       	adc	r17, r25
     55c:	7c 01       	movw	r14, r24
     55e:	0a c0       	rjmp	.+20     	; 0x574 <LCDWriteInt+0x84>
		j=5-field_length;

	if(val<0) LCDData('-');
	for(i=j;i<5;i++)
	{
	LCDData(48+str[i]);
     560:	f8 01       	movw	r30, r16
     562:	81 91       	ld	r24, Z+
     564:	8f 01       	movw	r16, r30
     566:	80 5d       	subi	r24, 0xD0	; 208
     568:	61 e0       	ldi	r22, 0x01	; 1
     56a:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
		while(str[j]==0) j++;
	else
		j=5-field_length;

	if(val<0) LCDData('-');
	for(i=j;i<5;i++)
     56e:	08 94       	sec
     570:	e1 1c       	adc	r14, r1
     572:	f1 1c       	adc	r15, r1
     574:	f5 e0       	ldi	r31, 0x05	; 5
     576:	ef 16       	cp	r14, r31
     578:	f1 04       	cpc	r15, r1
     57a:	94 f3       	brlt	.-28     	; 0x560 <LCDWriteInt+0x70>
	{
	LCDData(48+str[i]);
	}
}
     57c:	0f 90       	pop	r0
     57e:	0f 90       	pop	r0
     580:	0f 90       	pop	r0
     582:	0f 90       	pop	r0
     584:	0f 90       	pop	r0
     586:	cf 91       	pop	r28
     588:	df 91       	pop	r29
     58a:	1f 91       	pop	r17
     58c:	0f 91       	pop	r16
     58e:	ff 90       	pop	r15
     590:	ef 90       	pop	r14
     592:	08 95       	ret

00000594 <LCDGotoXY>:
void LCDGotoXY(uint8_t x,uint8_t y)
{
 if(x<40)
     594:	88 32       	cpi	r24, 0x28	; 40
     596:	30 f4       	brcc	.+12     	; 0x5a4 <LCDGotoXY+0x10>
 {
  if(y) x|=0b01000000;
     598:	61 11       	cpse	r22, r1
     59a:	80 64       	ori	r24, 0x40	; 64
  x|=0b10000000;
  LCDCmd(x);
     59c:	80 68       	ori	r24, 0x80	; 128
     59e:	60 e0       	ldi	r22, 0x00	; 0
     5a0:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
     5a4:	08 95       	ret

000005a6 <LCDWriteStringXY>:
  }
}

void LCDWriteStringXY(uint8_t x, uint8_t y, const char *msg){
     5a6:	cf 93       	push	r28
     5a8:	df 93       	push	r29
     5aa:	ea 01       	movw	r28, r20
	LCDGotoXY(x, y);
     5ac:	0e 94 ca 02 	call	0x594	; 0x594 <LCDGotoXY>
	LCDWriteString(msg);
     5b0:	ce 01       	movw	r24, r28
     5b2:	0e 94 63 02 	call	0x4c6	; 0x4c6 <LCDWriteString>
}
     5b6:	df 91       	pop	r29
     5b8:	cf 91       	pop	r28
     5ba:	08 95       	ret

000005bc <__vector_15>:
/*******************   Interrupts   *************************/
/************************************************************/


/****************  RealTimeClock Interrupt ******************/
ISR(TIMER0_COMP_vect){
     5bc:	1f 92       	push	r1
     5be:	0f 92       	push	r0
     5c0:	0f b6       	in	r0, 0x3f	; 63
     5c2:	0f 92       	push	r0
     5c4:	0b b6       	in	r0, 0x3b	; 59
     5c6:	0f 92       	push	r0
     5c8:	11 24       	eor	r1, r1
     5ca:	2f 93       	push	r18
     5cc:	3f 93       	push	r19
     5ce:	8f 93       	push	r24
     5d0:	9f 93       	push	r25
     5d2:	ef 93       	push	r30
     5d4:	ff 93       	push	r31
	if(bPriLev<PRI_TIMER0)	return;
     5d6:	80 91 63 02 	lds	r24, 0x0263
     5da:	88 23       	and	r24, r24
     5dc:	09 f4       	brne	.+2      	; 0x5e0 <__vector_15+0x24>
     5de:	1d c1       	rjmp	.+570    	; 0x81a <__vector_15+0x25e>
	uint8_t bOldPriLev = bPriLev;
     5e0:	20 91 63 02 	lds	r18, 0x0263
	bPriLev=PRI_TIMER0;
     5e4:	31 e0       	ldi	r19, 0x01	; 1
     5e6:	30 93 63 02 	sts	0x0263, r19
	
	bPort = PIND;
     5ea:	80 b3       	in	r24, 0x10	; 16
     5ec:	80 93 7a 02 	sts	0x027A, r24
	bBtnAPressed = bPort & BIT0;		// UP
     5f0:	80 91 7a 02 	lds	r24, 0x027A
     5f4:	81 70       	andi	r24, 0x01	; 1
     5f6:	80 93 79 02 	sts	0x0279, r24
	bBtnBPressed = bPort & BIT4;		// DOWN
     5fa:	80 91 7a 02 	lds	r24, 0x027A
     5fe:	80 71       	andi	r24, 0x10	; 16
     600:	80 93 55 02 	sts	0x0255, r24
	bBtnCPressed = bPort & BIT1;		// MENU
     604:	80 91 7a 02 	lds	r24, 0x027A
     608:	82 70       	andi	r24, 0x02	; 2
     60a:	80 93 7c 02 	sts	0x027C, r24
	if(!bBtnCPressed&&(!bInhibite)){  // bBtnXPressed=0  -->bottone x premuto! (collegati a massa)
     60e:	80 91 7c 02 	lds	r24, 0x027C
     612:	88 23       	and	r24, r24
     614:	b9 f4       	brne	.+46     	; 0x644 <__vector_15+0x88>
     616:	80 91 7b 02 	lds	r24, 0x027B
     61a:	88 23       	and	r24, r24
     61c:	99 f4       	brne	.+38     	; 0x644 <__vector_15+0x88>
		cIntegrator.wC++;
     61e:	80 91 68 02 	lds	r24, 0x0268
     622:	90 91 69 02 	lds	r25, 0x0269
     626:	01 96       	adiw	r24, 0x01	; 1
     628:	90 93 69 02 	sts	0x0269, r25
     62c:	80 93 68 02 	sts	0x0268, r24
		if(cIntegrator.wC>LONG_PRESSION){ bInhibite=1; }
     630:	80 91 68 02 	lds	r24, 0x0268
     634:	90 91 69 02 	lds	r25, 0x0269
     638:	85 36       	cpi	r24, 0x65	; 101
     63a:	91 05       	cpc	r25, r1
     63c:	b8 f1       	brcs	.+110    	; 0x6ac <__vector_15+0xf0>
     63e:	30 93 7b 02 	sts	0x027B, r19
     642:	34 c0       	rjmp	.+104    	; 0x6ac <__vector_15+0xf0>
	}
	else{
		if(bBtnCPressed!=0){ bInhibite=0; }
     644:	80 91 7c 02 	lds	r24, 0x027C
     648:	88 23       	and	r24, r24
     64a:	11 f0       	breq	.+4      	; 0x650 <__vector_15+0x94>
     64c:	10 92 7b 02 	sts	0x027B, r1
		if(cIntegrator.wC<DEBOUNCE_TIME){ cIntegrator.wC=0; }
     650:	80 91 68 02 	lds	r24, 0x0268
     654:	90 91 69 02 	lds	r25, 0x0269
     658:	8f 30       	cpi	r24, 0x0F	; 15
     65a:	91 05       	cpc	r25, r1
     65c:	28 f4       	brcc	.+10     	; 0x668 <__vector_15+0xac>
     65e:	10 92 69 02 	sts	0x0269, r1
     662:	10 92 68 02 	sts	0x0268, r1
     666:	22 c0       	rjmp	.+68     	; 0x6ac <__vector_15+0xf0>
		else if((cIntegrator.wC>DEBOUNCE_TIME)&&(cIntegrator.wC<LONG_PRESSION)){
     668:	80 91 68 02 	lds	r24, 0x0268
     66c:	90 91 69 02 	lds	r25, 0x0269
     670:	80 31       	cpi	r24, 0x10	; 16
     672:	91 05       	cpc	r25, r1
     674:	68 f0       	brcs	.+26     	; 0x690 <__vector_15+0xd4>
     676:	80 91 68 02 	lds	r24, 0x0268
     67a:	90 91 69 02 	lds	r25, 0x0269
     67e:	84 36       	cpi	r24, 0x64	; 100
     680:	91 05       	cpc	r25, r1
     682:	30 f4       	brcc	.+12     	; 0x690 <__vector_15+0xd4>
		//********* ACTION FOR MENU SHORT CLICK: backlight **************
			cIntegrator.wC=0;
     684:	10 92 69 02 	sts	0x0269, r1
     688:	10 92 68 02 	sts	0x0268, r1
			bBtn = BTN_C;
     68c:	86 e0       	ldi	r24, 0x06	; 6
     68e:	0c c0       	rjmp	.+24     	; 0x6a8 <__vector_15+0xec>
		}else if(cIntegrator.wC>LONG_PRESSION){
     690:	80 91 68 02 	lds	r24, 0x0268
     694:	90 91 69 02 	lds	r25, 0x0269
     698:	85 36       	cpi	r24, 0x65	; 101
     69a:	91 05       	cpc	r25, r1
     69c:	38 f0       	brcs	.+14     	; 0x6ac <__vector_15+0xf0>
		//********* ACTION FOR MENU LONG PRESSION: entering menu  ************
			cIntegrator.wC=0;
     69e:	10 92 69 02 	sts	0x0269, r1
     6a2:	10 92 68 02 	sts	0x0268, r1
			bBtn = BTN_C_LONG;
     6a6:	87 e0       	ldi	r24, 0x07	; 7
     6a8:	80 93 81 02 	sts	0x0281, r24
		}
	}
	if((bState>0)&&(!bBtnAPressed)){ cIntegrator.wA++; }
     6ac:	80 91 4c 02 	lds	r24, 0x024C
     6b0:	88 23       	and	r24, r24
     6b2:	71 f0       	breq	.+28     	; 0x6d0 <__vector_15+0x114>
     6b4:	80 91 79 02 	lds	r24, 0x0279
     6b8:	88 23       	and	r24, r24
     6ba:	51 f4       	brne	.+20     	; 0x6d0 <__vector_15+0x114>
     6bc:	80 91 64 02 	lds	r24, 0x0264
     6c0:	90 91 65 02 	lds	r25, 0x0265
     6c4:	01 96       	adiw	r24, 0x01	; 1
     6c6:	90 93 65 02 	sts	0x0265, r25
     6ca:	80 93 64 02 	sts	0x0264, r24
     6ce:	0e c0       	rjmp	.+28     	; 0x6ec <__vector_15+0x130>
	else{
		if(cIntegrator.wA<DEBOUNCE_TIME){ cIntegrator.wA=0; }
     6d0:	80 91 64 02 	lds	r24, 0x0264
     6d4:	90 91 65 02 	lds	r25, 0x0265
     6d8:	8f 30       	cpi	r24, 0x0F	; 15
     6da:	91 05       	cpc	r25, r1
     6dc:	18 f0       	brcs	.+6      	; 0x6e4 <__vector_15+0x128>
		else{
			bBtn = BTN_A;
     6de:	82 e0       	ldi	r24, 0x02	; 2
     6e0:	80 93 81 02 	sts	0x0281, r24
			cIntegrator.wA=0;
     6e4:	10 92 65 02 	sts	0x0265, r1
     6e8:	10 92 64 02 	sts	0x0264, r1
		}
	}
	
	if((bState>0)&&(!bBtnBPressed)){ cIntegrator.wB++; }
     6ec:	80 91 4c 02 	lds	r24, 0x024C
     6f0:	88 23       	and	r24, r24
     6f2:	71 f0       	breq	.+28     	; 0x710 <__vector_15+0x154>
     6f4:	80 91 55 02 	lds	r24, 0x0255
     6f8:	88 23       	and	r24, r24
     6fa:	51 f4       	brne	.+20     	; 0x710 <__vector_15+0x154>
     6fc:	80 91 66 02 	lds	r24, 0x0266
     700:	90 91 67 02 	lds	r25, 0x0267
     704:	01 96       	adiw	r24, 0x01	; 1
     706:	90 93 67 02 	sts	0x0267, r25
     70a:	80 93 66 02 	sts	0x0266, r24
     70e:	0e c0       	rjmp	.+28     	; 0x72c <__vector_15+0x170>
	else{
		if(cIntegrator.wB<DEBOUNCE_TIME){ cIntegrator.wB=0; }
     710:	80 91 66 02 	lds	r24, 0x0266
     714:	90 91 67 02 	lds	r25, 0x0267
     718:	8f 30       	cpi	r24, 0x0F	; 15
     71a:	91 05       	cpc	r25, r1
     71c:	18 f0       	brcs	.+6      	; 0x724 <__vector_15+0x168>
		else{
			bBtn = BTN_B;
     71e:	84 e0       	ldi	r24, 0x04	; 4
     720:	80 93 81 02 	sts	0x0281, r24
			cIntegrator.wB=0;
     724:	10 92 67 02 	sts	0x0267, r1
     728:	10 92 66 02 	sts	0x0266, r1
		}
	}
	
/* ******************* RTC ******************** */	

	if(tTime.wMilli<99) tTime.wMilli++;
     72c:	80 91 56 02 	lds	r24, 0x0256
     730:	90 91 57 02 	lds	r25, 0x0257
     734:	83 36       	cpi	r24, 0x63	; 99
     736:	91 05       	cpc	r25, r1
     738:	50 f4       	brcc	.+20     	; 0x74e <__vector_15+0x192>
     73a:	80 91 56 02 	lds	r24, 0x0256
     73e:	90 91 57 02 	lds	r25, 0x0257
     742:	01 96       	adiw	r24, 0x01	; 1
     744:	90 93 57 02 	sts	0x0257, r25
     748:	80 93 56 02 	sts	0x0256, r24
     74c:	5c c0       	rjmp	.+184    	; 0x806 <__vector_15+0x24a>
	else{
		tTime.wMilli=0;
     74e:	10 92 57 02 	sts	0x0257, r1
     752:	10 92 56 02 	sts	0x0256, r1
		if(tTime.bSec<59) tTime.bSec++;
     756:	80 91 58 02 	lds	r24, 0x0258
     75a:	8b 33       	cpi	r24, 0x3B	; 59
     75c:	30 f4       	brcc	.+12     	; 0x76a <__vector_15+0x1ae>
     75e:	80 91 58 02 	lds	r24, 0x0258
     762:	8f 5f       	subi	r24, 0xFF	; 255
     764:	80 93 58 02 	sts	0x0258, r24
     768:	4e c0       	rjmp	.+156    	; 0x806 <__vector_15+0x24a>
		else{
			tTime.bSec=0;
     76a:	10 92 58 02 	sts	0x0258, r1
			if(tTime.bMin<59) tTime.bMin++;
     76e:	80 91 59 02 	lds	r24, 0x0259
     772:	8b 33       	cpi	r24, 0x3B	; 59
     774:	30 f4       	brcc	.+12     	; 0x782 <__vector_15+0x1c6>
     776:	80 91 59 02 	lds	r24, 0x0259
     77a:	8f 5f       	subi	r24, 0xFF	; 255
     77c:	80 93 59 02 	sts	0x0259, r24
     780:	3f c0       	rjmp	.+126    	; 0x800 <__vector_15+0x244>
			else{
				tTime.bMin=0;
     782:	10 92 59 02 	sts	0x0259, r1
				if(tTime.bHour<23) tTime.bHour++;
     786:	80 91 5a 02 	lds	r24, 0x025A
     78a:	87 31       	cpi	r24, 0x17	; 23
     78c:	30 f4       	brcc	.+12     	; 0x79a <__vector_15+0x1de>
     78e:	80 91 5a 02 	lds	r24, 0x025A
     792:	8f 5f       	subi	r24, 0xFF	; 255
     794:	80 93 5a 02 	sts	0x025A, r24
     798:	33 c0       	rjmp	.+102    	; 0x800 <__vector_15+0x244>
				else {
					tTime.bHour=0;
     79a:	10 92 5a 02 	sts	0x025A, r1
					if(tTime.bDay<(aDays[tTime.bMonth-1])){
     79e:	90 91 5b 02 	lds	r25, 0x025B
     7a2:	e0 91 5c 02 	lds	r30, 0x025C
     7a6:	f0 e0       	ldi	r31, 0x00	; 0
     7a8:	e8 57       	subi	r30, 0x78	; 120
     7aa:	fe 4f       	sbci	r31, 0xFE	; 254
     7ac:	80 81       	ld	r24, Z
     7ae:	98 17       	cp	r25, r24
     7b0:	90 f4       	brcc	.+36     	; 0x7d6 <__vector_15+0x21a>
						tTime.bDay++;
     7b2:	80 91 5b 02 	lds	r24, 0x025B
     7b6:	8f 5f       	subi	r24, 0xFF	; 255
     7b8:	80 93 5b 02 	sts	0x025B, r24
						if(tTime.bDay==29 && tTime.bMonth==2 && (!isLeapYear(tTime.bYear))){
     7bc:	80 91 5b 02 	lds	r24, 0x025B
     7c0:	8d 31       	cpi	r24, 0x1D	; 29
     7c2:	d9 f4       	brne	.+54     	; 0x7fa <__vector_15+0x23e>
     7c4:	80 91 5c 02 	lds	r24, 0x025C
     7c8:	82 30       	cpi	r24, 0x02	; 2
     7ca:	b9 f4       	brne	.+46     	; 0x7fa <__vector_15+0x23e>
     7cc:	80 91 5d 02 	lds	r24, 0x025D
		LCDWriteStringXY(3,1, temp_str);
	}
}

int isLeapYear(uint8_t year){
	if((year%4)==0) return 1;
     7d0:	83 70       	andi	r24, 0x03	; 3
     7d2:	99 f0       	breq	.+38     	; 0x7fa <__vector_15+0x23e>
     7d4:	1b c0       	rjmp	.+54     	; 0x80c <__vector_15+0x250>
						if(tTime.bDay==29 && tTime.bMonth==2 && (!isLeapYear(tTime.bYear))){
							tTime.bDay=1;
							tTime.bMonth=3;
						}
					}else{
						tTime.bDay=1;
     7d6:	81 e0       	ldi	r24, 0x01	; 1
     7d8:	80 93 5b 02 	sts	0x025B, r24
						if(tTime.bMonth<12) tTime.bMonth++;
     7dc:	90 91 5c 02 	lds	r25, 0x025C
     7e0:	9c 30       	cpi	r25, 0x0C	; 12
     7e2:	20 f4       	brcc	.+8      	; 0x7ec <__vector_15+0x230>
     7e4:	80 91 5c 02 	lds	r24, 0x025C
     7e8:	8f 5f       	subi	r24, 0xFF	; 255
     7ea:	14 c0       	rjmp	.+40     	; 0x814 <__vector_15+0x258>
						else{
							tTime.bMonth=1;
     7ec:	80 93 5c 02 	sts	0x025C, r24
							tTime.bYear++;
     7f0:	80 91 5d 02 	lds	r24, 0x025D
     7f4:	8f 5f       	subi	r24, 0xFF	; 255
     7f6:	80 93 5d 02 	sts	0x025D, r24
						}
					}
					bDateChanged=1;
     7fa:	81 e0       	ldi	r24, 0x01	; 1
     7fc:	80 93 95 01 	sts	0x0195, r24
				}				
			}
			bTimeChanged=1;
     800:	81 e0       	ldi	r24, 0x01	; 1
     802:	80 93 53 02 	sts	0x0253, r24
		}
	}
	bPriLev = bOldPriLev;
     806:	20 93 63 02 	sts	0x0263, r18
     80a:	07 c0       	rjmp	.+14     	; 0x81a <__vector_15+0x25e>
				else {
					tTime.bHour=0;
					if(tTime.bDay<(aDays[tTime.bMonth-1])){
						tTime.bDay++;
						if(tTime.bDay==29 && tTime.bMonth==2 && (!isLeapYear(tTime.bYear))){
							tTime.bDay=1;
     80c:	81 e0       	ldi	r24, 0x01	; 1
     80e:	80 93 5b 02 	sts	0x025B, r24
							tTime.bMonth=3;
     812:	83 e0       	ldi	r24, 0x03	; 3
     814:	80 93 5c 02 	sts	0x025C, r24
     818:	f0 cf       	rjmp	.-32     	; 0x7fa <__vector_15+0x23e>
			}
			bTimeChanged=1;
		}
	}
	bPriLev = bOldPriLev;
}
     81a:	ff 91       	pop	r31
     81c:	ef 91       	pop	r30
     81e:	9f 91       	pop	r25
     820:	8f 91       	pop	r24
     822:	3f 91       	pop	r19
     824:	2f 91       	pop	r18
     826:	0f 90       	pop	r0
     828:	0b be       	out	0x3b, r0	; 59
     82a:	0f 90       	pop	r0
     82c:	0f be       	out	0x3f, r0	; 63
     82e:	0f 90       	pop	r0
     830:	1f 90       	pop	r1
     832:	18 95       	reti

00000834 <_init>:
/*******************************************************************/
/*******************************************************************/

void _init(){
	/******************* ADC Setup *********************/
	ADCSRA = (1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);		// ADC Prescaler = Fck/128
     834:	87 e0       	ldi	r24, 0x07	; 7
     836:	86 b9       	out	0x06, r24	; 6
	//ADMUX = (1<<ADLAR);							// Left-adjusting result
	ADMUX |= (1<<MUX3)|(1<<MUX1)|(1<<MUX0);			// ADC1 (V+) - ADC0 (V-), Gain=200
     838:	87 b1       	in	r24, 0x07	; 7
     83a:	8b 60       	ori	r24, 0x0B	; 11
     83c:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1<<ADFR)|(1<<ADEN)|(1<<ADIE);		// Free-running mode, enabling ADC and ADC Interrupt
     83e:	86 b1       	in	r24, 0x06	; 6
     840:	88 6a       	ori	r24, 0xA8	; 168
     842:	86 b9       	out	0x06, r24	; 6
	
	
	/******************* PWM Setup *********************/
	DDRB |= (1<<PB7);
     844:	bf 9a       	sbi	0x17, 7	; 23
	OCR2 = 64;
     846:	80 e4       	ldi	r24, 0x40	; 64
     848:	83 bd       	out	0x23, r24	; 35
	TCCR2 = (1<<WGM21)|(1<<WGM20)|(1<<COM21)|(1<<CS20)|(1<<CS21);
     84a:	8b e6       	ldi	r24, 0x6B	; 107
     84c:	85 bd       	out	0x25, r24	; 37
	
	
	/******************* LCD Setup *********************/
	InitLCD(0);
     84e:	80 e0       	ldi	r24, 0x00	; 0
     850:	0e 94 2b 02 	call	0x456	; 0x456 <InitLCD>
	LCDClear();
     854:	81 e0       	ldi	r24, 0x01	; 1
     856:	60 e0       	ldi	r22, 0x00	; 0
     858:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
	LCDWriteStringXY(11,0,"00:00");
     85c:	8b e0       	ldi	r24, 0x0B	; 11
     85e:	60 e0       	ldi	r22, 0x00	; 0
     860:	40 e0       	ldi	r20, 0x00	; 0
     862:	51 e0       	ldi	r21, 0x01	; 1
     864:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <LCDWriteStringXY>
	LCDWriteStringXY(0,1,"T= 0.00");
     868:	80 e0       	ldi	r24, 0x00	; 0
     86a:	61 e0       	ldi	r22, 0x01	; 1
     86c:	46 e0       	ldi	r20, 0x06	; 6
     86e:	51 e0       	ldi	r21, 0x01	; 1
     870:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <LCDWriteStringXY>
	
	
	/******************* RTC Setup *********************/
	TCCR0 |= (1<<CS02)|(1<<CS01)|(1<<CS00);		// clock: F_CPU / 1024
     874:	83 b7       	in	r24, 0x33	; 51
     876:	87 60       	ori	r24, 0x07	; 7
     878:	83 bf       	out	0x33, r24	; 51
	TCCR0 |= (1<<WGM01)|(0<<WGM00);				// Clear Timer on Compare
     87a:	83 b7       	in	r24, 0x33	; 51
     87c:	88 60       	ori	r24, 0x08	; 8
     87e:	83 bf       	out	0x33, r24	; 51
	TIMSK |= (1<<OCIE0);						// Output compare match interrupt enable
     880:	87 b7       	in	r24, 0x37	; 55
     882:	82 60       	ori	r24, 0x02	; 2
     884:	87 bf       	out	0x37, r24	; 55
	OCR0 = 156;									// Interrupt every 10ms
     886:	8c e9       	ldi	r24, 0x9C	; 156
     888:	81 bf       	out	0x31, r24	; 49
	
	
	sei();
     88a:	78 94       	sei
	ADCSRA |= 1<<ADSC;		// ADC Start Conversion
     88c:	36 9a       	sbi	0x06, 6	; 6
}
     88e:	08 95       	ret

00000890 <getTemperature>:


void getTemperature(){
     890:	af 92       	push	r10
     892:	bf 92       	push	r11
     894:	cf 92       	push	r12
     896:	df 92       	push	r13
     898:	ef 92       	push	r14
     89a:	ff 92       	push	r15
     89c:	0f 93       	push	r16
     89e:	1f 93       	push	r17
	cli();				//	togliamo le int durante l'esecuzione di questo codice: operazioni con fp
     8a0:	f8 94       	cli
	dVp = VM + ADC * VREF/(1024*GAIN);
     8a2:	64 b1       	in	r22, 0x04	; 4
     8a4:	75 b1       	in	r23, 0x05	; 5
     8a6:	80 e0       	ldi	r24, 0x00	; 0
     8a8:	90 e0       	ldi	r25, 0x00	; 0
     8aa:	0e 94 26 10 	call	0x204c	; 0x204c <__floatunsisf>
     8ae:	20 e0       	ldi	r18, 0x00	; 0
     8b0:	30 e0       	ldi	r19, 0x00	; 0
     8b2:	40 ea       	ldi	r20, 0xA0	; 160
     8b4:	50 e4       	ldi	r21, 0x40	; 64
     8b6:	0e 94 b4 10 	call	0x2168	; 0x2168 <__mulsf3>
     8ba:	20 e0       	ldi	r18, 0x00	; 0
     8bc:	30 e0       	ldi	r19, 0x00	; 0
     8be:	48 e4       	ldi	r20, 0x48	; 72
     8c0:	58 e4       	ldi	r21, 0x48	; 72
     8c2:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__divsf3>
     8c6:	20 e0       	ldi	r18, 0x00	; 0
     8c8:	30 e0       	ldi	r19, 0x00	; 0
     8ca:	40 e2       	ldi	r20, 0x20	; 32
     8cc:	50 e4       	ldi	r21, 0x40	; 64
     8ce:	0e 94 5a 0f 	call	0x1eb4	; 0x1eb4 <__addsf3>
     8d2:	9b 01       	movw	r18, r22
     8d4:	ac 01       	movw	r20, r24
     8d6:	20 93 7d 02 	sts	0x027D, r18
     8da:	30 93 7e 02 	sts	0x027E, r19
     8de:	40 93 7f 02 	sts	0x027F, r20
     8e2:	50 93 80 02 	sts	0x0280, r21
	dRpt = (dVp*(R1+R2) - VREF*R2)/(VREF - dVp);
     8e6:	60 91 7d 02 	lds	r22, 0x027D
     8ea:	70 91 7e 02 	lds	r23, 0x027E
     8ee:	80 91 7f 02 	lds	r24, 0x027F
     8f2:	90 91 80 02 	lds	r25, 0x0280
     8f6:	e0 90 7d 02 	lds	r14, 0x027D
     8fa:	f0 90 7e 02 	lds	r15, 0x027E
     8fe:	00 91 7f 02 	lds	r16, 0x027F
     902:	10 91 80 02 	lds	r17, 0x0280
     906:	20 e0       	ldi	r18, 0x00	; 0
     908:	30 ec       	ldi	r19, 0xC0	; 192
     90a:	4f e0       	ldi	r20, 0x0F	; 15
     90c:	55 e4       	ldi	r21, 0x45	; 69
     90e:	0e 94 b4 10 	call	0x2168	; 0x2168 <__mulsf3>
     912:	20 e0       	ldi	r18, 0x00	; 0
     914:	30 ee       	ldi	r19, 0xE0	; 224
     916:	4b ea       	ldi	r20, 0xAB	; 171
     918:	55 e4       	ldi	r21, 0x45	; 69
     91a:	0e 94 59 0f 	call	0x1eb2	; 0x1eb2 <__subsf3>
     91e:	5b 01       	movw	r10, r22
     920:	6c 01       	movw	r12, r24
     922:	60 e0       	ldi	r22, 0x00	; 0
     924:	70 e0       	ldi	r23, 0x00	; 0
     926:	80 ea       	ldi	r24, 0xA0	; 160
     928:	90 e4       	ldi	r25, 0x40	; 64
     92a:	a8 01       	movw	r20, r16
     92c:	97 01       	movw	r18, r14
     92e:	0e 94 59 0f 	call	0x1eb2	; 0x1eb2 <__subsf3>
     932:	9b 01       	movw	r18, r22
     934:	ac 01       	movw	r20, r24
     936:	c6 01       	movw	r24, r12
     938:	b5 01       	movw	r22, r10
     93a:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__divsf3>
     93e:	9b 01       	movw	r18, r22
     940:	ac 01       	movw	r20, r24
     942:	20 93 4d 02 	sts	0x024D, r18
     946:	30 93 4e 02 	sts	0x024E, r19
     94a:	40 93 4f 02 	sts	0x024F, r20
     94e:	50 93 50 02 	sts	0x0250, r21
	dTemperature = (dRpt-RPT0) / K;
     952:	60 91 4d 02 	lds	r22, 0x024D
     956:	70 91 4e 02 	lds	r23, 0x024E
     95a:	80 91 4f 02 	lds	r24, 0x024F
     95e:	90 91 50 02 	lds	r25, 0x0250
     962:	20 e0       	ldi	r18, 0x00	; 0
     964:	30 e0       	ldi	r19, 0x00	; 0
     966:	48 ec       	ldi	r20, 0xC8	; 200
     968:	52 e4       	ldi	r21, 0x42	; 66
     96a:	0e 94 59 0f 	call	0x1eb2	; 0x1eb2 <__subsf3>
     96e:	25 ec       	ldi	r18, 0xC5	; 197
     970:	33 e9       	ldi	r19, 0x93	; 147
     972:	46 ec       	ldi	r20, 0xC6	; 198
     974:	5e e3       	ldi	r21, 0x3E	; 62
     976:	0e 94 be 0f 	call	0x1f7c	; 0x1f7c <__divsf3>
     97a:	9b 01       	movw	r18, r22
     97c:	ac 01       	movw	r20, r24
     97e:	20 93 82 02 	sts	0x0282, r18
     982:	30 93 83 02 	sts	0x0283, r19
     986:	40 93 84 02 	sts	0x0284, r20
     98a:	50 93 85 02 	sts	0x0285, r21
	bTempChanged=1;
     98e:	81 e0       	ldi	r24, 0x01	; 1
     990:	80 93 54 02 	sts	0x0254, r24
	sei();
     994:	78 94       	sei
}
     996:	1f 91       	pop	r17
     998:	0f 91       	pop	r16
     99a:	ff 90       	pop	r15
     99c:	ef 90       	pop	r14
     99e:	df 90       	pop	r13
     9a0:	cf 90       	pop	r12
     9a2:	bf 90       	pop	r11
     9a4:	af 90       	pop	r10
     9a6:	08 95       	ret

000009a8 <__vector_21>:
		}
	}
	bPriLev = bOldPriLev;
}

ISR(ADC_vect){
     9a8:	1f 92       	push	r1
     9aa:	0f 92       	push	r0
     9ac:	0f b6       	in	r0, 0x3f	; 63
     9ae:	0f 92       	push	r0
     9b0:	0b b6       	in	r0, 0x3b	; 59
     9b2:	0f 92       	push	r0
     9b4:	11 24       	eor	r1, r1
     9b6:	1f 93       	push	r17
     9b8:	2f 93       	push	r18
     9ba:	3f 93       	push	r19
     9bc:	4f 93       	push	r20
     9be:	5f 93       	push	r21
     9c0:	6f 93       	push	r22
     9c2:	7f 93       	push	r23
     9c4:	8f 93       	push	r24
     9c6:	9f 93       	push	r25
     9c8:	af 93       	push	r26
     9ca:	bf 93       	push	r27
     9cc:	ef 93       	push	r30
     9ce:	ff 93       	push	r31
	if(bPriLev<PRI_ADC) return;
     9d0:	80 91 63 02 	lds	r24, 0x0263
     9d4:	82 30       	cpi	r24, 0x02	; 2
     9d6:	e0 f0       	brcs	.+56     	; 0xa10 <__vector_21+0x68>
	uint8_t bOldPriLev = bPriLev;
     9d8:	10 91 63 02 	lds	r17, 0x0263
	
	if(wCount_adc < 5000){		// to implement: average of values catched, MULTIPLEX for humidity
     9dc:	80 91 76 02 	lds	r24, 0x0276
     9e0:	90 91 77 02 	lds	r25, 0x0277
     9e4:	23 e1       	ldi	r18, 0x13	; 19
     9e6:	88 38       	cpi	r24, 0x88	; 136
     9e8:	92 07       	cpc	r25, r18
     9ea:	50 f4       	brcc	.+20     	; 0xa00 <__vector_21+0x58>
		wCount_adc++;
     9ec:	80 91 76 02 	lds	r24, 0x0276
     9f0:	90 91 77 02 	lds	r25, 0x0277
     9f4:	01 96       	adiw	r24, 0x01	; 1
     9f6:	90 93 77 02 	sts	0x0277, r25
     9fa:	80 93 76 02 	sts	0x0276, r24
     9fe:	06 c0       	rjmp	.+12     	; 0xa0c <__vector_21+0x64>
	}else{
		wCount_adc=0;
     a00:	10 92 77 02 	sts	0x0277, r1
     a04:	10 92 76 02 	sts	0x0276, r1
		getTemperature();
     a08:	0e 94 48 04 	call	0x890	; 0x890 <getTemperature>
	}
	bPriLev = bOldPriLev;
     a0c:	10 93 63 02 	sts	0x0263, r17
}
     a10:	ff 91       	pop	r31
     a12:	ef 91       	pop	r30
     a14:	bf 91       	pop	r27
     a16:	af 91       	pop	r26
     a18:	9f 91       	pop	r25
     a1a:	8f 91       	pop	r24
     a1c:	7f 91       	pop	r23
     a1e:	6f 91       	pop	r22
     a20:	5f 91       	pop	r21
     a22:	4f 91       	pop	r20
     a24:	3f 91       	pop	r19
     a26:	2f 91       	pop	r18
     a28:	1f 91       	pop	r17
     a2a:	0f 90       	pop	r0
     a2c:	0b be       	out	0x3b, r0	; 59
     a2e:	0f 90       	pop	r0
     a30:	0f be       	out	0x3f, r0	; 63
     a32:	0f 90       	pop	r0
     a34:	1f 90       	pop	r1
     a36:	18 95       	reti

00000a38 <writeLCD>:
	bTempChanged=1;
	sei();
}

void writeLCD(int caller){
	if(caller!=bState) return;
     a38:	20 91 4c 02 	lds	r18, 0x024C
     a3c:	30 e0       	ldi	r19, 0x00	; 0
     a3e:	82 17       	cp	r24, r18
     a40:	93 07       	cpc	r25, r19
     a42:	09 f0       	breq	.+2      	; 0xa46 <writeLCD+0xe>
     a44:	5f c0       	rjmp	.+190    	; 0xb04 <writeLCD+0xcc>
	switch(bState){
     a46:	80 91 4c 02 	lds	r24, 0x024C
     a4a:	81 30       	cpi	r24, 0x01	; 1
     a4c:	39 f1       	breq	.+78     	; 0xa9c <writeLCD+0x64>
     a4e:	81 30       	cpi	r24, 0x01	; 1
     a50:	30 f0       	brcs	.+12     	; 0xa5e <writeLCD+0x26>
     a52:	82 30       	cpi	r24, 0x02	; 2
     a54:	61 f1       	breq	.+88     	; 0xaae <writeLCD+0x76>
     a56:	83 30       	cpi	r24, 0x03	; 3
     a58:	09 f0       	breq	.+2      	; 0xa5c <writeLCD+0x24>
     a5a:	54 c0       	rjmp	.+168    	; 0xb04 <writeLCD+0xcc>
     a5c:	4f c0       	rjmp	.+158    	; 0xafc <writeLCD+0xc4>
	case 0:		// idle/RTC+temp
		cli();
     a5e:	f8 94       	cli
		LCDClear();
     a60:	81 e0       	ldi	r24, 0x01	; 1
     a62:	60 e0       	ldi	r22, 0x00	; 0
     a64:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
		LCDCmd(0x0F);
     a68:	8f e0       	ldi	r24, 0x0F	; 15
     a6a:	60 e0       	ldi	r22, 0x00	; 0
     a6c:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
		LCDWriteStringXY(8,0, str);
     a70:	88 e0       	ldi	r24, 0x08	; 8
     a72:	60 e0       	ldi	r22, 0x00	; 0
     a74:	4c e9       	ldi	r20, 0x9C	; 156
     a76:	51 e0       	ldi	r21, 0x01	; 1
     a78:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <LCDWriteStringXY>
		LCDWriteStringXY(0,1, "T= ");
     a7c:	80 e0       	ldi	r24, 0x00	; 0
     a7e:	61 e0       	ldi	r22, 0x01	; 1
     a80:	4e e0       	ldi	r20, 0x0E	; 14
     a82:	51 e0       	ldi	r21, 0x01	; 1
     a84:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <LCDWriteStringXY>
		LCDGotoXY(3,1);
     a88:	83 e0       	ldi	r24, 0x03	; 3
     a8a:	61 e0       	ldi	r22, 0x01	; 1
     a8c:	0e 94 ca 02 	call	0x594	; 0x594 <LCDGotoXY>
		LCDWriteString(temp_str);
     a90:	87 e9       	ldi	r24, 0x97	; 151
     a92:	91 e0       	ldi	r25, 0x01	; 1
     a94:	0e 94 63 02 	call	0x4c6	; 0x4c6 <LCDWriteString>
		sei();
     a98:	78 94       	sei
		break;
     a9a:	08 95       	ret
		
	case 1:		// backlight
		LCDClear();
     a9c:	81 e0       	ldi	r24, 0x01	; 1
     a9e:	60 e0       	ldi	r22, 0x00	; 0
     aa0:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
		LCDWriteStringXY(0,0, "nothing");
     aa4:	80 e0       	ldi	r24, 0x00	; 0
     aa6:	60 e0       	ldi	r22, 0x00	; 0
     aa8:	42 e1       	ldi	r20, 0x12	; 18
     aaa:	51 e0       	ldi	r21, 0x01	; 1
     aac:	24 c0       	rjmp	.+72     	; 0xaf6 <writeLCD+0xbe>
		break;
		
	case 2:		// Main menu
		LCDClear();
     aae:	81 e0       	ldi	r24, 0x01	; 1
     ab0:	60 e0       	ldi	r22, 0x00	; 0
     ab2:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
		LCDWriteStringXY(0,0,"-");
     ab6:	80 e0       	ldi	r24, 0x00	; 0
     ab8:	60 e0       	ldi	r22, 0x00	; 0
     aba:	4a e1       	ldi	r20, 0x1A	; 26
     abc:	51 e0       	ldi	r21, 0x01	; 1
     abe:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <LCDWriteStringXY>
		LCDWriteStringXY(1,0, options[bSelectionMenu]);
     ac2:	40 91 78 02 	lds	r20, 0x0278
     ac6:	50 e0       	ldi	r21, 0x00	; 0
     ac8:	94 e0       	ldi	r25, 0x04	; 4
     aca:	44 0f       	add	r20, r20
     acc:	55 1f       	adc	r21, r21
     ace:	9a 95       	dec	r25
     ad0:	e1 f7       	brne	.-8      	; 0xaca <writeLCD+0x92>
     ad2:	4a 55       	subi	r20, 0x5A	; 90
     ad4:	5e 4f       	sbci	r21, 0xFE	; 254
     ad6:	81 e0       	ldi	r24, 0x01	; 1
     ad8:	60 e0       	ldi	r22, 0x00	; 0
     ada:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <LCDWriteStringXY>
		LCDWriteStringXY(1,1, options[bSelectionMenu+1]);
     ade:	40 91 78 02 	lds	r20, 0x0278
     ae2:	50 e0       	ldi	r21, 0x00	; 0
     ae4:	84 e0       	ldi	r24, 0x04	; 4
     ae6:	44 0f       	add	r20, r20
     ae8:	55 1f       	adc	r21, r21
     aea:	8a 95       	dec	r24
     aec:	e1 f7       	brne	.-8      	; 0xae6 <writeLCD+0xae>
     aee:	4a 54       	subi	r20, 0x4A	; 74
     af0:	5e 4f       	sbci	r21, 0xFE	; 254
     af2:	81 e0       	ldi	r24, 0x01	; 1
     af4:	61 e0       	ldi	r22, 0x01	; 1
     af6:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <LCDWriteStringXY>
		break;
     afa:	08 95       	ret
	case 3:
		LCDClear();
     afc:	81 e0       	ldi	r24, 0x01	; 1
     afe:	60 e0       	ldi	r22, 0x00	; 0
     b00:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
     b04:	08 95       	ret

00000b06 <refreshQuote>:
		break;
	}
}


void refreshQuote(){
     b06:	cf 93       	push	r28
     b08:	df 93       	push	r29
	if(!bDateChanged){ NULL; }
     b0a:	80 91 95 01 	lds	r24, 0x0195
     b0e:	88 23       	and	r24, r24
     b10:	a1 f1       	breq	.+104    	; 0xb7a <refreshQuote+0x74>
	else{
		bDateChanged=0;
     b12:	10 92 95 01 	sts	0x0195, r1
		sprintf(str, "%02d/%02d/%02d,", tTime.bDay, tTime.bMonth, tTime.bYear);
     b16:	40 91 5b 02 	lds	r20, 0x025B
     b1a:	30 91 5c 02 	lds	r19, 0x025C
     b1e:	20 91 5d 02 	lds	r18, 0x025D
     b22:	8d b7       	in	r24, 0x3d	; 61
     b24:	9e b7       	in	r25, 0x3e	; 62
     b26:	0a 97       	sbiw	r24, 0x0a	; 10
     b28:	0f b6       	in	r0, 0x3f	; 63
     b2a:	f8 94       	cli
     b2c:	9e bf       	out	0x3e, r25	; 62
     b2e:	0f be       	out	0x3f, r0	; 63
     b30:	8d bf       	out	0x3d, r24	; 61
     b32:	ed b7       	in	r30, 0x3d	; 61
     b34:	fe b7       	in	r31, 0x3e	; 62
     b36:	31 96       	adiw	r30, 0x01	; 1
     b38:	cc e9       	ldi	r28, 0x9C	; 156
     b3a:	d1 e0       	ldi	r29, 0x01	; 1
     b3c:	ad b7       	in	r26, 0x3d	; 61
     b3e:	be b7       	in	r27, 0x3e	; 62
     b40:	12 96       	adiw	r26, 0x02	; 2
     b42:	dc 93       	st	X, r29
     b44:	ce 93       	st	-X, r28
     b46:	11 97       	sbiw	r26, 0x01	; 1
     b48:	8c e1       	ldi	r24, 0x1C	; 28
     b4a:	91 e0       	ldi	r25, 0x01	; 1
     b4c:	93 83       	std	Z+3, r25	; 0x03
     b4e:	82 83       	std	Z+2, r24	; 0x02
     b50:	44 83       	std	Z+4, r20	; 0x04
     b52:	15 82       	std	Z+5, r1	; 0x05
     b54:	36 83       	std	Z+6, r19	; 0x06
     b56:	17 82       	std	Z+7, r1	; 0x07
     b58:	20 87       	std	Z+8, r18	; 0x08
     b5a:	11 86       	std	Z+9, r1	; 0x09
     b5c:	0e 94 64 12 	call	0x24c8	; 0x24c8 <sprintf>
		LCDWriteStringXY(0,0,str);
     b60:	ed b7       	in	r30, 0x3d	; 61
     b62:	fe b7       	in	r31, 0x3e	; 62
     b64:	3a 96       	adiw	r30, 0x0a	; 10
     b66:	0f b6       	in	r0, 0x3f	; 63
     b68:	f8 94       	cli
     b6a:	fe bf       	out	0x3e, r31	; 62
     b6c:	0f be       	out	0x3f, r0	; 63
     b6e:	ed bf       	out	0x3d, r30	; 61
     b70:	80 e0       	ldi	r24, 0x00	; 0
     b72:	60 e0       	ldi	r22, 0x00	; 0
     b74:	ae 01       	movw	r20, r28
     b76:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <LCDWriteStringXY>
	}
	if(!bTimeChanged){ NULL; }
     b7a:	80 91 53 02 	lds	r24, 0x0253
     b7e:	88 23       	and	r24, r24
     b80:	a1 f1       	breq	.+104    	; 0xbea <refreshQuote+0xe4>
	else{
		bTimeChanged=0;
     b82:	10 92 53 02 	sts	0x0253, r1
		sprintf(str, "%02d:%02d", tTime.bHour, tTime.bMin, tTime.bSec);
     b86:	40 91 5a 02 	lds	r20, 0x025A
     b8a:	30 91 59 02 	lds	r19, 0x0259
     b8e:	20 91 58 02 	lds	r18, 0x0258
     b92:	8d b7       	in	r24, 0x3d	; 61
     b94:	9e b7       	in	r25, 0x3e	; 62
     b96:	0a 97       	sbiw	r24, 0x0a	; 10
     b98:	0f b6       	in	r0, 0x3f	; 63
     b9a:	f8 94       	cli
     b9c:	9e bf       	out	0x3e, r25	; 62
     b9e:	0f be       	out	0x3f, r0	; 63
     ba0:	8d bf       	out	0x3d, r24	; 61
     ba2:	ed b7       	in	r30, 0x3d	; 61
     ba4:	fe b7       	in	r31, 0x3e	; 62
     ba6:	31 96       	adiw	r30, 0x01	; 1
     ba8:	cc e9       	ldi	r28, 0x9C	; 156
     baa:	d1 e0       	ldi	r29, 0x01	; 1
     bac:	ad b7       	in	r26, 0x3d	; 61
     bae:	be b7       	in	r27, 0x3e	; 62
     bb0:	12 96       	adiw	r26, 0x02	; 2
     bb2:	dc 93       	st	X, r29
     bb4:	ce 93       	st	-X, r28
     bb6:	11 97       	sbiw	r26, 0x01	; 1
     bb8:	8c e2       	ldi	r24, 0x2C	; 44
     bba:	91 e0       	ldi	r25, 0x01	; 1
     bbc:	93 83       	std	Z+3, r25	; 0x03
     bbe:	82 83       	std	Z+2, r24	; 0x02
     bc0:	44 83       	std	Z+4, r20	; 0x04
     bc2:	15 82       	std	Z+5, r1	; 0x05
     bc4:	36 83       	std	Z+6, r19	; 0x06
     bc6:	17 82       	std	Z+7, r1	; 0x07
     bc8:	20 87       	std	Z+8, r18	; 0x08
     bca:	11 86       	std	Z+9, r1	; 0x09
     bcc:	0e 94 64 12 	call	0x24c8	; 0x24c8 <sprintf>
		//LCDWriteStringXY(0,0,"        ");
		LCDWriteStringXY(11,0,str);
     bd0:	ed b7       	in	r30, 0x3d	; 61
     bd2:	fe b7       	in	r31, 0x3e	; 62
     bd4:	3a 96       	adiw	r30, 0x0a	; 10
     bd6:	0f b6       	in	r0, 0x3f	; 63
     bd8:	f8 94       	cli
     bda:	fe bf       	out	0x3e, r31	; 62
     bdc:	0f be       	out	0x3f, r0	; 63
     bde:	ed bf       	out	0x3d, r30	; 61
     be0:	8b e0       	ldi	r24, 0x0B	; 11
     be2:	60 e0       	ldi	r22, 0x00	; 0
     be4:	ae 01       	movw	r20, r28
     be6:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <LCDWriteStringXY>
	}
	if(!bTempChanged){ NULL; }
     bea:	80 91 54 02 	lds	r24, 0x0254
     bee:	88 23       	and	r24, r24
     bf0:	e1 f1       	breq	.+120    	; 0xc6a <refreshQuote+0x164>
	else{
		bTempChanged=0;
     bf2:	10 92 54 02 	sts	0x0254, r1
		sprintf(temp_str, "%05.2f", dTemperature);		// float printed with 5 digits (dot included), 2 of which are decimal, zero padded
     bf6:	80 91 82 02 	lds	r24, 0x0282
     bfa:	90 91 83 02 	lds	r25, 0x0283
     bfe:	a0 91 84 02 	lds	r26, 0x0284
     c02:	b0 91 85 02 	lds	r27, 0x0285
     c06:	2d b7       	in	r18, 0x3d	; 61
     c08:	3e b7       	in	r19, 0x3e	; 62
     c0a:	28 50       	subi	r18, 0x08	; 8
     c0c:	30 40       	sbci	r19, 0x00	; 0
     c0e:	0f b6       	in	r0, 0x3f	; 63
     c10:	f8 94       	cli
     c12:	3e bf       	out	0x3e, r19	; 62
     c14:	0f be       	out	0x3f, r0	; 63
     c16:	2d bf       	out	0x3d, r18	; 61
     c18:	4d b7       	in	r20, 0x3d	; 61
     c1a:	5e b7       	in	r21, 0x3e	; 62
     c1c:	4f 5f       	subi	r20, 0xFF	; 255
     c1e:	5f 4f       	sbci	r21, 0xFF	; 255
     c20:	c7 e9       	ldi	r28, 0x97	; 151
     c22:	d1 e0       	ldi	r29, 0x01	; 1
     c24:	ed b7       	in	r30, 0x3d	; 61
     c26:	fe b7       	in	r31, 0x3e	; 62
     c28:	d2 83       	std	Z+2, r29	; 0x02
     c2a:	c1 83       	std	Z+1, r28	; 0x01
     c2c:	26 e3       	ldi	r18, 0x36	; 54
     c2e:	31 e0       	ldi	r19, 0x01	; 1
     c30:	fa 01       	movw	r30, r20
     c32:	33 83       	std	Z+3, r19	; 0x03
     c34:	22 83       	std	Z+2, r18	; 0x02
     c36:	84 83       	std	Z+4, r24	; 0x04
     c38:	95 83       	std	Z+5, r25	; 0x05
     c3a:	a6 83       	std	Z+6, r26	; 0x06
     c3c:	b7 83       	std	Z+7, r27	; 0x07
     c3e:	0e 94 64 12 	call	0x24c8	; 0x24c8 <sprintf>
		LCDWriteStringXY(0,1, "T= ");
     c42:	2d b7       	in	r18, 0x3d	; 61
     c44:	3e b7       	in	r19, 0x3e	; 62
     c46:	28 5f       	subi	r18, 0xF8	; 248
     c48:	3f 4f       	sbci	r19, 0xFF	; 255
     c4a:	0f b6       	in	r0, 0x3f	; 63
     c4c:	f8 94       	cli
     c4e:	3e bf       	out	0x3e, r19	; 62
     c50:	0f be       	out	0x3f, r0	; 63
     c52:	2d bf       	out	0x3d, r18	; 61
     c54:	80 e0       	ldi	r24, 0x00	; 0
     c56:	61 e0       	ldi	r22, 0x01	; 1
     c58:	4e e0       	ldi	r20, 0x0E	; 14
     c5a:	51 e0       	ldi	r21, 0x01	; 1
     c5c:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <LCDWriteStringXY>
		LCDWriteStringXY(3,1, temp_str);
     c60:	83 e0       	ldi	r24, 0x03	; 3
     c62:	61 e0       	ldi	r22, 0x01	; 1
     c64:	ae 01       	movw	r20, r28
     c66:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <LCDWriteStringXY>
	}
}
     c6a:	df 91       	pop	r29
     c6c:	cf 91       	pop	r28
     c6e:	08 95       	ret

00000c70 <isLeapYear>:

int isLeapYear(uint8_t year){
	if((year%4)==0) return 1;
     c70:	83 70       	andi	r24, 0x03	; 3
     c72:	21 e0       	ldi	r18, 0x01	; 1
     c74:	30 e0       	ldi	r19, 0x00	; 0
     c76:	11 f0       	breq	.+4      	; 0xc7c <isLeapYear+0xc>
     c78:	20 e0       	ldi	r18, 0x00	; 0
     c7a:	30 e0       	ldi	r19, 0x00	; 0
	return 0;
}
     c7c:	c9 01       	movw	r24, r18
     c7e:	08 95       	ret

00000c80 <changeEditDate>:
			break;
	}
	
}

void changeEditDate(uint8_t bPosition, uint8_t bButton){
     c80:	98 2f       	mov	r25, r24
     c82:	46 2f       	mov	r20, r22
	int bMunita;
	int bMdecine;
	int bDunita;
	int bDdecine;
	
	bYunita = tTimeEditing.bYear % 10;
     c84:	20 91 75 02 	lds	r18, 0x0275
	bYdecine = tTimeEditing.bYear / 10;
     c88:	e0 91 75 02 	lds	r30, 0x0275
	bMunita = tTimeEditing.bMonth % 10;
     c8c:	80 91 74 02 	lds	r24, 0x0274
	bMdecine = tTimeEditing.bMonth / 10;
     c90:	f0 91 74 02 	lds	r31, 0x0274
	bDunita = tTimeEditing.bDay % 10;
     c94:	30 91 73 02 	lds	r19, 0x0273
	bDdecine = tTimeEditing.bDay / 10;
     c98:	a0 91 73 02 	lds	r26, 0x0273
		
	switch(bPosition){
     c9c:	93 30       	cpi	r25, 0x03	; 3
     c9e:	09 f4       	brne	.+2      	; 0xca2 <changeEditDate+0x22>
     ca0:	62 c0       	rjmp	.+196    	; 0xd66 <changeEditDate+0xe6>
     ca2:	94 30       	cpi	r25, 0x04	; 4
     ca4:	30 f4       	brcc	.+12     	; 0xcb2 <changeEditDate+0x32>
     ca6:	99 23       	and	r25, r25
     ca8:	71 f0       	breq	.+28     	; 0xcc6 <changeEditDate+0x46>
     caa:	91 30       	cpi	r25, 0x01	; 1
     cac:	09 f0       	breq	.+2      	; 0xcb0 <changeEditDate+0x30>
     cae:	e4 c0       	rjmp	.+456    	; 0xe78 <changeEditDate+0x1f8>
     cb0:	23 c0       	rjmp	.+70     	; 0xcf8 <changeEditDate+0x78>
     cb2:	96 30       	cpi	r25, 0x06	; 6
     cb4:	09 f4       	brne	.+2      	; 0xcb8 <changeEditDate+0x38>
     cb6:	a1 c0       	rjmp	.+322    	; 0xdfa <changeEditDate+0x17a>
     cb8:	97 30       	cpi	r25, 0x07	; 7
     cba:	09 f4       	brne	.+2      	; 0xcbe <changeEditDate+0x3e>
     cbc:	b4 c0       	rjmp	.+360    	; 0xe26 <changeEditDate+0x1a6>
     cbe:	94 30       	cpi	r25, 0x04	; 4
     cc0:	09 f0       	breq	.+2      	; 0xcc4 <changeEditDate+0x44>
     cc2:	da c0       	rjmp	.+436    	; 0xe78 <changeEditDate+0x1f8>
     cc4:	67 c0       	rjmp	.+206    	; 0xd94 <changeEditDate+0x114>
		case 0:
			;EDIT_TIME_DATE(0,BTN_A,BTN_B,bButton, tTimeEditing.bDay, bDdecine, bDunita, 3,1)
     cc6:	62 30       	cpi	r22, 0x02	; 2
     cc8:	49 f4       	brne	.+18     	; 0xcdc <changeEditDate+0x5c>
     cca:	80 91 73 02 	lds	r24, 0x0273
     cce:	86 31       	cpi	r24, 0x16	; 22
     cd0:	08 f0       	brcs	.+2      	; 0xcd4 <changeEditDate+0x54>
     cd2:	d2 c0       	rjmp	.+420    	; 0xe78 <changeEditDate+0x1f8>
     cd4:	80 91 73 02 	lds	r24, 0x0273
     cd8:	86 5f       	subi	r24, 0xF6	; 246
     cda:	0b c0       	rjmp	.+22     	; 0xcf2 <changeEditDate+0x72>
     cdc:	64 30       	cpi	r22, 0x04	; 4
     cde:	09 f0       	breq	.+2      	; 0xce2 <changeEditDate+0x62>
     ce0:	cb c0       	rjmp	.+406    	; 0xe78 <changeEditDate+0x1f8>
     ce2:	80 91 73 02 	lds	r24, 0x0273
     ce6:	8a 30       	cpi	r24, 0x0A	; 10
     ce8:	08 f4       	brcc	.+2      	; 0xcec <changeEditDate+0x6c>
     cea:	c6 c0       	rjmp	.+396    	; 0xe78 <changeEditDate+0x1f8>
     cec:	80 91 73 02 	lds	r24, 0x0273
     cf0:	8a 50       	subi	r24, 0x0A	; 10
     cf2:	80 93 73 02 	sts	0x0273, r24
     cf6:	08 95       	ret
	
	bYunita = tTimeEditing.bYear % 10;
	bYdecine = tTimeEditing.bYear / 10;
	bMunita = tTimeEditing.bMonth % 10;
	bMdecine = tTimeEditing.bMonth / 10;
	bDunita = tTimeEditing.bDay % 10;
     cf8:	5a e0       	ldi	r21, 0x0A	; 10
     cfa:	83 2f       	mov	r24, r19
     cfc:	65 2f       	mov	r22, r21
     cfe:	0e 94 17 11 	call	0x222e	; 0x222e <__udivmodqi4>
     d02:	29 2f       	mov	r18, r25
     d04:	30 e0       	ldi	r19, 0x00	; 0
	bDdecine = tTimeEditing.bDay / 10;
     d06:	8a 2f       	mov	r24, r26
     d08:	0e 94 17 11 	call	0x222e	; 0x222e <__udivmodqi4>
	switch(bPosition){
		case 0:
			;EDIT_TIME_DATE(0,BTN_A,BTN_B,bButton, tTimeEditing.bDay, bDdecine, bDunita, 3,1)
			break;
		case 1:
			;EDIT_TIME_DATE(1,BTN_A,BTN_B,bButton, tTimeEditing.bDay, bDdecine, bDunita, 3,1)
     d0c:	42 30       	cpi	r20, 0x02	; 2
     d0e:	a9 f4       	brne	.+42     	; 0xd3a <changeEditDate+0xba>
     d10:	21 15       	cp	r18, r1
     d12:	31 05       	cpc	r19, r1
     d14:	39 f4       	brne	.+14     	; 0xd24 <changeEditDate+0xa4>
     d16:	88 0f       	add	r24, r24
     d18:	98 2f       	mov	r25, r24
     d1a:	99 0f       	add	r25, r25
     d1c:	99 0f       	add	r25, r25
     d1e:	98 0f       	add	r25, r24
     d20:	9f 5f       	subi	r25, 0xFF	; 255
     d22:	18 c0       	rjmp	.+48     	; 0xd54 <changeEditDate+0xd4>
	bYunita = tTimeEditing.bYear % 10;
	bYdecine = tTimeEditing.bYear / 10;
	bMunita = tTimeEditing.bMonth % 10;
	bMdecine = tTimeEditing.bMonth / 10;
	bDunita = tTimeEditing.bDay % 10;
	bDdecine = tTimeEditing.bDay / 10;
     d24:	48 2f       	mov	r20, r24
     d26:	50 e0       	ldi	r21, 0x00	; 0
	switch(bPosition){
		case 0:
			;EDIT_TIME_DATE(0,BTN_A,BTN_B,bButton, tTimeEditing.bDay, bDdecine, bDunita, 3,1)
			break;
		case 1:
			;EDIT_TIME_DATE(1,BTN_A,BTN_B,bButton, tTimeEditing.bDay, bDdecine, bDunita, 3,1)
     d28:	43 30       	cpi	r20, 0x03	; 3
     d2a:	51 05       	cpc	r21, r1
     d2c:	ac f4       	brge	.+42     	; 0xd58 <changeEditDate+0xd8>
     d2e:	29 30       	cpi	r18, 0x09	; 9
     d30:	31 05       	cpc	r19, r1
     d32:	91 f0       	breq	.+36     	; 0xd58 <changeEditDate+0xd8>
     d34:	2f 5f       	subi	r18, 0xFF	; 255
     d36:	3f 4f       	sbci	r19, 0xFF	; 255
     d38:	07 c0       	rjmp	.+14     	; 0xd48 <changeEditDate+0xc8>
     d3a:	44 30       	cpi	r20, 0x04	; 4
     d3c:	69 f4       	brne	.+26     	; 0xd58 <changeEditDate+0xd8>
     d3e:	21 15       	cp	r18, r1
     d40:	31 05       	cpc	r19, r1
     d42:	51 f0       	breq	.+20     	; 0xd58 <changeEditDate+0xd8>
     d44:	21 50       	subi	r18, 0x01	; 1
     d46:	30 40       	sbci	r19, 0x00	; 0
     d48:	88 0f       	add	r24, r24
     d4a:	98 2f       	mov	r25, r24
     d4c:	99 0f       	add	r25, r25
     d4e:	99 0f       	add	r25, r25
     d50:	98 0f       	add	r25, r24
     d52:	92 0f       	add	r25, r18
     d54:	90 93 73 02 	sts	0x0273, r25
			if(tTimeEditing.bDay==0) tTimeEditing.bDay=1;
     d58:	80 91 73 02 	lds	r24, 0x0273
     d5c:	88 23       	and	r24, r24
     d5e:	09 f0       	breq	.+2      	; 0xd62 <changeEditDate+0xe2>
     d60:	8b c0       	rjmp	.+278    	; 0xe78 <changeEditDate+0x1f8>
     d62:	81 e0       	ldi	r24, 0x01	; 1
     d64:	c6 cf       	rjmp	.-116    	; 0xcf2 <changeEditDate+0x72>
			break;
		case 3:
			;EDIT_TIME_DATE(0,BTN_A,BTN_B,bButton, tTimeEditing.bMonth, bMdecine, bMunita, 1,2)
     d66:	62 30       	cpi	r22, 0x02	; 2
     d68:	49 f4       	brne	.+18     	; 0xd7c <changeEditDate+0xfc>
     d6a:	80 91 74 02 	lds	r24, 0x0274
     d6e:	83 30       	cpi	r24, 0x03	; 3
     d70:	08 f0       	brcs	.+2      	; 0xd74 <changeEditDate+0xf4>
     d72:	82 c0       	rjmp	.+260    	; 0xe78 <changeEditDate+0x1f8>
     d74:	80 91 74 02 	lds	r24, 0x0274
     d78:	86 5f       	subi	r24, 0xF6	; 246
     d7a:	3c c0       	rjmp	.+120    	; 0xdf4 <changeEditDate+0x174>
     d7c:	64 30       	cpi	r22, 0x04	; 4
     d7e:	09 f0       	breq	.+2      	; 0xd82 <changeEditDate+0x102>
     d80:	7b c0       	rjmp	.+246    	; 0xe78 <changeEditDate+0x1f8>
     d82:	80 91 74 02 	lds	r24, 0x0274
     d86:	8a 30       	cpi	r24, 0x0A	; 10
     d88:	08 f4       	brcc	.+2      	; 0xd8c <changeEditDate+0x10c>
     d8a:	76 c0       	rjmp	.+236    	; 0xe78 <changeEditDate+0x1f8>
     d8c:	80 91 74 02 	lds	r24, 0x0274
     d90:	8a 50       	subi	r24, 0x0A	; 10
     d92:	30 c0       	rjmp	.+96     	; 0xdf4 <changeEditDate+0x174>
	int bDunita;
	int bDdecine;
	
	bYunita = tTimeEditing.bYear % 10;
	bYdecine = tTimeEditing.bYear / 10;
	bMunita = tTimeEditing.bMonth % 10;
     d94:	5a e0       	ldi	r21, 0x0A	; 10
     d96:	65 2f       	mov	r22, r21
     d98:	0e 94 17 11 	call	0x222e	; 0x222e <__udivmodqi4>
     d9c:	29 2f       	mov	r18, r25
     d9e:	30 e0       	ldi	r19, 0x00	; 0
	bMdecine = tTimeEditing.bMonth / 10;
     da0:	8f 2f       	mov	r24, r31
     da2:	0e 94 17 11 	call	0x222e	; 0x222e <__udivmodqi4>
			break;
		case 3:
			;EDIT_TIME_DATE(0,BTN_A,BTN_B,bButton, tTimeEditing.bMonth, bMdecine, bMunita, 1,2)
			break;
		case 4:
			;EDIT_TIME_DATE(1,BTN_A,BTN_B,bButton, tTimeEditing.bMonth, bMdecine, bMunita, 1,2)
     da6:	42 30       	cpi	r20, 0x02	; 2
     da8:	81 f4       	brne	.+32     	; 0xdca <changeEditDate+0x14a>
     daa:	22 30       	cpi	r18, 0x02	; 2
     dac:	31 05       	cpc	r19, r1
     dae:	1c f4       	brge	.+6      	; 0xdb6 <changeEditDate+0x136>
     db0:	2f 5f       	subi	r18, 0xFF	; 255
     db2:	3f 4f       	sbci	r19, 0xFF	; 255
     db4:	11 c0       	rjmp	.+34     	; 0xdd8 <changeEditDate+0x158>
     db6:	88 23       	and	r24, r24
     db8:	b9 f4       	brne	.+46     	; 0xde8 <changeEditDate+0x168>
     dba:	29 30       	cpi	r18, 0x09	; 9
     dbc:	31 05       	cpc	r19, r1
     dbe:	a1 f0       	breq	.+40     	; 0xde8 <changeEditDate+0x168>
     dc0:	2f 5f       	subi	r18, 0xFF	; 255
     dc2:	3f 4f       	sbci	r19, 0xFF	; 255
     dc4:	20 93 74 02 	sts	0x0274, r18
     dc8:	0f c0       	rjmp	.+30     	; 0xde8 <changeEditDate+0x168>
     dca:	44 30       	cpi	r20, 0x04	; 4
     dcc:	69 f4       	brne	.+26     	; 0xde8 <changeEditDate+0x168>
     dce:	21 15       	cp	r18, r1
     dd0:	31 05       	cpc	r19, r1
     dd2:	51 f0       	breq	.+20     	; 0xde8 <changeEditDate+0x168>
     dd4:	21 50       	subi	r18, 0x01	; 1
     dd6:	30 40       	sbci	r19, 0x00	; 0
     dd8:	88 0f       	add	r24, r24
     dda:	98 2f       	mov	r25, r24
     ddc:	99 0f       	add	r25, r25
     dde:	99 0f       	add	r25, r25
     de0:	98 0f       	add	r25, r24
     de2:	92 0f       	add	r25, r18
     de4:	90 93 74 02 	sts	0x0274, r25
			if(tTimeEditing.bMonth==0) tTimeEditing.bMonth=1;
     de8:	80 91 74 02 	lds	r24, 0x0274
     dec:	88 23       	and	r24, r24
     dee:	09 f0       	breq	.+2      	; 0xdf2 <changeEditDate+0x172>
     df0:	43 c0       	rjmp	.+134    	; 0xe78 <changeEditDate+0x1f8>
     df2:	81 e0       	ldi	r24, 0x01	; 1
     df4:	80 93 74 02 	sts	0x0274, r24
     df8:	08 95       	ret
			break;
		case 6:
			;EDIT_TIME_DATE(0,BTN_A,BTN_B,bButton, tTimeEditing.bYear, bYdecine, bYunita, 9,9)
     dfa:	62 30       	cpi	r22, 0x02	; 2
     dfc:	41 f4       	brne	.+16     	; 0xe0e <changeEditDate+0x18e>
     dfe:	80 91 75 02 	lds	r24, 0x0275
     e02:	8a 35       	cpi	r24, 0x5A	; 90
     e04:	c8 f5       	brcc	.+114    	; 0xe78 <changeEditDate+0x1f8>
     e06:	80 91 75 02 	lds	r24, 0x0275
     e0a:	86 5f       	subi	r24, 0xF6	; 246
     e0c:	09 c0       	rjmp	.+18     	; 0xe20 <changeEditDate+0x1a0>
     e0e:	64 30       	cpi	r22, 0x04	; 4
     e10:	99 f5       	brne	.+102    	; 0xe78 <changeEditDate+0x1f8>
     e12:	80 91 75 02 	lds	r24, 0x0275
     e16:	8a 30       	cpi	r24, 0x0A	; 10
     e18:	78 f1       	brcs	.+94     	; 0xe78 <changeEditDate+0x1f8>
     e1a:	80 91 75 02 	lds	r24, 0x0275
     e1e:	8a 50       	subi	r24, 0x0A	; 10
     e20:	80 93 75 02 	sts	0x0275, r24
     e24:	08 95       	ret
	int bMunita;
	int bMdecine;
	int bDunita;
	int bDdecine;
	
	bYunita = tTimeEditing.bYear % 10;
     e26:	5a e0       	ldi	r21, 0x0A	; 10
     e28:	82 2f       	mov	r24, r18
     e2a:	65 2f       	mov	r22, r21
     e2c:	0e 94 17 11 	call	0x222e	; 0x222e <__udivmodqi4>
     e30:	29 2f       	mov	r18, r25
     e32:	30 e0       	ldi	r19, 0x00	; 0
	bYdecine = tTimeEditing.bYear / 10;
     e34:	8e 2f       	mov	r24, r30
     e36:	0e 94 17 11 	call	0x222e	; 0x222e <__udivmodqi4>
			break;
		case 6:
			;EDIT_TIME_DATE(0,BTN_A,BTN_B,bButton, tTimeEditing.bYear, bYdecine, bYunita, 9,9)
			break;
		case 7:
			;EDIT_TIME_DATE(1,BTN_A,BTN_B,bButton, tTimeEditing.bYear, bYdecine, bYunita, 9,9)
     e3a:	42 30       	cpi	r20, 0x02	; 2
     e3c:	71 f4       	brne	.+28     	; 0xe5a <changeEditDate+0x1da>
     e3e:	29 30       	cpi	r18, 0x09	; 9
     e40:	31 05       	cpc	r19, r1
     e42:	d1 f0       	breq	.+52     	; 0xe78 <changeEditDate+0x1f8>
     e44:	2f 5f       	subi	r18, 0xFF	; 255
     e46:	3f 4f       	sbci	r19, 0xFF	; 255
     e48:	88 0f       	add	r24, r24
     e4a:	98 2f       	mov	r25, r24
     e4c:	99 0f       	add	r25, r25
     e4e:	99 0f       	add	r25, r25
     e50:	98 0f       	add	r25, r24
     e52:	92 0f       	add	r25, r18
     e54:	90 93 75 02 	sts	0x0275, r25
     e58:	08 95       	ret
     e5a:	44 30       	cpi	r20, 0x04	; 4
     e5c:	69 f4       	brne	.+26     	; 0xe78 <changeEditDate+0x1f8>
     e5e:	21 15       	cp	r18, r1
     e60:	31 05       	cpc	r19, r1
     e62:	51 f0       	breq	.+20     	; 0xe78 <changeEditDate+0x1f8>
     e64:	21 50       	subi	r18, 0x01	; 1
     e66:	30 40       	sbci	r19, 0x00	; 0
     e68:	88 0f       	add	r24, r24
     e6a:	98 2f       	mov	r25, r24
     e6c:	99 0f       	add	r25, r25
     e6e:	99 0f       	add	r25, r25
     e70:	98 0f       	add	r25, r24
     e72:	92 0f       	add	r25, r18
     e74:	90 93 75 02 	sts	0x0275, r25
     e78:	08 95       	ret

00000e7a <main>:

/******************************************************************************/
/*********************************  Main  *************************************/
/******************************************************************************/

int main(void){
     e7a:	6f 92       	push	r6
     e7c:	7f 92       	push	r7
     e7e:	8f 92       	push	r8
     e80:	9f 92       	push	r9
     e82:	af 92       	push	r10
     e84:	bf 92       	push	r11
     e86:	cf 92       	push	r12
     e88:	df 92       	push	r13
     e8a:	ef 92       	push	r14
     e8c:	ff 92       	push	r15
     e8e:	0f 93       	push	r16
     e90:	1f 93       	push	r17
     e92:	cf 93       	push	r28
     e94:	df 93       	push	r29
	
	bPriLev=PRI_MAIN;
     e96:	89 e0       	ldi	r24, 0x09	; 9
     e98:	80 93 63 02 	sts	0x0263, r24
	
	DDRA = 0xff;		// PORTA = output
     e9c:	8f ef       	ldi	r24, 0xFF	; 255
     e9e:	8a bb       	out	0x1a, r24	; 26
	
	DDRC = 0x13;		//
     ea0:	83 e1       	ldi	r24, 0x13	; 19
     ea2:	84 bb       	out	0x14, r24	; 20
	PORTD = 0x13;		// pins 0,1,4 of PORTC are pulled high
     ea4:	82 bb       	out	0x12, r24	; 18
	
	tTime.bDay=7;
     ea6:	87 e0       	ldi	r24, 0x07	; 7
     ea8:	80 93 5b 02 	sts	0x025B, r24
	tTime.bMonth=8;
     eac:	88 e0       	ldi	r24, 0x08	; 8
     eae:	80 93 5c 02 	sts	0x025C, r24
	tTime.bYear=11;
     eb2:	8b e0       	ldi	r24, 0x0B	; 11
     eb4:	80 93 5d 02 	sts	0x025D, r24
	
	
	
	
	_init();
     eb8:	0e 94 1a 04 	call	0x834	; 0x834 <_init>
							LCD_CURSOR_LEFT_N(8-bSelectionTime);
							break;
						case BTN_B:
							bBtn = NO_BTN;
							changeEditTime(bSelectionTime, BTN_B);
							sprintf(str, "%02d:%02d:%02d", tTimeEditing.bHour, tTimeEditing.bMin, tTimeEditing.bSec);
     ebc:	cc e9       	ldi	r28, 0x9C	; 156
     ebe:	d1 e0       	ldi	r29, 0x01	; 1
     ec0:	ac e6       	ldi	r26, 0x6C	; 108
     ec2:	ca 2e       	mov	r12, r26
     ec4:	a1 e0       	ldi	r26, 0x01	; 1
     ec6:	da 2e       	mov	r13, r26
							LCDWriteStringXY(3,1,str);
							LCD_CURSOR_LEFT_N(8-bSelectionTime);
     ec8:	f8 e0       	ldi	r31, 0x08	; 8
     eca:	ef 2e       	mov	r14, r31
     ecc:	f1 2c       	mov	r15, r1
							else{ bSelectionTime=0; LCD_CURSOR_LEFT_N(7); }
							if(bSelectionTime==2 || bSelectionTime==5){ LCDCmd(0x14); bSelectionTime++; }
							bBtn = NO_BTN;
							break;
						case BTN_C_LONG:
							bState=STATE_EDIT_TIME_CONFIRM;
     ece:	e5 e0       	ldi	r30, 0x05	; 5
     ed0:	7e 2e       	mov	r7, r30
							bBtn=NO_BTN;
							break;
						
						case BTN_C_LONG:
							if(bSelectionTime){
								bState = STATE_EDIT_TIME;
     ed2:	74 e0       	ldi	r23, 0x04	; 4
     ed4:	97 2e       	mov	r9, r23
						break;
					
					case BTN_B:
						if(bSelectionMenu>0) bSelectionMenu--;
						else bSelectionMenu=6;
						bSelectionMenu %= 7;
     ed6:	67 e0       	ldi	r22, 0x07	; 7
     ed8:	86 2e       	mov	r8, r22
						bBtn=0;
						break;
					
					case BTN_B:
						if(bSelectionMenu>0) bSelectionMenu--;
						else bSelectionMenu=6;
     eda:	56 e0       	ldi	r21, 0x06	; 6
     edc:	65 2e       	mov	r6, r21
						LCD_CURSOR_LEFT_N(8-bSelectionDate);
						break;
					case BTN_B:
						bBtn = NO_BTN;
						changeEditDate(bSelectionDate, BTN_B);
						sprintf(str, "%02d/%02d/%02d", tTimeEditing.bDay, tTimeEditing.bMonth, tTimeEditing.bYear);
     ede:	4f e3       	ldi	r20, 0x3F	; 63
     ee0:	a4 2e       	mov	r10, r20
     ee2:	41 e0       	ldi	r20, 0x01	; 1
     ee4:	b4 2e       	mov	r11, r20
	
	
	_init();
	
	while(1) { /* Infinite Loop */
		switch(bState){
     ee6:	00 91 4c 02 	lds	r16, 0x024C
     eea:	02 30       	cpi	r16, 0x02	; 2
     eec:	09 f4       	brne	.+2      	; 0xef0 <main+0x76>
     eee:	a9 c0       	rjmp	.+338    	; 0x1042 <main+0x1c8>
     ef0:	03 30       	cpi	r16, 0x03	; 3
     ef2:	28 f4       	brcc	.+10     	; 0xefe <main+0x84>
     ef4:	00 23       	and	r16, r16
     ef6:	61 f0       	breq	.+24     	; 0xf10 <main+0x96>
     ef8:	01 30       	cpi	r16, 0x01	; 1
     efa:	a9 f7       	brne	.-22     	; 0xee6 <main+0x6c>
     efc:	17 c0       	rjmp	.+46     	; 0xf2c <main+0xb2>
     efe:	04 30       	cpi	r16, 0x04	; 4
     f00:	09 f4       	brne	.+2      	; 0xf04 <main+0x8a>
     f02:	3e c2       	rjmp	.+1148   	; 0x1380 <__stack+0x281>
     f04:	04 30       	cpi	r16, 0x04	; 4
     f06:	08 f4       	brcc	.+2      	; 0xf0a <main+0x90>
     f08:	cd c1       	rjmp	.+922    	; 0x12a4 <__stack+0x1a5>
     f0a:	05 30       	cpi	r16, 0x05	; 5
     f0c:	61 f7       	brne	.-40     	; 0xee6 <main+0x6c>
     f0e:	69 c3       	rjmp	.+1746   	; 0x15e2 <__stack+0x4e3>
			
			case STATE_IDLE:
				switch(bBtn){
     f10:	80 91 81 02 	lds	r24, 0x0281
     f14:	88 23       	and	r24, r24
     f16:	19 f0       	breq	.+6      	; 0xf1e <main+0xa4>
     f18:	87 30       	cpi	r24, 0x07	; 7
     f1a:	29 f7       	brne	.-54     	; 0xee6 <main+0x6c>
     f1c:	03 c0       	rjmp	.+6      	; 0xf24 <main+0xaa>
					case NO_BTN:
						refreshQuote();
     f1e:	0e 94 83 05 	call	0xb06	; 0xb06 <refreshQuote>
     f22:	da c3       	rjmp	.+1972   	; 0x16d8 <__stack+0x5d9>
						break;
					// case BNT_A_LONG:
					// case BTN_B_LONG:
					//		BACKLIGHT!
					case BTN_C_LONG:
						bState = STATE_MENU;
     f24:	81 e0       	ldi	r24, 0x01	; 1
     f26:	80 93 4c 02 	sts	0x024C, r24
     f2a:	ae c3       	rjmp	.+1884   	; 0x1688 <__stack+0x589>
				}
				break;
				
				
			case STATE_MENU:
				switch(bBtn){
     f2c:	80 91 81 02 	lds	r24, 0x0281
     f30:	84 30       	cpi	r24, 0x04	; 4
     f32:	09 f4       	brne	.+2      	; 0xf36 <main+0xbc>
     f34:	51 c0       	rjmp	.+162    	; 0xfd8 <main+0x15e>
     f36:	85 30       	cpi	r24, 0x05	; 5
     f38:	28 f4       	brcc	.+10     	; 0xf44 <main+0xca>
     f3a:	88 23       	and	r24, r24
     f3c:	49 f0       	breq	.+18     	; 0xf50 <main+0xd6>
     f3e:	82 30       	cpi	r24, 0x02	; 2
     f40:	91 f6       	brne	.-92     	; 0xee6 <main+0x6c>
     f42:	3b c0       	rjmp	.+118    	; 0xfba <main+0x140>
     f44:	86 30       	cpi	r24, 0x06	; 6
     f46:	09 f4       	brne	.+2      	; 0xf4a <main+0xd0>
     f48:	5e c0       	rjmp	.+188    	; 0x1006 <main+0x18c>
     f4a:	87 30       	cpi	r24, 0x07	; 7
     f4c:	61 f6       	brne	.-104    	; 0xee6 <main+0x6c>
     f4e:	68 c0       	rjmp	.+208    	; 0x1020 <main+0x1a6>
					case NO_BTN:
						if(bSelectionMenuChanged || bFirst){
     f50:	80 91 6d 02 	lds	r24, 0x026D
     f54:	88 23       	and	r24, r24
     f56:	21 f4       	brne	.+8      	; 0xf60 <main+0xe6>
     f58:	80 91 96 01 	lds	r24, 0x0196
     f5c:	88 23       	and	r24, r24
     f5e:	19 f2       	breq	.-122    	; 0xee6 <main+0x6c>
							bFirst=0;
     f60:	10 92 96 01 	sts	0x0196, r1
							bSelectionMenuChanged=0;
     f64:	10 92 6d 02 	sts	0x026D, r1
							LCDWriteStringXY(0,0,"-");
     f68:	80 e0       	ldi	r24, 0x00	; 0
     f6a:	60 e0       	ldi	r22, 0x00	; 0
     f6c:	4a e1       	ldi	r20, 0x1A	; 26
     f6e:	51 e0       	ldi	r21, 0x01	; 1
     f70:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <LCDWriteStringXY>
							LCDWriteStringXY(1,0, options[bSelectionMenu]);
     f74:	40 91 78 02 	lds	r20, 0x0278
     f78:	50 e0       	ldi	r21, 0x00	; 0
     f7a:	34 e0       	ldi	r19, 0x04	; 4
     f7c:	44 0f       	add	r20, r20
     f7e:	55 1f       	adc	r21, r21
     f80:	3a 95       	dec	r19
     f82:	e1 f7       	brne	.-8      	; 0xf7c <main+0x102>
     f84:	4a 55       	subi	r20, 0x5A	; 90
     f86:	5e 4f       	sbci	r21, 0xFE	; 254
     f88:	81 e0       	ldi	r24, 0x01	; 1
     f8a:	60 e0       	ldi	r22, 0x00	; 0
     f8c:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <LCDWriteStringXY>
							LCDWriteStringXY(0,1," ");
     f90:	80 e0       	ldi	r24, 0x00	; 0
     f92:	61 e0       	ldi	r22, 0x01	; 1
     f94:	4d e3       	ldi	r20, 0x3D	; 61
     f96:	51 e0       	ldi	r21, 0x01	; 1
     f98:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <LCDWriteStringXY>
							LCDWriteStringXY(1,1, options[bSelectionMenu+1]);
     f9c:	40 91 78 02 	lds	r20, 0x0278
     fa0:	50 e0       	ldi	r21, 0x00	; 0
     fa2:	24 e0       	ldi	r18, 0x04	; 4
     fa4:	44 0f       	add	r20, r20
     fa6:	55 1f       	adc	r21, r21
     fa8:	2a 95       	dec	r18
     faa:	e1 f7       	brne	.-8      	; 0xfa4 <main+0x12a>
     fac:	4a 54       	subi	r20, 0x4A	; 74
     fae:	5e 4f       	sbci	r21, 0xFE	; 254
     fb0:	81 e0       	ldi	r24, 0x01	; 1
     fb2:	61 e0       	ldi	r22, 0x01	; 1
     fb4:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <LCDWriteStringXY>
     fb8:	96 cf       	rjmp	.-212    	; 0xee6 <main+0x6c>
						}
						break;
					
					case BTN_A:
						bSelectionMenu++;
     fba:	80 91 78 02 	lds	r24, 0x0278
     fbe:	8f 5f       	subi	r24, 0xFF	; 255
     fc0:	80 93 78 02 	sts	0x0278, r24
						bSelectionMenu %= 7;
     fc4:	80 91 78 02 	lds	r24, 0x0278
     fc8:	68 2d       	mov	r22, r8
     fca:	0e 94 17 11 	call	0x222e	; 0x222e <__udivmodqi4>
     fce:	90 93 78 02 	sts	0x0278, r25
						bSelectionMenuChanged=1;
     fd2:	00 93 6d 02 	sts	0x026D, r16
     fd6:	58 c3       	rjmp	.+1712   	; 0x1688 <__stack+0x589>
						bBtn=0;
						break;
					
					case BTN_B:
						if(bSelectionMenu>0) bSelectionMenu--;
     fd8:	80 91 78 02 	lds	r24, 0x0278
     fdc:	88 23       	and	r24, r24
     fde:	31 f0       	breq	.+12     	; 0xfec <main+0x172>
     fe0:	80 91 78 02 	lds	r24, 0x0278
     fe4:	81 50       	subi	r24, 0x01	; 1
     fe6:	80 93 78 02 	sts	0x0278, r24
     fea:	02 c0       	rjmp	.+4      	; 0xff0 <main+0x176>
						else bSelectionMenu=6;
     fec:	60 92 78 02 	sts	0x0278, r6
						bSelectionMenu %= 7;
     ff0:	80 91 78 02 	lds	r24, 0x0278
     ff4:	68 2d       	mov	r22, r8
     ff6:	0e 94 17 11 	call	0x222e	; 0x222e <__udivmodqi4>
     ffa:	90 93 78 02 	sts	0x0278, r25
						bSelectionMenuChanged=1;
     ffe:	81 e0       	ldi	r24, 0x01	; 1
    1000:	80 93 6d 02 	sts	0x026D, r24
    1004:	41 c3       	rjmp	.+1666   	; 0x1688 <__stack+0x589>
						bBtn=0;
						break;
					
					case BTN_C:
						switch(bSelectionMenu){
    1006:	80 91 78 02 	lds	r24, 0x0278
    100a:	81 30       	cpi	r24, 0x01	; 1
    100c:	21 f0       	breq	.+8      	; 0x1016 <main+0x19c>
    100e:	82 30       	cpi	r24, 0x02	; 2
    1010:	09 f0       	breq	.+2      	; 0x1014 <main+0x19a>
    1012:	62 c3       	rjmp	.+1732   	; 0x16d8 <__stack+0x5d9>
    1014:	02 c0       	rjmp	.+4      	; 0x101a <main+0x1a0>
							case SEL_TIMEZONE:
								break;
							case SEL_DATE:
								bState = STATE_EDIT_DATE;
    1016:	82 e0       	ldi	r24, 0x02	; 2
    1018:	42 c1       	rjmp	.+644    	; 0x129e <__stack+0x19f>
								bBtn = NO_BTN;
								break;
							case SEL_TIME:
								bState = STATE_EDIT_TIME;
    101a:	90 92 4c 02 	sts	0x024C, r9
    101e:	5a c3       	rjmp	.+1716   	; 0x16d4 <__stack+0x5d5>
						}
						bFirst=1;
						break;
					
					case BTN_C_LONG:
						bState = STATE_IDLE;
    1020:	10 92 4c 02 	sts	0x024C, r1
						bBtn=NO_BTN;
    1024:	10 92 81 02 	sts	0x0281, r1
						LCDClear();
    1028:	81 e0       	ldi	r24, 0x01	; 1
    102a:	60 e0       	ldi	r22, 0x00	; 0
    102c:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
						bSelectionMenu=0;
    1030:	10 92 78 02 	sts	0x0278, r1
						bDateChanged=1;
    1034:	00 93 95 01 	sts	0x0195, r16
						bTimeChanged=1;
    1038:	00 93 53 02 	sts	0x0253, r16
						bTempChanged=1;
    103c:	00 93 54 02 	sts	0x0254, r16
						break;
    1040:	52 cf       	rjmp	.-348    	; 0xee6 <main+0x6c>
				}				
				break;
			
			
			case STATE_EDIT_DATE:
				switch(bBtn){
    1042:	80 91 81 02 	lds	r24, 0x0281
    1046:	84 30       	cpi	r24, 0x04	; 4
    1048:	09 f4       	brne	.+2      	; 0x104c <main+0x1d2>
    104a:	b6 c0       	rjmp	.+364    	; 0x11b8 <__stack+0xb9>
    104c:	85 30       	cpi	r24, 0x05	; 5
    104e:	30 f4       	brcc	.+12     	; 0x105c <main+0x1e2>
    1050:	88 23       	and	r24, r24
    1052:	59 f0       	breq	.+22     	; 0x106a <main+0x1f0>
    1054:	82 30       	cpi	r24, 0x02	; 2
    1056:	09 f0       	breq	.+2      	; 0x105a <main+0x1e0>
    1058:	46 cf       	rjmp	.-372    	; 0xee6 <main+0x6c>
    105a:	65 c0       	rjmp	.+202    	; 0x1126 <__stack+0x27>
    105c:	86 30       	cpi	r24, 0x06	; 6
    105e:	09 f4       	brne	.+2      	; 0x1062 <main+0x1e8>
    1060:	f1 c0       	rjmp	.+482    	; 0x1244 <__stack+0x145>
    1062:	87 30       	cpi	r24, 0x07	; 7
    1064:	09 f0       	breq	.+2      	; 0x1068 <main+0x1ee>
    1066:	3f cf       	rjmp	.-386    	; 0xee6 <main+0x6c>
    1068:	19 c1       	rjmp	.+562    	; 0x129c <__stack+0x19d>
					case NO_BTN:
						if(bFirst){
    106a:	80 91 96 01 	lds	r24, 0x0196
    106e:	88 23       	and	r24, r24
    1070:	09 f4       	brne	.+2      	; 0x1074 <main+0x1fa>
    1072:	39 cf       	rjmp	.-398    	; 0xee6 <main+0x6c>
							bFirst=0;
    1074:	10 92 96 01 	sts	0x0196, r1
							LCDClear();
    1078:	81 e0       	ldi	r24, 0x01	; 1
    107a:	60 e0       	ldi	r22, 0x00	; 0
    107c:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
							tTimeEditing = (bSelectionDateChanged==1) ? tTimeEditing : tTime;
    1080:	80 91 6a 02 	lds	r24, 0x026A
    1084:	81 30       	cpi	r24, 0x01	; 1
    1086:	49 f0       	breq	.+18     	; 0x109a <main+0x220>
    1088:	ae e6       	ldi	r26, 0x6E	; 110
    108a:	b2 e0       	ldi	r27, 0x02	; 2
    108c:	e6 e5       	ldi	r30, 0x56	; 86
    108e:	f2 e0       	ldi	r31, 0x02	; 2
    1090:	88 e0       	ldi	r24, 0x08	; 8
    1092:	01 90       	ld	r0, Z+
    1094:	0d 92       	st	X+, r0
    1096:	81 50       	subi	r24, 0x01	; 1
    1098:	e1 f7       	brne	.-8      	; 0x1092 <main+0x218>
							bSelectionDateChanged=0;
    109a:	10 92 6a 02 	sts	0x026A, r1
							sprintf(str, "%02d/%02d/%02d", tTimeEditing.bDay, tTimeEditing.bMonth, tTimeEditing.bYear);
    109e:	20 91 73 02 	lds	r18, 0x0273
    10a2:	90 91 74 02 	lds	r25, 0x0274
    10a6:	80 91 75 02 	lds	r24, 0x0275
    10aa:	4d b7       	in	r20, 0x3d	; 61
    10ac:	5e b7       	in	r21, 0x3e	; 62
    10ae:	4a 50       	subi	r20, 0x0A	; 10
    10b0:	50 40       	sbci	r21, 0x00	; 0
    10b2:	0f b6       	in	r0, 0x3f	; 63
    10b4:	f8 94       	cli
    10b6:	5e bf       	out	0x3e, r21	; 62
    10b8:	0f be       	out	0x3f, r0	; 63
    10ba:	4d bf       	out	0x3d, r20	; 61
    10bc:	ed b7       	in	r30, 0x3d	; 61
    10be:	fe b7       	in	r31, 0x3e	; 62
    10c0:	31 96       	adiw	r30, 0x01	; 1
    10c2:	ad b7       	in	r26, 0x3d	; 61
    10c4:	be b7       	in	r27, 0x3e	; 62
    10c6:	12 96       	adiw	r26, 0x02	; 2
    10c8:	dc 93       	st	X, r29
    10ca:	ce 93       	st	-X, r28
    10cc:	11 97       	sbiw	r26, 0x01	; 1
    10ce:	b3 82       	std	Z+3, r11	; 0x03
    10d0:	a2 82       	std	Z+2, r10	; 0x02
    10d2:	24 83       	std	Z+4, r18	; 0x04
    10d4:	15 82       	std	Z+5, r1	; 0x05
    10d6:	96 83       	std	Z+6, r25	; 0x06
    10d8:	17 82       	std	Z+7, r1	; 0x07
    10da:	80 87       	std	Z+8, r24	; 0x08
    10dc:	11 86       	std	Z+9, r1	; 0x09
    10de:	0e 94 64 12 	call	0x24c8	; 0x24c8 <sprintf>
							LCDWriteStringXY(0,0, "Editing date:");
    10e2:	2d b7       	in	r18, 0x3d	; 61
    10e4:	3e b7       	in	r19, 0x3e	; 62
    10e6:	26 5f       	subi	r18, 0xF6	; 246
    10e8:	3f 4f       	sbci	r19, 0xFF	; 255
    10ea:	0f b6       	in	r0, 0x3f	; 63
    10ec:	f8 94       	cli
    10ee:	3e bf       	out	0x3e, r19	; 62
    10f0:	0f be       	out	0x3f, r0	; 63
    10f2:	2d bf       	out	0x3d, r18	; 61
    10f4:	80 e0       	ldi	r24, 0x00	; 0
    10f6:	60 e0       	ldi	r22, 0x00	; 0
    10f8:	4e e4       	ldi	r20, 0x4E	; 78
    10fa:	51 e0       	ldi	r21, 0x01	; 1
    10fc:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <LCDWriteStringXY>
							LCDWriteStringXY(3,1, str);
    1100:	83 e0       	ldi	r24, 0x03	; 3
    1102:	61 e0       	ldi	r22, 0x01	; 1
    1104:	ae 01       	movw	r20, r28
    1106:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <LCDWriteStringXY>
							LCDCmd(0x0f);	// set blinking cursor
    110a:	8f e0       	ldi	r24, 0x0F	; 15
    110c:	60 e0       	ldi	r22, 0x00	; 0
    110e:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
    1112:	08 e0       	ldi	r16, 0x08	; 8
    1114:	10 e0       	ldi	r17, 0x00	; 0
							LCD_CURSOR_LEFT_N(8);
    1116:	80 e1       	ldi	r24, 0x10	; 16
    1118:	60 e0       	ldi	r22, 0x00	; 0
    111a:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
    111e:	01 50       	subi	r16, 0x01	; 1
    1120:	10 40       	sbci	r17, 0x00	; 0
    1122:	c9 f7       	brne	.-14     	; 0x1116 <__stack+0x17>
    1124:	e0 ce       	rjmp	.-576    	; 0xee6 <main+0x6c>
						}
						break;
					case BTN_A:
						bBtn = NO_BTN;
    1126:	10 92 81 02 	sts	0x0281, r1
						changeEditDate(bSelectionDate, BTN_A);
    112a:	80 91 62 02 	lds	r24, 0x0262
    112e:	62 e0       	ldi	r22, 0x02	; 2
    1130:	0e 94 40 06 	call	0xc80	; 0xc80 <changeEditDate>
						sprintf(str, "%02d/%02d/%02d", tTimeEditing.bDay, tTimeEditing.bMonth, tTimeEditing.bYear);
    1134:	20 91 73 02 	lds	r18, 0x0273
    1138:	90 91 74 02 	lds	r25, 0x0274
    113c:	80 91 75 02 	lds	r24, 0x0275
    1140:	4d b7       	in	r20, 0x3d	; 61
    1142:	5e b7       	in	r21, 0x3e	; 62
    1144:	4a 50       	subi	r20, 0x0A	; 10
    1146:	50 40       	sbci	r21, 0x00	; 0
    1148:	0f b6       	in	r0, 0x3f	; 63
    114a:	f8 94       	cli
    114c:	5e bf       	out	0x3e, r21	; 62
    114e:	0f be       	out	0x3f, r0	; 63
    1150:	4d bf       	out	0x3d, r20	; 61
    1152:	ed b7       	in	r30, 0x3d	; 61
    1154:	fe b7       	in	r31, 0x3e	; 62
    1156:	31 96       	adiw	r30, 0x01	; 1
    1158:	ad b7       	in	r26, 0x3d	; 61
    115a:	be b7       	in	r27, 0x3e	; 62
    115c:	12 96       	adiw	r26, 0x02	; 2
    115e:	dc 93       	st	X, r29
    1160:	ce 93       	st	-X, r28
    1162:	11 97       	sbiw	r26, 0x01	; 1
    1164:	b3 82       	std	Z+3, r11	; 0x03
    1166:	a2 82       	std	Z+2, r10	; 0x02
    1168:	24 83       	std	Z+4, r18	; 0x04
    116a:	15 82       	std	Z+5, r1	; 0x05
    116c:	96 83       	std	Z+6, r25	; 0x06
    116e:	17 82       	std	Z+7, r1	; 0x07
    1170:	80 87       	std	Z+8, r24	; 0x08
    1172:	11 86       	std	Z+9, r1	; 0x09
    1174:	0e 94 64 12 	call	0x24c8	; 0x24c8 <sprintf>
						LCDWriteStringXY(3,1,str);
    1178:	2d b7       	in	r18, 0x3d	; 61
    117a:	3e b7       	in	r19, 0x3e	; 62
    117c:	26 5f       	subi	r18, 0xF6	; 246
    117e:	3f 4f       	sbci	r19, 0xFF	; 255
    1180:	0f b6       	in	r0, 0x3f	; 63
    1182:	f8 94       	cli
    1184:	3e bf       	out	0x3e, r19	; 62
    1186:	0f be       	out	0x3f, r0	; 63
    1188:	2d bf       	out	0x3d, r18	; 61
    118a:	83 e0       	ldi	r24, 0x03	; 3
    118c:	61 e0       	ldi	r22, 0x01	; 1
    118e:	ae 01       	movw	r20, r28
    1190:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <LCDWriteStringXY>
						LCD_CURSOR_LEFT_N(8-bSelectionDate);
    1194:	00 e0       	ldi	r16, 0x00	; 0
    1196:	10 e0       	ldi	r17, 0x00	; 0
    1198:	06 c0       	rjmp	.+12     	; 0x11a6 <__stack+0xa7>
    119a:	80 e1       	ldi	r24, 0x10	; 16
    119c:	60 e0       	ldi	r22, 0x00	; 0
    119e:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
    11a2:	0f 5f       	subi	r16, 0xFF	; 255
    11a4:	1f 4f       	sbci	r17, 0xFF	; 255
    11a6:	80 91 62 02 	lds	r24, 0x0262
    11aa:	a7 01       	movw	r20, r14
    11ac:	48 1b       	sub	r20, r24
    11ae:	51 09       	sbc	r21, r1
    11b0:	04 17       	cp	r16, r20
    11b2:	15 07       	cpc	r17, r21
    11b4:	94 f3       	brlt	.-28     	; 0x119a <__stack+0x9b>
    11b6:	97 ce       	rjmp	.-722    	; 0xee6 <main+0x6c>
						break;
					case BTN_B:
						bBtn = NO_BTN;
    11b8:	10 92 81 02 	sts	0x0281, r1
						changeEditDate(bSelectionDate, BTN_B);
    11bc:	80 91 62 02 	lds	r24, 0x0262
    11c0:	64 e0       	ldi	r22, 0x04	; 4
    11c2:	0e 94 40 06 	call	0xc80	; 0xc80 <changeEditDate>
						sprintf(str, "%02d/%02d/%02d", tTimeEditing.bDay, tTimeEditing.bMonth, tTimeEditing.bYear);
    11c6:	20 91 73 02 	lds	r18, 0x0273
    11ca:	90 91 74 02 	lds	r25, 0x0274
    11ce:	80 91 75 02 	lds	r24, 0x0275
    11d2:	ad b7       	in	r26, 0x3d	; 61
    11d4:	be b7       	in	r27, 0x3e	; 62
    11d6:	1a 97       	sbiw	r26, 0x0a	; 10
    11d8:	0f b6       	in	r0, 0x3f	; 63
    11da:	f8 94       	cli
    11dc:	be bf       	out	0x3e, r27	; 62
    11de:	0f be       	out	0x3f, r0	; 63
    11e0:	ad bf       	out	0x3d, r26	; 61
    11e2:	ed b7       	in	r30, 0x3d	; 61
    11e4:	fe b7       	in	r31, 0x3e	; 62
    11e6:	31 96       	adiw	r30, 0x01	; 1
    11e8:	12 96       	adiw	r26, 0x02	; 2
    11ea:	dc 93       	st	X, r29
    11ec:	ce 93       	st	-X, r28
    11ee:	11 97       	sbiw	r26, 0x01	; 1
    11f0:	b3 82       	std	Z+3, r11	; 0x03
    11f2:	a2 82       	std	Z+2, r10	; 0x02
    11f4:	24 83       	std	Z+4, r18	; 0x04
    11f6:	15 82       	std	Z+5, r1	; 0x05
    11f8:	96 83       	std	Z+6, r25	; 0x06
    11fa:	17 82       	std	Z+7, r1	; 0x07
    11fc:	80 87       	std	Z+8, r24	; 0x08
    11fe:	11 86       	std	Z+9, r1	; 0x09
    1200:	0e 94 64 12 	call	0x24c8	; 0x24c8 <sprintf>
						LCDWriteStringXY(3,1,str);
    1204:	2d b7       	in	r18, 0x3d	; 61
    1206:	3e b7       	in	r19, 0x3e	; 62
    1208:	26 5f       	subi	r18, 0xF6	; 246
    120a:	3f 4f       	sbci	r19, 0xFF	; 255
    120c:	0f b6       	in	r0, 0x3f	; 63
    120e:	f8 94       	cli
    1210:	3e bf       	out	0x3e, r19	; 62
    1212:	0f be       	out	0x3f, r0	; 63
    1214:	2d bf       	out	0x3d, r18	; 61
    1216:	83 e0       	ldi	r24, 0x03	; 3
    1218:	61 e0       	ldi	r22, 0x01	; 1
    121a:	ae 01       	movw	r20, r28
    121c:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <LCDWriteStringXY>
						LCD_CURSOR_LEFT_N(8-bSelectionDate);
    1220:	00 e0       	ldi	r16, 0x00	; 0
    1222:	10 e0       	ldi	r17, 0x00	; 0
    1224:	06 c0       	rjmp	.+12     	; 0x1232 <__stack+0x133>
    1226:	80 e1       	ldi	r24, 0x10	; 16
    1228:	60 e0       	ldi	r22, 0x00	; 0
    122a:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
    122e:	0f 5f       	subi	r16, 0xFF	; 255
    1230:	1f 4f       	sbci	r17, 0xFF	; 255
    1232:	80 91 62 02 	lds	r24, 0x0262
    1236:	a7 01       	movw	r20, r14
    1238:	48 1b       	sub	r20, r24
    123a:	51 09       	sbc	r21, r1
    123c:	04 17       	cp	r16, r20
    123e:	15 07       	cpc	r17, r21
    1240:	94 f3       	brlt	.-28     	; 0x1226 <__stack+0x127>
    1242:	51 ce       	rjmp	.-862    	; 0xee6 <main+0x6c>
						break;
					case BTN_C:
						if(bSelectionDate<7){ LCDCmd(0x14); bSelectionDate++; }
    1244:	80 91 62 02 	lds	r24, 0x0262
    1248:	87 30       	cpi	r24, 0x07	; 7
    124a:	50 f4       	brcc	.+20     	; 0x1260 <__stack+0x161>
    124c:	84 e1       	ldi	r24, 0x14	; 20
    124e:	60 e0       	ldi	r22, 0x00	; 0
    1250:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
    1254:	80 91 62 02 	lds	r24, 0x0262
    1258:	8f 5f       	subi	r24, 0xFF	; 255
    125a:	80 93 62 02 	sts	0x0262, r24
    125e:	0b c0       	rjmp	.+22     	; 0x1276 <__stack+0x177>
						else{ bSelectionDate=0; LCD_CURSOR_LEFT_N(7); }
    1260:	10 92 62 02 	sts	0x0262, r1
    1264:	07 e0       	ldi	r16, 0x07	; 7
    1266:	10 e0       	ldi	r17, 0x00	; 0
    1268:	80 e1       	ldi	r24, 0x10	; 16
    126a:	60 e0       	ldi	r22, 0x00	; 0
    126c:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
    1270:	01 50       	subi	r16, 0x01	; 1
    1272:	10 40       	sbci	r17, 0x00	; 0
    1274:	c9 f7       	brne	.-14     	; 0x1268 <__stack+0x169>
						if(bSelectionDate==2 || bSelectionDate==5){ LCDCmd(0x14); bSelectionDate++; }
    1276:	80 91 62 02 	lds	r24, 0x0262
    127a:	82 30       	cpi	r24, 0x02	; 2
    127c:	29 f0       	breq	.+10     	; 0x1288 <__stack+0x189>
    127e:	80 91 62 02 	lds	r24, 0x0262
    1282:	85 30       	cpi	r24, 0x05	; 5
    1284:	09 f0       	breq	.+2      	; 0x1288 <__stack+0x189>
    1286:	00 c2       	rjmp	.+1024   	; 0x1688 <__stack+0x589>
    1288:	84 e1       	ldi	r24, 0x14	; 20
    128a:	60 e0       	ldi	r22, 0x00	; 0
    128c:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
    1290:	80 91 62 02 	lds	r24, 0x0262
    1294:	8f 5f       	subi	r24, 0xFF	; 255
    1296:	80 93 62 02 	sts	0x0262, r24
    129a:	f6 c1       	rjmp	.+1004   	; 0x1688 <__stack+0x589>
						bBtn = NO_BTN;
						break;
					case BTN_C_LONG:
						bState=STATE_EDIT_DATE_CONFIRM;
    129c:	83 e0       	ldi	r24, 0x03	; 3
    129e:	80 93 4c 02 	sts	0x024C, r24
    12a2:	18 c2       	rjmp	.+1072   	; 0x16d4 <__stack+0x5d5>
						break;
				}
				break;
				
				case STATE_EDIT_DATE_CONFIRM:
					switch(bBtn){
    12a4:	80 91 81 02 	lds	r24, 0x0281
    12a8:	86 30       	cpi	r24, 0x06	; 6
    12aa:	09 f4       	brne	.+2      	; 0x12ae <__stack+0x1af>
    12ac:	44 c0       	rjmp	.+136    	; 0x1336 <__stack+0x237>
    12ae:	87 30       	cpi	r24, 0x07	; 7
    12b0:	09 f4       	brne	.+2      	; 0x12b4 <__stack+0x1b5>
    12b2:	4c c0       	rjmp	.+152    	; 0x134c <__stack+0x24d>
    12b4:	88 23       	and	r24, r24
    12b6:	09 f0       	breq	.+2      	; 0x12ba <__stack+0x1bb>
    12b8:	16 ce       	rjmp	.-980    	; 0xee6 <main+0x6c>
						case NO_BTN:
							if(bFirst){ 
    12ba:	80 91 96 01 	lds	r24, 0x0196
    12be:	88 23       	and	r24, r24
    12c0:	99 f0       	breq	.+38     	; 0x12e8 <__stack+0x1e9>
								LCDWriteStringXY(0,0, "Confermi? Si/No");
    12c2:	80 e0       	ldi	r24, 0x00	; 0
    12c4:	60 e0       	ldi	r22, 0x00	; 0
    12c6:	4c e5       	ldi	r20, 0x5C	; 92
    12c8:	51 e0       	ldi	r21, 0x01	; 1
    12ca:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <LCDWriteStringXY>
    12ce:	05 e0       	ldi	r16, 0x05	; 5
    12d0:	10 e0       	ldi	r17, 0x00	; 0
								LCD_CURSOR_LEFT_N(5);
    12d2:	80 e1       	ldi	r24, 0x10	; 16
    12d4:	60 e0       	ldi	r22, 0x00	; 0
    12d6:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
    12da:	01 50       	subi	r16, 0x01	; 1
    12dc:	10 40       	sbci	r17, 0x00	; 0
    12de:	c9 f7       	brne	.-14     	; 0x12d2 <__stack+0x1d3>
								bFirst=0;
    12e0:	10 92 96 01 	sts	0x0196, r1
								bSelectionDate=0;
    12e4:	10 92 62 02 	sts	0x0262, r1
							}
							if(bSelectionDateChanged){
    12e8:	80 91 6a 02 	lds	r24, 0x026A
    12ec:	88 23       	and	r24, r24
    12ee:	09 f4       	brne	.+2      	; 0x12f2 <__stack+0x1f3>
    12f0:	fa cd       	rjmp	.-1036   	; 0xee6 <main+0x6c>
								if(bSelectionDate==0){ LCD_SET_CURSOR_POSITION(10); }
    12f2:	80 91 62 02 	lds	r24, 0x0262
    12f6:	88 23       	and	r24, r24
    12f8:	71 f4       	brne	.+28     	; 0x1316 <__stack+0x217>
    12fa:	82 e0       	ldi	r24, 0x02	; 2
    12fc:	60 e0       	ldi	r22, 0x00	; 0
    12fe:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
    1302:	0a e0       	ldi	r16, 0x0A	; 10
    1304:	10 e0       	ldi	r17, 0x00	; 0
    1306:	84 e1       	ldi	r24, 0x14	; 20
    1308:	60 e0       	ldi	r22, 0x00	; 0
    130a:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
    130e:	01 50       	subi	r16, 0x01	; 1
    1310:	10 40       	sbci	r17, 0x00	; 0
    1312:	c9 f7       	brne	.-14     	; 0x1306 <__stack+0x207>
    1314:	0d c0       	rjmp	.+26     	; 0x1330 <__stack+0x231>
								else{ LCD_SET_CURSOR_POSITION(13); }
    1316:	82 e0       	ldi	r24, 0x02	; 2
    1318:	60 e0       	ldi	r22, 0x00	; 0
    131a:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
    131e:	0d e0       	ldi	r16, 0x0D	; 13
    1320:	10 e0       	ldi	r17, 0x00	; 0
    1322:	84 e1       	ldi	r24, 0x14	; 20
    1324:	60 e0       	ldi	r22, 0x00	; 0
    1326:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
    132a:	01 50       	subi	r16, 0x01	; 1
    132c:	10 40       	sbci	r17, 0x00	; 0
    132e:	c9 f7       	brne	.-14     	; 0x1322 <__stack+0x223>
								bSelectionDateChanged=0;
    1330:	10 92 6a 02 	sts	0x026A, r1
    1334:	d8 cd       	rjmp	.-1104   	; 0xee6 <main+0x6c>
							}
							break;
						
						case BTN_C:
							bSelectionDate = (bSelectionDate == 0)?1:0;
    1336:	90 91 62 02 	lds	r25, 0x0262
    133a:	81 e0       	ldi	r24, 0x01	; 1
    133c:	91 11       	cpse	r25, r1
    133e:	80 e0       	ldi	r24, 0x00	; 0
    1340:	80 93 62 02 	sts	0x0262, r24
							bSelectionDateChanged=1;
    1344:	81 e0       	ldi	r24, 0x01	; 1
    1346:	80 93 6a 02 	sts	0x026A, r24
    134a:	9e c1       	rjmp	.+828    	; 0x1688 <__stack+0x589>
							bBtn=NO_BTN;
							break;
						
						case BTN_C_LONG:
							if(bSelectionDate){
    134c:	80 91 62 02 	lds	r24, 0x0262
    1350:	88 23       	and	r24, r24
    1352:	49 f0       	breq	.+18     	; 0x1366 <__stack+0x267>
								bState = STATE_EDIT_DATE;
    1354:	82 e0       	ldi	r24, 0x02	; 2
    1356:	80 93 4c 02 	sts	0x024C, r24
								bSelectionDate=0;
    135a:	10 92 62 02 	sts	0x0262, r1
								bSelectionDateChanged=1;
    135e:	81 e0       	ldi	r24, 0x01	; 1
    1360:	80 93 6a 02 	sts	0x026A, r24
    1364:	b7 c1       	rjmp	.+878    	; 0x16d4 <__stack+0x5d5>
							}else{
								tTime.bDay = tTimeEditing.bDay;
    1366:	80 91 73 02 	lds	r24, 0x0273
    136a:	80 93 5b 02 	sts	0x025B, r24
								tTime.bMonth = tTimeEditing.bMonth;
    136e:	80 91 74 02 	lds	r24, 0x0274
    1372:	80 93 5c 02 	sts	0x025C, r24
								tTime.bYear = tTimeEditing.bYear;
    1376:	80 91 75 02 	lds	r24, 0x0275
    137a:	80 93 5d 02 	sts	0x025D, r24
    137e:	9f c1       	rjmp	.+830    	; 0x16be <__stack+0x5bf>
						default: break;
					}
				break;
				
			case STATE_EDIT_TIME:
					switch(bBtn){
    1380:	80 91 81 02 	lds	r24, 0x0281
    1384:	84 30       	cpi	r24, 0x04	; 4
    1386:	09 f4       	brne	.+2      	; 0x138a <__stack+0x28b>
    1388:	b5 c0       	rjmp	.+362    	; 0x14f4 <__stack+0x3f5>
    138a:	85 30       	cpi	r24, 0x05	; 5
    138c:	30 f4       	brcc	.+12     	; 0x139a <__stack+0x29b>
    138e:	88 23       	and	r24, r24
    1390:	59 f0       	breq	.+22     	; 0x13a8 <__stack+0x2a9>
    1392:	82 30       	cpi	r24, 0x02	; 2
    1394:	09 f0       	breq	.+2      	; 0x1398 <__stack+0x299>
    1396:	a7 cd       	rjmp	.-1202   	; 0xee6 <main+0x6c>
    1398:	62 c0       	rjmp	.+196    	; 0x145e <__stack+0x35f>
    139a:	86 30       	cpi	r24, 0x06	; 6
    139c:	09 f4       	brne	.+2      	; 0x13a0 <__stack+0x2a1>
    139e:	f2 c0       	rjmp	.+484    	; 0x1584 <__stack+0x485>
    13a0:	87 30       	cpi	r24, 0x07	; 7
    13a2:	09 f0       	breq	.+2      	; 0x13a6 <__stack+0x2a7>
    13a4:	a0 cd       	rjmp	.-1216   	; 0xee6 <main+0x6c>
    13a6:	1a c1       	rjmp	.+564    	; 0x15dc <__stack+0x4dd>
						case NO_BTN:
							if(bFirst){
    13a8:	80 91 96 01 	lds	r24, 0x0196
    13ac:	88 23       	and	r24, r24
    13ae:	09 f4       	brne	.+2      	; 0x13b2 <__stack+0x2b3>
    13b0:	9a cd       	rjmp	.-1228   	; 0xee6 <main+0x6c>
								bFirst=0;
    13b2:	10 92 96 01 	sts	0x0196, r1
								LCDClear();
    13b6:	81 e0       	ldi	r24, 0x01	; 1
    13b8:	60 e0       	ldi	r22, 0x00	; 0
    13ba:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
								tTimeEditing = (bSelectionTimeChanged==1) ? tTimeEditing : tTime;
    13be:	80 91 51 02 	lds	r24, 0x0251
    13c2:	81 30       	cpi	r24, 0x01	; 1
    13c4:	49 f0       	breq	.+18     	; 0x13d8 <__stack+0x2d9>
    13c6:	ae e6       	ldi	r26, 0x6E	; 110
    13c8:	b2 e0       	ldi	r27, 0x02	; 2
    13ca:	e6 e5       	ldi	r30, 0x56	; 86
    13cc:	f2 e0       	ldi	r31, 0x02	; 2
    13ce:	88 e0       	ldi	r24, 0x08	; 8
    13d0:	01 90       	ld	r0, Z+
    13d2:	0d 92       	st	X+, r0
    13d4:	81 50       	subi	r24, 0x01	; 1
    13d6:	e1 f7       	brne	.-8      	; 0x13d0 <__stack+0x2d1>
								bSelectionTimeChanged=0;
    13d8:	10 92 51 02 	sts	0x0251, r1
								sprintf(str, "%02d:%02d:%02d", tTimeEditing.bHour, tTimeEditing.bMin, tTimeEditing.bSec);
    13dc:	20 91 72 02 	lds	r18, 0x0272
    13e0:	90 91 71 02 	lds	r25, 0x0271
    13e4:	80 91 70 02 	lds	r24, 0x0270
    13e8:	ad b7       	in	r26, 0x3d	; 61
    13ea:	be b7       	in	r27, 0x3e	; 62
    13ec:	1a 97       	sbiw	r26, 0x0a	; 10
    13ee:	0f b6       	in	r0, 0x3f	; 63
    13f0:	f8 94       	cli
    13f2:	be bf       	out	0x3e, r27	; 62
    13f4:	0f be       	out	0x3f, r0	; 63
    13f6:	ad bf       	out	0x3d, r26	; 61
    13f8:	ed b7       	in	r30, 0x3d	; 61
    13fa:	fe b7       	in	r31, 0x3e	; 62
    13fc:	31 96       	adiw	r30, 0x01	; 1
    13fe:	12 96       	adiw	r26, 0x02	; 2
    1400:	dc 93       	st	X, r29
    1402:	ce 93       	st	-X, r28
    1404:	11 97       	sbiw	r26, 0x01	; 1
    1406:	d3 82       	std	Z+3, r13	; 0x03
    1408:	c2 82       	std	Z+2, r12	; 0x02
    140a:	24 83       	std	Z+4, r18	; 0x04
    140c:	15 82       	std	Z+5, r1	; 0x05
    140e:	96 83       	std	Z+6, r25	; 0x06
    1410:	17 82       	std	Z+7, r1	; 0x07
    1412:	80 87       	std	Z+8, r24	; 0x08
    1414:	11 86       	std	Z+9, r1	; 0x09
    1416:	0e 94 64 12 	call	0x24c8	; 0x24c8 <sprintf>
								LCDWriteStringXY(0,0, "Editing time:");
    141a:	2d b7       	in	r18, 0x3d	; 61
    141c:	3e b7       	in	r19, 0x3e	; 62
    141e:	26 5f       	subi	r18, 0xF6	; 246
    1420:	3f 4f       	sbci	r19, 0xFF	; 255
    1422:	0f b6       	in	r0, 0x3f	; 63
    1424:	f8 94       	cli
    1426:	3e bf       	out	0x3e, r19	; 62
    1428:	0f be       	out	0x3f, r0	; 63
    142a:	2d bf       	out	0x3d, r18	; 61
    142c:	80 e0       	ldi	r24, 0x00	; 0
    142e:	60 e0       	ldi	r22, 0x00	; 0
    1430:	4b e7       	ldi	r20, 0x7B	; 123
    1432:	51 e0       	ldi	r21, 0x01	; 1
    1434:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <LCDWriteStringXY>
								LCDWriteStringXY(3,1, str);
    1438:	83 e0       	ldi	r24, 0x03	; 3
    143a:	61 e0       	ldi	r22, 0x01	; 1
    143c:	ae 01       	movw	r20, r28
    143e:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <LCDWriteStringXY>
								LCDCmd(0x0f);	// set blinking cursor
    1442:	8f e0       	ldi	r24, 0x0F	; 15
    1444:	60 e0       	ldi	r22, 0x00	; 0
    1446:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
    144a:	08 e0       	ldi	r16, 0x08	; 8
    144c:	10 e0       	ldi	r17, 0x00	; 0
								LCD_CURSOR_LEFT_N(8);
    144e:	80 e1       	ldi	r24, 0x10	; 16
    1450:	60 e0       	ldi	r22, 0x00	; 0
    1452:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
    1456:	01 50       	subi	r16, 0x01	; 1
    1458:	10 40       	sbci	r17, 0x00	; 0
    145a:	c9 f7       	brne	.-14     	; 0x144e <__stack+0x34f>
    145c:	44 cd       	rjmp	.-1400   	; 0xee6 <main+0x6c>
							}
							break;
						case BTN_A:
							bBtn = NO_BTN;
    145e:	10 92 81 02 	sts	0x0281, r1
							changeEditTime(bSelectionTime, BTN_A);
    1462:	80 91 52 02 	lds	r24, 0x0252
    1466:	90 e0       	ldi	r25, 0x00	; 0
    1468:	62 e0       	ldi	r22, 0x02	; 2
    146a:	70 e0       	ldi	r23, 0x00	; 0
    146c:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <changeEditTime>
							sprintf(str, "%02d:%02d:%02d", tTimeEditing.bHour, tTimeEditing.bMin, tTimeEditing.bSec);
    1470:	20 91 72 02 	lds	r18, 0x0272
    1474:	90 91 71 02 	lds	r25, 0x0271
    1478:	80 91 70 02 	lds	r24, 0x0270
    147c:	4d b7       	in	r20, 0x3d	; 61
    147e:	5e b7       	in	r21, 0x3e	; 62
    1480:	4a 50       	subi	r20, 0x0A	; 10
    1482:	50 40       	sbci	r21, 0x00	; 0
    1484:	0f b6       	in	r0, 0x3f	; 63
    1486:	f8 94       	cli
    1488:	5e bf       	out	0x3e, r21	; 62
    148a:	0f be       	out	0x3f, r0	; 63
    148c:	4d bf       	out	0x3d, r20	; 61
    148e:	ed b7       	in	r30, 0x3d	; 61
    1490:	fe b7       	in	r31, 0x3e	; 62
    1492:	31 96       	adiw	r30, 0x01	; 1
    1494:	ad b7       	in	r26, 0x3d	; 61
    1496:	be b7       	in	r27, 0x3e	; 62
    1498:	12 96       	adiw	r26, 0x02	; 2
    149a:	dc 93       	st	X, r29
    149c:	ce 93       	st	-X, r28
    149e:	11 97       	sbiw	r26, 0x01	; 1
    14a0:	d3 82       	std	Z+3, r13	; 0x03
    14a2:	c2 82       	std	Z+2, r12	; 0x02
    14a4:	24 83       	std	Z+4, r18	; 0x04
    14a6:	15 82       	std	Z+5, r1	; 0x05
    14a8:	96 83       	std	Z+6, r25	; 0x06
    14aa:	17 82       	std	Z+7, r1	; 0x07
    14ac:	80 87       	std	Z+8, r24	; 0x08
    14ae:	11 86       	std	Z+9, r1	; 0x09
    14b0:	0e 94 64 12 	call	0x24c8	; 0x24c8 <sprintf>
							LCDWriteStringXY(3,1,str);
    14b4:	2d b7       	in	r18, 0x3d	; 61
    14b6:	3e b7       	in	r19, 0x3e	; 62
    14b8:	26 5f       	subi	r18, 0xF6	; 246
    14ba:	3f 4f       	sbci	r19, 0xFF	; 255
    14bc:	0f b6       	in	r0, 0x3f	; 63
    14be:	f8 94       	cli
    14c0:	3e bf       	out	0x3e, r19	; 62
    14c2:	0f be       	out	0x3f, r0	; 63
    14c4:	2d bf       	out	0x3d, r18	; 61
    14c6:	83 e0       	ldi	r24, 0x03	; 3
    14c8:	61 e0       	ldi	r22, 0x01	; 1
    14ca:	ae 01       	movw	r20, r28
    14cc:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <LCDWriteStringXY>
							LCD_CURSOR_LEFT_N(8-bSelectionTime);
    14d0:	00 e0       	ldi	r16, 0x00	; 0
    14d2:	10 e0       	ldi	r17, 0x00	; 0
    14d4:	06 c0       	rjmp	.+12     	; 0x14e2 <__stack+0x3e3>
    14d6:	80 e1       	ldi	r24, 0x10	; 16
    14d8:	60 e0       	ldi	r22, 0x00	; 0
    14da:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
    14de:	0f 5f       	subi	r16, 0xFF	; 255
    14e0:	1f 4f       	sbci	r17, 0xFF	; 255
    14e2:	80 91 52 02 	lds	r24, 0x0252
    14e6:	a7 01       	movw	r20, r14
    14e8:	48 1b       	sub	r20, r24
    14ea:	51 09       	sbc	r21, r1
    14ec:	04 17       	cp	r16, r20
    14ee:	15 07       	cpc	r17, r21
    14f0:	94 f3       	brlt	.-28     	; 0x14d6 <__stack+0x3d7>
    14f2:	f9 cc       	rjmp	.-1550   	; 0xee6 <main+0x6c>
							break;
						case BTN_B:
							bBtn = NO_BTN;
    14f4:	10 92 81 02 	sts	0x0281, r1
							changeEditTime(bSelectionTime, BTN_B);
    14f8:	80 91 52 02 	lds	r24, 0x0252
    14fc:	90 e0       	ldi	r25, 0x00	; 0
    14fe:	64 e0       	ldi	r22, 0x04	; 4
    1500:	70 e0       	ldi	r23, 0x00	; 0
    1502:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <changeEditTime>
							sprintf(str, "%02d:%02d:%02d", tTimeEditing.bHour, tTimeEditing.bMin, tTimeEditing.bSec);
    1506:	20 91 72 02 	lds	r18, 0x0272
    150a:	90 91 71 02 	lds	r25, 0x0271
    150e:	80 91 70 02 	lds	r24, 0x0270
    1512:	ad b7       	in	r26, 0x3d	; 61
    1514:	be b7       	in	r27, 0x3e	; 62
    1516:	1a 97       	sbiw	r26, 0x0a	; 10
    1518:	0f b6       	in	r0, 0x3f	; 63
    151a:	f8 94       	cli
    151c:	be bf       	out	0x3e, r27	; 62
    151e:	0f be       	out	0x3f, r0	; 63
    1520:	ad bf       	out	0x3d, r26	; 61
    1522:	ed b7       	in	r30, 0x3d	; 61
    1524:	fe b7       	in	r31, 0x3e	; 62
    1526:	31 96       	adiw	r30, 0x01	; 1
    1528:	12 96       	adiw	r26, 0x02	; 2
    152a:	dc 93       	st	X, r29
    152c:	ce 93       	st	-X, r28
    152e:	11 97       	sbiw	r26, 0x01	; 1
    1530:	d3 82       	std	Z+3, r13	; 0x03
    1532:	c2 82       	std	Z+2, r12	; 0x02
    1534:	24 83       	std	Z+4, r18	; 0x04
    1536:	15 82       	std	Z+5, r1	; 0x05
    1538:	96 83       	std	Z+6, r25	; 0x06
    153a:	17 82       	std	Z+7, r1	; 0x07
    153c:	80 87       	std	Z+8, r24	; 0x08
    153e:	11 86       	std	Z+9, r1	; 0x09
    1540:	0e 94 64 12 	call	0x24c8	; 0x24c8 <sprintf>
							LCDWriteStringXY(3,1,str);
    1544:	2d b7       	in	r18, 0x3d	; 61
    1546:	3e b7       	in	r19, 0x3e	; 62
    1548:	26 5f       	subi	r18, 0xF6	; 246
    154a:	3f 4f       	sbci	r19, 0xFF	; 255
    154c:	0f b6       	in	r0, 0x3f	; 63
    154e:	f8 94       	cli
    1550:	3e bf       	out	0x3e, r19	; 62
    1552:	0f be       	out	0x3f, r0	; 63
    1554:	2d bf       	out	0x3d, r18	; 61
    1556:	83 e0       	ldi	r24, 0x03	; 3
    1558:	61 e0       	ldi	r22, 0x01	; 1
    155a:	ae 01       	movw	r20, r28
    155c:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <LCDWriteStringXY>
							LCD_CURSOR_LEFT_N(8-bSelectionTime);
    1560:	00 e0       	ldi	r16, 0x00	; 0
    1562:	10 e0       	ldi	r17, 0x00	; 0
    1564:	06 c0       	rjmp	.+12     	; 0x1572 <__stack+0x473>
    1566:	80 e1       	ldi	r24, 0x10	; 16
    1568:	60 e0       	ldi	r22, 0x00	; 0
    156a:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
    156e:	0f 5f       	subi	r16, 0xFF	; 255
    1570:	1f 4f       	sbci	r17, 0xFF	; 255
    1572:	80 91 52 02 	lds	r24, 0x0252
    1576:	a7 01       	movw	r20, r14
    1578:	48 1b       	sub	r20, r24
    157a:	51 09       	sbc	r21, r1
    157c:	04 17       	cp	r16, r20
    157e:	15 07       	cpc	r17, r21
    1580:	94 f3       	brlt	.-28     	; 0x1566 <__stack+0x467>
    1582:	b1 cc       	rjmp	.-1694   	; 0xee6 <main+0x6c>
							break;
						case BTN_C:
							if(bSelectionTime<7){ LCDCmd(0x14); bSelectionTime++; }
    1584:	80 91 52 02 	lds	r24, 0x0252
    1588:	87 30       	cpi	r24, 0x07	; 7
    158a:	50 f4       	brcc	.+20     	; 0x15a0 <__stack+0x4a1>
    158c:	84 e1       	ldi	r24, 0x14	; 20
    158e:	60 e0       	ldi	r22, 0x00	; 0
    1590:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
    1594:	80 91 52 02 	lds	r24, 0x0252
    1598:	8f 5f       	subi	r24, 0xFF	; 255
    159a:	80 93 52 02 	sts	0x0252, r24
    159e:	0b c0       	rjmp	.+22     	; 0x15b6 <__stack+0x4b7>
							else{ bSelectionTime=0; LCD_CURSOR_LEFT_N(7); }
    15a0:	10 92 52 02 	sts	0x0252, r1
    15a4:	07 e0       	ldi	r16, 0x07	; 7
    15a6:	10 e0       	ldi	r17, 0x00	; 0
    15a8:	80 e1       	ldi	r24, 0x10	; 16
    15aa:	60 e0       	ldi	r22, 0x00	; 0
    15ac:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
    15b0:	01 50       	subi	r16, 0x01	; 1
    15b2:	10 40       	sbci	r17, 0x00	; 0
    15b4:	c9 f7       	brne	.-14     	; 0x15a8 <__stack+0x4a9>
							if(bSelectionTime==2 || bSelectionTime==5){ LCDCmd(0x14); bSelectionTime++; }
    15b6:	80 91 52 02 	lds	r24, 0x0252
    15ba:	82 30       	cpi	r24, 0x02	; 2
    15bc:	29 f0       	breq	.+10     	; 0x15c8 <__stack+0x4c9>
    15be:	80 91 52 02 	lds	r24, 0x0252
    15c2:	85 30       	cpi	r24, 0x05	; 5
    15c4:	09 f0       	breq	.+2      	; 0x15c8 <__stack+0x4c9>
    15c6:	60 c0       	rjmp	.+192    	; 0x1688 <__stack+0x589>
    15c8:	84 e1       	ldi	r24, 0x14	; 20
    15ca:	60 e0       	ldi	r22, 0x00	; 0
    15cc:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
    15d0:	80 91 52 02 	lds	r24, 0x0252
    15d4:	8f 5f       	subi	r24, 0xFF	; 255
    15d6:	80 93 52 02 	sts	0x0252, r24
    15da:	56 c0       	rjmp	.+172    	; 0x1688 <__stack+0x589>
							bBtn = NO_BTN;
							break;
						case BTN_C_LONG:
							bState=STATE_EDIT_TIME_CONFIRM;
    15dc:	70 92 4c 02 	sts	0x024C, r7
    15e0:	79 c0       	rjmp	.+242    	; 0x16d4 <__stack+0x5d5>
							break;
					}
				break;
				
			case STATE_EDIT_TIME_CONFIRM:
					switch(bBtn){
    15e2:	80 91 81 02 	lds	r24, 0x0281
    15e6:	86 30       	cpi	r24, 0x06	; 6
    15e8:	09 f4       	brne	.+2      	; 0x15ec <__stack+0x4ed>
    15ea:	44 c0       	rjmp	.+136    	; 0x1674 <__stack+0x575>
    15ec:	87 30       	cpi	r24, 0x07	; 7
    15ee:	09 f4       	brne	.+2      	; 0x15f2 <__stack+0x4f3>
    15f0:	4e c0       	rjmp	.+156    	; 0x168e <__stack+0x58f>
    15f2:	88 23       	and	r24, r24
    15f4:	09 f0       	breq	.+2      	; 0x15f8 <__stack+0x4f9>
    15f6:	77 cc       	rjmp	.-1810   	; 0xee6 <main+0x6c>
						case NO_BTN:
							if(bFirst){ 
    15f8:	80 91 96 01 	lds	r24, 0x0196
    15fc:	88 23       	and	r24, r24
    15fe:	99 f0       	breq	.+38     	; 0x1626 <__stack+0x527>
								LCDWriteStringXY(0,0, "Confermi? Si/No");
    1600:	80 e0       	ldi	r24, 0x00	; 0
    1602:	60 e0       	ldi	r22, 0x00	; 0
    1604:	4c e5       	ldi	r20, 0x5C	; 92
    1606:	51 e0       	ldi	r21, 0x01	; 1
    1608:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <LCDWriteStringXY>
    160c:	05 e0       	ldi	r16, 0x05	; 5
    160e:	10 e0       	ldi	r17, 0x00	; 0
								LCD_CURSOR_LEFT_N(5);
    1610:	80 e1       	ldi	r24, 0x10	; 16
    1612:	60 e0       	ldi	r22, 0x00	; 0
    1614:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
    1618:	01 50       	subi	r16, 0x01	; 1
    161a:	10 40       	sbci	r17, 0x00	; 0
    161c:	c9 f7       	brne	.-14     	; 0x1610 <__stack+0x511>
								bFirst=0;
    161e:	10 92 96 01 	sts	0x0196, r1
								bSelectionTime=0;
    1622:	10 92 52 02 	sts	0x0252, r1
							}
							if(bSelectionTimeChanged){
    1626:	80 91 51 02 	lds	r24, 0x0251
    162a:	88 23       	and	r24, r24
    162c:	09 f4       	brne	.+2      	; 0x1630 <__stack+0x531>
    162e:	5b cc       	rjmp	.-1866   	; 0xee6 <main+0x6c>
								if(bSelectionTime==0){ LCD_SET_CURSOR_POSITION(10); }
    1630:	80 91 52 02 	lds	r24, 0x0252
    1634:	88 23       	and	r24, r24
    1636:	71 f4       	brne	.+28     	; 0x1654 <__stack+0x555>
    1638:	82 e0       	ldi	r24, 0x02	; 2
    163a:	60 e0       	ldi	r22, 0x00	; 0
    163c:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
    1640:	0a e0       	ldi	r16, 0x0A	; 10
    1642:	10 e0       	ldi	r17, 0x00	; 0
    1644:	84 e1       	ldi	r24, 0x14	; 20
    1646:	60 e0       	ldi	r22, 0x00	; 0
    1648:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
    164c:	01 50       	subi	r16, 0x01	; 1
    164e:	10 40       	sbci	r17, 0x00	; 0
    1650:	c9 f7       	brne	.-14     	; 0x1644 <__stack+0x545>
    1652:	0d c0       	rjmp	.+26     	; 0x166e <__stack+0x56f>
								else{ LCD_SET_CURSOR_POSITION(13); }
    1654:	82 e0       	ldi	r24, 0x02	; 2
    1656:	60 e0       	ldi	r22, 0x00	; 0
    1658:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
    165c:	0d e0       	ldi	r16, 0x0D	; 13
    165e:	10 e0       	ldi	r17, 0x00	; 0
    1660:	84 e1       	ldi	r24, 0x14	; 20
    1662:	60 e0       	ldi	r22, 0x00	; 0
    1664:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
    1668:	01 50       	subi	r16, 0x01	; 1
    166a:	10 40       	sbci	r17, 0x00	; 0
    166c:	c9 f7       	brne	.-14     	; 0x1660 <__stack+0x561>
								bSelectionTimeChanged=0;
    166e:	10 92 51 02 	sts	0x0251, r1
    1672:	39 cc       	rjmp	.-1934   	; 0xee6 <main+0x6c>
							}
							break;
						
						case BTN_C:
							bSelectionTime = (bSelectionTime == 0)?1:0;
    1674:	90 91 52 02 	lds	r25, 0x0252
    1678:	81 e0       	ldi	r24, 0x01	; 1
    167a:	91 11       	cpse	r25, r1
    167c:	80 e0       	ldi	r24, 0x00	; 0
    167e:	80 93 52 02 	sts	0x0252, r24
							bSelectionTimeChanged=1;
    1682:	81 e0       	ldi	r24, 0x01	; 1
    1684:	80 93 51 02 	sts	0x0251, r24
							bBtn=NO_BTN;
    1688:	10 92 81 02 	sts	0x0281, r1
							break;
    168c:	2c cc       	rjmp	.-1960   	; 0xee6 <main+0x6c>
						
						case BTN_C_LONG:
							if(bSelectionTime){
    168e:	80 91 52 02 	lds	r24, 0x0252
    1692:	88 23       	and	r24, r24
    1694:	41 f0       	breq	.+16     	; 0x16a6 <__stack+0x5a7>
								bState = STATE_EDIT_TIME;
    1696:	90 92 4c 02 	sts	0x024C, r9
								bSelectionTime=0;
    169a:	10 92 52 02 	sts	0x0252, r1
								bSelectionTimeChanged=1;
    169e:	81 e0       	ldi	r24, 0x01	; 1
    16a0:	80 93 51 02 	sts	0x0251, r24
    16a4:	17 c0       	rjmp	.+46     	; 0x16d4 <__stack+0x5d5>
							}else{
								tTime.bSec = tTimeEditing.bSec;
    16a6:	80 91 70 02 	lds	r24, 0x0270
    16aa:	80 93 58 02 	sts	0x0258, r24
								tTime.bMin = tTimeEditing.bMin;
    16ae:	80 91 71 02 	lds	r24, 0x0271
    16b2:	80 93 59 02 	sts	0x0259, r24
								tTime.bHour = tTimeEditing.bHour;
    16b6:	80 91 72 02 	lds	r24, 0x0272
    16ba:	80 93 5a 02 	sts	0x025A, r24
								bState = STATE_MENU;
    16be:	81 e0       	ldi	r24, 0x01	; 1
    16c0:	80 93 4c 02 	sts	0x024C, r24
								LCDCmd(0x02);	// Home
    16c4:	82 e0       	ldi	r24, 0x02	; 2
    16c6:	60 e0       	ldi	r22, 0x00	; 0
    16c8:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
								LCDCmd(0x0C);	// Make cursor invisible
    16cc:	8c e0       	ldi	r24, 0x0C	; 12
    16ce:	60 e0       	ldi	r22, 0x00	; 0
    16d0:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCDByte>
							}
							bBtn = NO_BTN;
    16d4:	10 92 81 02 	sts	0x0281, r1
							bFirst=1;
    16d8:	81 e0       	ldi	r24, 0x01	; 1
    16da:	80 93 96 01 	sts	0x0196, r24
    16de:	03 cc       	rjmp	.-2042   	; 0xee6 <main+0x6c>

000016e0 <checkDate>:
	}
	//checkDate(tTimeEditing, &aDays[0]);
	
}

void checkDate(TIME_DATE time, int * days){		// se bDay supera il valore massimo del corrispondente bMonth,
    16e0:	0f 93       	push	r16
    16e2:	1f 93       	push	r17
    16e4:	df 93       	push	r29
    16e6:	cf 93       	push	r28
    16e8:	cd b7       	in	r28, 0x3d	; 61
    16ea:	de b7       	in	r29, 0x3e	; 62
    16ec:	28 97       	sbiw	r28, 0x08	; 8
    16ee:	0f b6       	in	r0, 0x3f	; 63
    16f0:	f8 94       	cli
    16f2:	de bf       	out	0x3e, r29	; 62
    16f4:	0f be       	out	0x3f, r0	; 63
    16f6:	cd bf       	out	0x3d, r28	; 61
    16f8:	29 83       	std	Y+1, r18	; 0x01
    16fa:	3a 83       	std	Y+2, r19	; 0x02
    16fc:	4b 83       	std	Y+3, r20	; 0x03
    16fe:	5c 83       	std	Y+4, r21	; 0x04
    1700:	6d 83       	std	Y+5, r22	; 0x05
    1702:	7e 83       	std	Y+6, r23	; 0x06
    1704:	8f 83       	std	Y+7, r24	; 0x07
    1706:	98 87       	std	Y+8, r25	; 0x08
									// esso viene portato al massimo valore consentito.
	if(tTimeEditing.bDay<days[tTimeEditing.bMonth-1]) return;
    1708:	20 91 73 02 	lds	r18, 0x0273
    170c:	e0 91 74 02 	lds	r30, 0x0274
    1710:	30 e0       	ldi	r19, 0x00	; 0
    1712:	f0 e0       	ldi	r31, 0x00	; 0
    1714:	31 97       	sbiw	r30, 0x01	; 1
    1716:	ee 0f       	add	r30, r30
    1718:	ff 1f       	adc	r31, r31
    171a:	e0 0f       	add	r30, r16
    171c:	f1 1f       	adc	r31, r17
    171e:	80 81       	ld	r24, Z
    1720:	91 81       	ldd	r25, Z+1	; 0x01
    1722:	28 17       	cp	r18, r24
    1724:	39 07       	cpc	r19, r25
    1726:	5c f0       	brlt	.+22     	; 0x173e <checkDate+0x5e>
	else tTimeEditing.bDay = days[tTimeEditing.bMonth-1];
    1728:	e0 91 74 02 	lds	r30, 0x0274
    172c:	f0 e0       	ldi	r31, 0x00	; 0
    172e:	31 97       	sbiw	r30, 0x01	; 1
    1730:	ee 0f       	add	r30, r30
    1732:	ff 1f       	adc	r31, r31
    1734:	e0 0f       	add	r30, r16
    1736:	f1 1f       	adc	r31, r17
    1738:	80 81       	ld	r24, Z
    173a:	80 93 73 02 	sts	0x0273, r24
	
}
    173e:	28 96       	adiw	r28, 0x08	; 8
    1740:	0f b6       	in	r0, 0x3f	; 63
    1742:	f8 94       	cli
    1744:	de bf       	out	0x3e, r29	; 62
    1746:	0f be       	out	0x3f, r0	; 63
    1748:	cd bf       	out	0x3d, r28	; 61
    174a:	cf 91       	pop	r28
    174c:	df 91       	pop	r29
    174e:	1f 91       	pop	r17
    1750:	0f 91       	pop	r16
    1752:	08 95       	ret

00001754 <vfprintf>:
    1754:	2f 92       	push	r2
    1756:	3f 92       	push	r3
    1758:	4f 92       	push	r4
    175a:	5f 92       	push	r5
    175c:	6f 92       	push	r6
    175e:	7f 92       	push	r7
    1760:	8f 92       	push	r8
    1762:	9f 92       	push	r9
    1764:	af 92       	push	r10
    1766:	bf 92       	push	r11
    1768:	cf 92       	push	r12
    176a:	df 92       	push	r13
    176c:	ef 92       	push	r14
    176e:	ff 92       	push	r15
    1770:	0f 93       	push	r16
    1772:	1f 93       	push	r17
    1774:	df 93       	push	r29
    1776:	cf 93       	push	r28
    1778:	cd b7       	in	r28, 0x3d	; 61
    177a:	de b7       	in	r29, 0x3e	; 62
    177c:	63 97       	sbiw	r28, 0x13	; 19
    177e:	0f b6       	in	r0, 0x3f	; 63
    1780:	f8 94       	cli
    1782:	de bf       	out	0x3e, r29	; 62
    1784:	0f be       	out	0x3f, r0	; 63
    1786:	cd bf       	out	0x3d, r28	; 61
    1788:	6c 01       	movw	r12, r24
    178a:	7f 87       	std	Y+15, r23	; 0x0f
    178c:	6e 87       	std	Y+14, r22	; 0x0e
    178e:	fc 01       	movw	r30, r24
    1790:	17 82       	std	Z+7, r1	; 0x07
    1792:	16 82       	std	Z+6, r1	; 0x06
    1794:	83 81       	ldd	r24, Z+3	; 0x03
    1796:	81 fd       	sbrc	r24, 1
    1798:	04 c0       	rjmp	.+8      	; 0x17a2 <vfprintf+0x4e>
    179a:	6f c3       	rjmp	.+1758   	; 0x1e7a <vfprintf+0x726>
    179c:	4c 85       	ldd	r20, Y+12	; 0x0c
    179e:	5d 85       	ldd	r21, Y+13	; 0x0d
    17a0:	04 c0       	rjmp	.+8      	; 0x17aa <vfprintf+0x56>
    17a2:	1e 01       	movw	r2, r28
    17a4:	08 94       	sec
    17a6:	21 1c       	adc	r2, r1
    17a8:	31 1c       	adc	r3, r1
    17aa:	f6 01       	movw	r30, r12
    17ac:	93 81       	ldd	r25, Z+3	; 0x03
    17ae:	ee 85       	ldd	r30, Y+14	; 0x0e
    17b0:	ff 85       	ldd	r31, Y+15	; 0x0f
    17b2:	93 fd       	sbrc	r25, 3
    17b4:	85 91       	lpm	r24, Z+
    17b6:	93 ff       	sbrs	r25, 3
    17b8:	81 91       	ld	r24, Z+
    17ba:	ff 87       	std	Y+15, r31	; 0x0f
    17bc:	ee 87       	std	Y+14, r30	; 0x0e
    17be:	88 23       	and	r24, r24
    17c0:	09 f4       	brne	.+2      	; 0x17c4 <vfprintf+0x70>
    17c2:	57 c3       	rjmp	.+1710   	; 0x1e72 <vfprintf+0x71e>
    17c4:	85 32       	cpi	r24, 0x25	; 37
    17c6:	41 f4       	brne	.+16     	; 0x17d8 <vfprintf+0x84>
    17c8:	93 fd       	sbrc	r25, 3
    17ca:	85 91       	lpm	r24, Z+
    17cc:	93 ff       	sbrs	r25, 3
    17ce:	81 91       	ld	r24, Z+
    17d0:	ff 87       	std	Y+15, r31	; 0x0f
    17d2:	ee 87       	std	Y+14, r30	; 0x0e
    17d4:	85 32       	cpi	r24, 0x25	; 37
    17d6:	59 f4       	brne	.+22     	; 0x17ee <vfprintf+0x9a>
    17d8:	90 e0       	ldi	r25, 0x00	; 0
    17da:	b6 01       	movw	r22, r12
    17dc:	4a 8b       	std	Y+18, r20	; 0x12
    17de:	5b 8b       	std	Y+19, r21	; 0x13
    17e0:	0e 94 38 12 	call	0x2470	; 0x2470 <fputc>
    17e4:	4a 89       	ldd	r20, Y+18	; 0x12
    17e6:	5b 89       	ldd	r21, Y+19	; 0x13
    17e8:	5d 87       	std	Y+13, r21	; 0x0d
    17ea:	4c 87       	std	Y+12, r20	; 0x0c
    17ec:	d7 cf       	rjmp	.-82     	; 0x179c <vfprintf+0x48>
    17ee:	10 e0       	ldi	r17, 0x00	; 0
    17f0:	ff 24       	eor	r15, r15
    17f2:	00 e0       	ldi	r16, 0x00	; 0
    17f4:	00 32       	cpi	r16, 0x20	; 32
    17f6:	b0 f4       	brcc	.+44     	; 0x1824 <vfprintf+0xd0>
    17f8:	8b 32       	cpi	r24, 0x2B	; 43
    17fa:	69 f0       	breq	.+26     	; 0x1816 <vfprintf+0xc2>
    17fc:	8c 32       	cpi	r24, 0x2C	; 44
    17fe:	28 f4       	brcc	.+10     	; 0x180a <vfprintf+0xb6>
    1800:	80 32       	cpi	r24, 0x20	; 32
    1802:	51 f0       	breq	.+20     	; 0x1818 <vfprintf+0xc4>
    1804:	83 32       	cpi	r24, 0x23	; 35
    1806:	71 f4       	brne	.+28     	; 0x1824 <vfprintf+0xd0>
    1808:	0b c0       	rjmp	.+22     	; 0x1820 <vfprintf+0xcc>
    180a:	8d 32       	cpi	r24, 0x2D	; 45
    180c:	39 f0       	breq	.+14     	; 0x181c <vfprintf+0xc8>
    180e:	80 33       	cpi	r24, 0x30	; 48
    1810:	49 f4       	brne	.+18     	; 0x1824 <vfprintf+0xd0>
    1812:	01 60       	ori	r16, 0x01	; 1
    1814:	2c c0       	rjmp	.+88     	; 0x186e <vfprintf+0x11a>
    1816:	02 60       	ori	r16, 0x02	; 2
    1818:	04 60       	ori	r16, 0x04	; 4
    181a:	29 c0       	rjmp	.+82     	; 0x186e <vfprintf+0x11a>
    181c:	08 60       	ori	r16, 0x08	; 8
    181e:	27 c0       	rjmp	.+78     	; 0x186e <vfprintf+0x11a>
    1820:	00 61       	ori	r16, 0x10	; 16
    1822:	25 c0       	rjmp	.+74     	; 0x186e <vfprintf+0x11a>
    1824:	07 fd       	sbrc	r16, 7
    1826:	2e c0       	rjmp	.+92     	; 0x1884 <vfprintf+0x130>
    1828:	28 2f       	mov	r18, r24
    182a:	20 53       	subi	r18, 0x30	; 48
    182c:	2a 30       	cpi	r18, 0x0A	; 10
    182e:	98 f4       	brcc	.+38     	; 0x1856 <vfprintf+0x102>
    1830:	06 ff       	sbrs	r16, 6
    1832:	08 c0       	rjmp	.+16     	; 0x1844 <vfprintf+0xf0>
    1834:	81 2f       	mov	r24, r17
    1836:	88 0f       	add	r24, r24
    1838:	18 2f       	mov	r17, r24
    183a:	11 0f       	add	r17, r17
    183c:	11 0f       	add	r17, r17
    183e:	18 0f       	add	r17, r24
    1840:	12 0f       	add	r17, r18
    1842:	15 c0       	rjmp	.+42     	; 0x186e <vfprintf+0x11a>
    1844:	8f 2d       	mov	r24, r15
    1846:	88 0f       	add	r24, r24
    1848:	f8 2e       	mov	r15, r24
    184a:	ff 0c       	add	r15, r15
    184c:	ff 0c       	add	r15, r15
    184e:	f8 0e       	add	r15, r24
    1850:	f2 0e       	add	r15, r18
    1852:	00 62       	ori	r16, 0x20	; 32
    1854:	0c c0       	rjmp	.+24     	; 0x186e <vfprintf+0x11a>
    1856:	8e 32       	cpi	r24, 0x2E	; 46
    1858:	21 f4       	brne	.+8      	; 0x1862 <vfprintf+0x10e>
    185a:	06 fd       	sbrc	r16, 6
    185c:	0a c3       	rjmp	.+1556   	; 0x1e72 <vfprintf+0x71e>
    185e:	00 64       	ori	r16, 0x40	; 64
    1860:	06 c0       	rjmp	.+12     	; 0x186e <vfprintf+0x11a>
    1862:	8c 36       	cpi	r24, 0x6C	; 108
    1864:	11 f4       	brne	.+4      	; 0x186a <vfprintf+0x116>
    1866:	00 68       	ori	r16, 0x80	; 128
    1868:	02 c0       	rjmp	.+4      	; 0x186e <vfprintf+0x11a>
    186a:	88 36       	cpi	r24, 0x68	; 104
    186c:	59 f4       	brne	.+22     	; 0x1884 <vfprintf+0x130>
    186e:	ee 85       	ldd	r30, Y+14	; 0x0e
    1870:	ff 85       	ldd	r31, Y+15	; 0x0f
    1872:	93 fd       	sbrc	r25, 3
    1874:	85 91       	lpm	r24, Z+
    1876:	93 ff       	sbrs	r25, 3
    1878:	81 91       	ld	r24, Z+
    187a:	ff 87       	std	Y+15, r31	; 0x0f
    187c:	ee 87       	std	Y+14, r30	; 0x0e
    187e:	88 23       	and	r24, r24
    1880:	09 f0       	breq	.+2      	; 0x1884 <vfprintf+0x130>
    1882:	b8 cf       	rjmp	.-144    	; 0x17f4 <vfprintf+0xa0>
    1884:	98 2f       	mov	r25, r24
    1886:	95 54       	subi	r25, 0x45	; 69
    1888:	93 30       	cpi	r25, 0x03	; 3
    188a:	18 f4       	brcc	.+6      	; 0x1892 <vfprintf+0x13e>
    188c:	00 61       	ori	r16, 0x10	; 16
    188e:	80 5e       	subi	r24, 0xE0	; 224
    1890:	06 c0       	rjmp	.+12     	; 0x189e <vfprintf+0x14a>
    1892:	98 2f       	mov	r25, r24
    1894:	95 56       	subi	r25, 0x65	; 101
    1896:	93 30       	cpi	r25, 0x03	; 3
    1898:	08 f0       	brcs	.+2      	; 0x189c <vfprintf+0x148>
    189a:	9b c1       	rjmp	.+822    	; 0x1bd2 <vfprintf+0x47e>
    189c:	0f 7e       	andi	r16, 0xEF	; 239
    189e:	06 ff       	sbrs	r16, 6
    18a0:	16 e0       	ldi	r17, 0x06	; 6
    18a2:	6f e3       	ldi	r22, 0x3F	; 63
    18a4:	e6 2e       	mov	r14, r22
    18a6:	e0 22       	and	r14, r16
    18a8:	85 36       	cpi	r24, 0x65	; 101
    18aa:	19 f4       	brne	.+6      	; 0x18b2 <vfprintf+0x15e>
    18ac:	f0 e4       	ldi	r31, 0x40	; 64
    18ae:	ef 2a       	or	r14, r31
    18b0:	07 c0       	rjmp	.+14     	; 0x18c0 <vfprintf+0x16c>
    18b2:	86 36       	cpi	r24, 0x66	; 102
    18b4:	19 f4       	brne	.+6      	; 0x18bc <vfprintf+0x168>
    18b6:	20 e8       	ldi	r18, 0x80	; 128
    18b8:	e2 2a       	or	r14, r18
    18ba:	02 c0       	rjmp	.+4      	; 0x18c0 <vfprintf+0x16c>
    18bc:	11 11       	cpse	r17, r1
    18be:	11 50       	subi	r17, 0x01	; 1
    18c0:	e7 fe       	sbrs	r14, 7
    18c2:	06 c0       	rjmp	.+12     	; 0x18d0 <vfprintf+0x17c>
    18c4:	1c 33       	cpi	r17, 0x3C	; 60
    18c6:	40 f4       	brcc	.+16     	; 0x18d8 <vfprintf+0x184>
    18c8:	91 2e       	mov	r9, r17
    18ca:	93 94       	inc	r9
    18cc:	27 e0       	ldi	r18, 0x07	; 7
    18ce:	0b c0       	rjmp	.+22     	; 0x18e6 <vfprintf+0x192>
    18d0:	18 30       	cpi	r17, 0x08	; 8
    18d2:	30 f4       	brcc	.+12     	; 0x18e0 <vfprintf+0x18c>
    18d4:	21 2f       	mov	r18, r17
    18d6:	06 c0       	rjmp	.+12     	; 0x18e4 <vfprintf+0x190>
    18d8:	27 e0       	ldi	r18, 0x07	; 7
    18da:	3c e3       	ldi	r19, 0x3C	; 60
    18dc:	93 2e       	mov	r9, r19
    18de:	03 c0       	rjmp	.+6      	; 0x18e6 <vfprintf+0x192>
    18e0:	27 e0       	ldi	r18, 0x07	; 7
    18e2:	17 e0       	ldi	r17, 0x07	; 7
    18e4:	99 24       	eor	r9, r9
    18e6:	ca 01       	movw	r24, r20
    18e8:	04 96       	adiw	r24, 0x04	; 4
    18ea:	9d 87       	std	Y+13, r25	; 0x0d
    18ec:	8c 87       	std	Y+12, r24	; 0x0c
    18ee:	fa 01       	movw	r30, r20
    18f0:	60 81       	ld	r22, Z
    18f2:	71 81       	ldd	r23, Z+1	; 0x01
    18f4:	82 81       	ldd	r24, Z+2	; 0x02
    18f6:	93 81       	ldd	r25, Z+3	; 0x03
    18f8:	a1 01       	movw	r20, r2
    18fa:	09 2d       	mov	r16, r9
    18fc:	0e 94 4a 11 	call	0x2294	; 0x2294 <__ftoa_engine>
    1900:	5c 01       	movw	r10, r24
    1902:	69 80       	ldd	r6, Y+1	; 0x01
    1904:	26 2d       	mov	r18, r6
    1906:	30 e0       	ldi	r19, 0x00	; 0
    1908:	39 8b       	std	Y+17, r19	; 0x11
    190a:	28 8b       	std	Y+16, r18	; 0x10
    190c:	60 fe       	sbrs	r6, 0
    190e:	03 c0       	rjmp	.+6      	; 0x1916 <vfprintf+0x1c2>
    1910:	38 89       	ldd	r19, Y+16	; 0x10
    1912:	33 ff       	sbrs	r19, 3
    1914:	06 c0       	rjmp	.+12     	; 0x1922 <vfprintf+0x1ce>
    1916:	e1 fc       	sbrc	r14, 1
    1918:	06 c0       	rjmp	.+12     	; 0x1926 <vfprintf+0x1d2>
    191a:	e2 fe       	sbrs	r14, 2
    191c:	06 c0       	rjmp	.+12     	; 0x192a <vfprintf+0x1d6>
    191e:	00 e2       	ldi	r16, 0x20	; 32
    1920:	05 c0       	rjmp	.+10     	; 0x192c <vfprintf+0x1d8>
    1922:	0d e2       	ldi	r16, 0x2D	; 45
    1924:	03 c0       	rjmp	.+6      	; 0x192c <vfprintf+0x1d8>
    1926:	0b e2       	ldi	r16, 0x2B	; 43
    1928:	01 c0       	rjmp	.+2      	; 0x192c <vfprintf+0x1d8>
    192a:	00 e0       	ldi	r16, 0x00	; 0
    192c:	88 89       	ldd	r24, Y+16	; 0x10
    192e:	99 89       	ldd	r25, Y+17	; 0x11
    1930:	8c 70       	andi	r24, 0x0C	; 12
    1932:	90 70       	andi	r25, 0x00	; 0
    1934:	00 97       	sbiw	r24, 0x00	; 0
    1936:	c1 f1       	breq	.+112    	; 0x19a8 <vfprintf+0x254>
    1938:	00 23       	and	r16, r16
    193a:	11 f0       	breq	.+4      	; 0x1940 <vfprintf+0x1ec>
    193c:	84 e0       	ldi	r24, 0x04	; 4
    193e:	01 c0       	rjmp	.+2      	; 0x1942 <vfprintf+0x1ee>
    1940:	83 e0       	ldi	r24, 0x03	; 3
    1942:	8f 15       	cp	r24, r15
    1944:	58 f4       	brcc	.+22     	; 0x195c <vfprintf+0x208>
    1946:	f8 1a       	sub	r15, r24
    1948:	e3 fc       	sbrc	r14, 3
    194a:	09 c0       	rjmp	.+18     	; 0x195e <vfprintf+0x20a>
    194c:	80 e2       	ldi	r24, 0x20	; 32
    194e:	90 e0       	ldi	r25, 0x00	; 0
    1950:	b6 01       	movw	r22, r12
    1952:	0e 94 38 12 	call	0x2470	; 0x2470 <fputc>
    1956:	fa 94       	dec	r15
    1958:	c9 f7       	brne	.-14     	; 0x194c <vfprintf+0x1f8>
    195a:	01 c0       	rjmp	.+2      	; 0x195e <vfprintf+0x20a>
    195c:	ff 24       	eor	r15, r15
    195e:	00 23       	and	r16, r16
    1960:	29 f0       	breq	.+10     	; 0x196c <vfprintf+0x218>
    1962:	80 2f       	mov	r24, r16
    1964:	90 e0       	ldi	r25, 0x00	; 0
    1966:	b6 01       	movw	r22, r12
    1968:	0e 94 38 12 	call	0x2470	; 0x2470 <fputc>
    196c:	88 89       	ldd	r24, Y+16	; 0x10
    196e:	83 fd       	sbrc	r24, 3
    1970:	03 c0       	rjmp	.+6      	; 0x1978 <vfprintf+0x224>
    1972:	00 e9       	ldi	r16, 0x90	; 144
    1974:	10 e0       	ldi	r17, 0x00	; 0
    1976:	0e c0       	rjmp	.+28     	; 0x1994 <vfprintf+0x240>
    1978:	0c e8       	ldi	r16, 0x8C	; 140
    197a:	10 e0       	ldi	r17, 0x00	; 0
    197c:	0b c0       	rjmp	.+22     	; 0x1994 <vfprintf+0x240>
    197e:	a1 14       	cp	r10, r1
    1980:	b1 04       	cpc	r11, r1
    1982:	09 f0       	breq	.+2      	; 0x1986 <vfprintf+0x232>
    1984:	80 52       	subi	r24, 0x20	; 32
    1986:	90 e0       	ldi	r25, 0x00	; 0
    1988:	b6 01       	movw	r22, r12
    198a:	0e 94 38 12 	call	0x2470	; 0x2470 <fputc>
    198e:	0f 5f       	subi	r16, 0xFF	; 255
    1990:	1f 4f       	sbci	r17, 0xFF	; 255
    1992:	05 c0       	rjmp	.+10     	; 0x199e <vfprintf+0x24a>
    1994:	ae 2c       	mov	r10, r14
    1996:	bb 24       	eor	r11, r11
    1998:	90 e1       	ldi	r25, 0x10	; 16
    199a:	a9 22       	and	r10, r25
    199c:	bb 24       	eor	r11, r11
    199e:	f8 01       	movw	r30, r16
    19a0:	84 91       	lpm	r24, Z+
    19a2:	88 23       	and	r24, r24
    19a4:	61 f7       	brne	.-40     	; 0x197e <vfprintf+0x22a>
    19a6:	62 c2       	rjmp	.+1220   	; 0x1e6c <vfprintf+0x718>
    19a8:	e7 fe       	sbrs	r14, 7
    19aa:	0e c0       	rjmp	.+28     	; 0x19c8 <vfprintf+0x274>
    19ac:	9a 0c       	add	r9, r10
    19ae:	f8 89       	ldd	r31, Y+16	; 0x10
    19b0:	f4 ff       	sbrs	r31, 4
    19b2:	04 c0       	rjmp	.+8      	; 0x19bc <vfprintf+0x268>
    19b4:	8a 81       	ldd	r24, Y+2	; 0x02
    19b6:	81 33       	cpi	r24, 0x31	; 49
    19b8:	09 f4       	brne	.+2      	; 0x19bc <vfprintf+0x268>
    19ba:	9a 94       	dec	r9
    19bc:	19 14       	cp	r1, r9
    19be:	54 f5       	brge	.+84     	; 0x1a14 <vfprintf+0x2c0>
    19c0:	29 2d       	mov	r18, r9
    19c2:	29 30       	cpi	r18, 0x09	; 9
    19c4:	50 f5       	brcc	.+84     	; 0x1a1a <vfprintf+0x2c6>
    19c6:	2d c0       	rjmp	.+90     	; 0x1a22 <vfprintf+0x2ce>
    19c8:	e6 fc       	sbrc	r14, 6
    19ca:	2b c0       	rjmp	.+86     	; 0x1a22 <vfprintf+0x2ce>
    19cc:	81 2f       	mov	r24, r17
    19ce:	90 e0       	ldi	r25, 0x00	; 0
    19d0:	8a 15       	cp	r24, r10
    19d2:	9b 05       	cpc	r25, r11
    19d4:	4c f0       	brlt	.+18     	; 0x19e8 <vfprintf+0x294>
    19d6:	3c ef       	ldi	r19, 0xFC	; 252
    19d8:	a3 16       	cp	r10, r19
    19da:	3f ef       	ldi	r19, 0xFF	; 255
    19dc:	b3 06       	cpc	r11, r19
    19de:	24 f0       	brlt	.+8      	; 0x19e8 <vfprintf+0x294>
    19e0:	80 e8       	ldi	r24, 0x80	; 128
    19e2:	e8 2a       	or	r14, r24
    19e4:	01 c0       	rjmp	.+2      	; 0x19e8 <vfprintf+0x294>
    19e6:	11 50       	subi	r17, 0x01	; 1
    19e8:	11 23       	and	r17, r17
    19ea:	49 f0       	breq	.+18     	; 0x19fe <vfprintf+0x2aa>
    19ec:	e2 e0       	ldi	r30, 0x02	; 2
    19ee:	f0 e0       	ldi	r31, 0x00	; 0
    19f0:	ec 0f       	add	r30, r28
    19f2:	fd 1f       	adc	r31, r29
    19f4:	e1 0f       	add	r30, r17
    19f6:	f1 1d       	adc	r31, r1
    19f8:	80 81       	ld	r24, Z
    19fa:	80 33       	cpi	r24, 0x30	; 48
    19fc:	a1 f3       	breq	.-24     	; 0x19e6 <vfprintf+0x292>
    19fe:	e7 fe       	sbrs	r14, 7
    1a00:	10 c0       	rjmp	.+32     	; 0x1a22 <vfprintf+0x2ce>
    1a02:	91 2e       	mov	r9, r17
    1a04:	93 94       	inc	r9
    1a06:	81 2f       	mov	r24, r17
    1a08:	90 e0       	ldi	r25, 0x00	; 0
    1a0a:	a8 16       	cp	r10, r24
    1a0c:	b9 06       	cpc	r11, r25
    1a0e:	44 f4       	brge	.+16     	; 0x1a20 <vfprintf+0x2cc>
    1a10:	1a 19       	sub	r17, r10
    1a12:	07 c0       	rjmp	.+14     	; 0x1a22 <vfprintf+0x2ce>
    1a14:	99 24       	eor	r9, r9
    1a16:	93 94       	inc	r9
    1a18:	04 c0       	rjmp	.+8      	; 0x1a22 <vfprintf+0x2ce>
    1a1a:	98 e0       	ldi	r25, 0x08	; 8
    1a1c:	99 2e       	mov	r9, r25
    1a1e:	01 c0       	rjmp	.+2      	; 0x1a22 <vfprintf+0x2ce>
    1a20:	10 e0       	ldi	r17, 0x00	; 0
    1a22:	e7 fe       	sbrs	r14, 7
    1a24:	07 c0       	rjmp	.+14     	; 0x1a34 <vfprintf+0x2e0>
    1a26:	1a 14       	cp	r1, r10
    1a28:	1b 04       	cpc	r1, r11
    1a2a:	3c f4       	brge	.+14     	; 0x1a3a <vfprintf+0x2e6>
    1a2c:	95 01       	movw	r18, r10
    1a2e:	2f 5f       	subi	r18, 0xFF	; 255
    1a30:	3f 4f       	sbci	r19, 0xFF	; 255
    1a32:	05 c0       	rjmp	.+10     	; 0x1a3e <vfprintf+0x2ea>
    1a34:	25 e0       	ldi	r18, 0x05	; 5
    1a36:	30 e0       	ldi	r19, 0x00	; 0
    1a38:	02 c0       	rjmp	.+4      	; 0x1a3e <vfprintf+0x2ea>
    1a3a:	21 e0       	ldi	r18, 0x01	; 1
    1a3c:	30 e0       	ldi	r19, 0x00	; 0
    1a3e:	00 23       	and	r16, r16
    1a40:	11 f0       	breq	.+4      	; 0x1a46 <vfprintf+0x2f2>
    1a42:	2f 5f       	subi	r18, 0xFF	; 255
    1a44:	3f 4f       	sbci	r19, 0xFF	; 255
    1a46:	11 23       	and	r17, r17
    1a48:	29 f0       	breq	.+10     	; 0x1a54 <vfprintf+0x300>
    1a4a:	81 2f       	mov	r24, r17
    1a4c:	90 e0       	ldi	r25, 0x00	; 0
    1a4e:	01 96       	adiw	r24, 0x01	; 1
    1a50:	28 0f       	add	r18, r24
    1a52:	39 1f       	adc	r19, r25
    1a54:	8f 2d       	mov	r24, r15
    1a56:	90 e0       	ldi	r25, 0x00	; 0
    1a58:	28 17       	cp	r18, r24
    1a5a:	39 07       	cpc	r19, r25
    1a5c:	14 f4       	brge	.+4      	; 0x1a62 <vfprintf+0x30e>
    1a5e:	f2 1a       	sub	r15, r18
    1a60:	01 c0       	rjmp	.+2      	; 0x1a64 <vfprintf+0x310>
    1a62:	ff 24       	eor	r15, r15
    1a64:	4e 2c       	mov	r4, r14
    1a66:	55 24       	eor	r5, r5
    1a68:	c2 01       	movw	r24, r4
    1a6a:	89 70       	andi	r24, 0x09	; 9
    1a6c:	90 70       	andi	r25, 0x00	; 0
    1a6e:	00 97       	sbiw	r24, 0x00	; 0
    1a70:	49 f4       	brne	.+18     	; 0x1a84 <vfprintf+0x330>
    1a72:	06 c0       	rjmp	.+12     	; 0x1a80 <vfprintf+0x32c>
    1a74:	80 e2       	ldi	r24, 0x20	; 32
    1a76:	90 e0       	ldi	r25, 0x00	; 0
    1a78:	b6 01       	movw	r22, r12
    1a7a:	0e 94 38 12 	call	0x2470	; 0x2470 <fputc>
    1a7e:	fa 94       	dec	r15
    1a80:	ff 20       	and	r15, r15
    1a82:	c1 f7       	brne	.-16     	; 0x1a74 <vfprintf+0x320>
    1a84:	00 23       	and	r16, r16
    1a86:	29 f0       	breq	.+10     	; 0x1a92 <vfprintf+0x33e>
    1a88:	80 2f       	mov	r24, r16
    1a8a:	90 e0       	ldi	r25, 0x00	; 0
    1a8c:	b6 01       	movw	r22, r12
    1a8e:	0e 94 38 12 	call	0x2470	; 0x2470 <fputc>
    1a92:	43 fc       	sbrc	r4, 3
    1a94:	09 c0       	rjmp	.+18     	; 0x1aa8 <vfprintf+0x354>
    1a96:	06 c0       	rjmp	.+12     	; 0x1aa4 <vfprintf+0x350>
    1a98:	80 e3       	ldi	r24, 0x30	; 48
    1a9a:	90 e0       	ldi	r25, 0x00	; 0
    1a9c:	b6 01       	movw	r22, r12
    1a9e:	0e 94 38 12 	call	0x2470	; 0x2470 <fputc>
    1aa2:	fa 94       	dec	r15
    1aa4:	ff 20       	and	r15, r15
    1aa6:	c1 f7       	brne	.-16     	; 0x1a98 <vfprintf+0x344>
    1aa8:	e7 fe       	sbrs	r14, 7
    1aaa:	46 c0       	rjmp	.+140    	; 0x1b38 <vfprintf+0x3e4>
    1aac:	35 01       	movw	r6, r10
    1aae:	b7 fe       	sbrs	r11, 7
    1ab0:	02 c0       	rjmp	.+4      	; 0x1ab6 <vfprintf+0x362>
    1ab2:	66 24       	eor	r6, r6
    1ab4:	77 24       	eor	r7, r7
    1ab6:	25 01       	movw	r4, r10
    1ab8:	08 94       	sec
    1aba:	41 1c       	adc	r4, r1
    1abc:	51 1c       	adc	r5, r1
    1abe:	46 18       	sub	r4, r6
    1ac0:	57 08       	sbc	r5, r7
    1ac2:	42 0c       	add	r4, r2
    1ac4:	53 1c       	adc	r5, r3
    1ac6:	f5 01       	movw	r30, r10
    1ac8:	e9 19       	sub	r30, r9
    1aca:	f1 09       	sbc	r31, r1
    1acc:	4f 01       	movw	r8, r30
    1ace:	81 2f       	mov	r24, r17
    1ad0:	90 e0       	ldi	r25, 0x00	; 0
    1ad2:	00 27       	eor	r16, r16
    1ad4:	11 27       	eor	r17, r17
    1ad6:	08 1b       	sub	r16, r24
    1ad8:	19 0b       	sbc	r17, r25
    1ada:	ff ef       	ldi	r31, 0xFF	; 255
    1adc:	6f 16       	cp	r6, r31
    1ade:	ff ef       	ldi	r31, 0xFF	; 255
    1ae0:	7f 06       	cpc	r7, r31
    1ae2:	29 f4       	brne	.+10     	; 0x1aee <vfprintf+0x39a>
    1ae4:	8e e2       	ldi	r24, 0x2E	; 46
    1ae6:	90 e0       	ldi	r25, 0x00	; 0
    1ae8:	b6 01       	movw	r22, r12
    1aea:	0e 94 38 12 	call	0x2470	; 0x2470 <fputc>
    1aee:	a6 14       	cp	r10, r6
    1af0:	b7 04       	cpc	r11, r7
    1af2:	34 f0       	brlt	.+12     	; 0x1b00 <vfprintf+0x3ac>
    1af4:	86 14       	cp	r8, r6
    1af6:	97 04       	cpc	r9, r7
    1af8:	1c f4       	brge	.+6      	; 0x1b00 <vfprintf+0x3ac>
    1afa:	f2 01       	movw	r30, r4
    1afc:	80 81       	ld	r24, Z
    1afe:	01 c0       	rjmp	.+2      	; 0x1b02 <vfprintf+0x3ae>
    1b00:	80 e3       	ldi	r24, 0x30	; 48
    1b02:	08 94       	sec
    1b04:	61 08       	sbc	r6, r1
    1b06:	71 08       	sbc	r7, r1
    1b08:	08 94       	sec
    1b0a:	41 1c       	adc	r4, r1
    1b0c:	51 1c       	adc	r5, r1
    1b0e:	60 16       	cp	r6, r16
    1b10:	71 06       	cpc	r7, r17
    1b12:	2c f0       	brlt	.+10     	; 0x1b1e <vfprintf+0x3ca>
    1b14:	90 e0       	ldi	r25, 0x00	; 0
    1b16:	b6 01       	movw	r22, r12
    1b18:	0e 94 38 12 	call	0x2470	; 0x2470 <fputc>
    1b1c:	de cf       	rjmp	.-68     	; 0x1ada <vfprintf+0x386>
    1b1e:	6a 14       	cp	r6, r10
    1b20:	7b 04       	cpc	r7, r11
    1b22:	41 f4       	brne	.+16     	; 0x1b34 <vfprintf+0x3e0>
    1b24:	9a 81       	ldd	r25, Y+2	; 0x02
    1b26:	96 33       	cpi	r25, 0x36	; 54
    1b28:	20 f4       	brcc	.+8      	; 0x1b32 <vfprintf+0x3de>
    1b2a:	95 33       	cpi	r25, 0x35	; 53
    1b2c:	19 f4       	brne	.+6      	; 0x1b34 <vfprintf+0x3e0>
    1b2e:	f8 89       	ldd	r31, Y+16	; 0x10
    1b30:	f4 ff       	sbrs	r31, 4
    1b32:	81 e3       	ldi	r24, 0x31	; 49
    1b34:	90 e0       	ldi	r25, 0x00	; 0
    1b36:	49 c0       	rjmp	.+146    	; 0x1bca <vfprintf+0x476>
    1b38:	8a 81       	ldd	r24, Y+2	; 0x02
    1b3a:	81 33       	cpi	r24, 0x31	; 49
    1b3c:	11 f0       	breq	.+4      	; 0x1b42 <vfprintf+0x3ee>
    1b3e:	2f ee       	ldi	r18, 0xEF	; 239
    1b40:	62 22       	and	r6, r18
    1b42:	90 e0       	ldi	r25, 0x00	; 0
    1b44:	b6 01       	movw	r22, r12
    1b46:	0e 94 38 12 	call	0x2470	; 0x2470 <fputc>
    1b4a:	11 23       	and	r17, r17
    1b4c:	89 f0       	breq	.+34     	; 0x1b70 <vfprintf+0x41c>
    1b4e:	8e e2       	ldi	r24, 0x2E	; 46
    1b50:	90 e0       	ldi	r25, 0x00	; 0
    1b52:	b6 01       	movw	r22, r12
    1b54:	0e 94 38 12 	call	0x2470	; 0x2470 <fputc>
    1b58:	02 e0       	ldi	r16, 0x02	; 2
    1b5a:	f1 01       	movw	r30, r2
    1b5c:	e0 0f       	add	r30, r16
    1b5e:	f1 1d       	adc	r31, r1
    1b60:	0f 5f       	subi	r16, 0xFF	; 255
    1b62:	80 81       	ld	r24, Z
    1b64:	90 e0       	ldi	r25, 0x00	; 0
    1b66:	b6 01       	movw	r22, r12
    1b68:	0e 94 38 12 	call	0x2470	; 0x2470 <fputc>
    1b6c:	11 50       	subi	r17, 0x01	; 1
    1b6e:	a9 f7       	brne	.-22     	; 0x1b5a <vfprintf+0x406>
    1b70:	44 fe       	sbrs	r4, 4
    1b72:	03 c0       	rjmp	.+6      	; 0x1b7a <vfprintf+0x426>
    1b74:	85 e4       	ldi	r24, 0x45	; 69
    1b76:	90 e0       	ldi	r25, 0x00	; 0
    1b78:	02 c0       	rjmp	.+4      	; 0x1b7e <vfprintf+0x42a>
    1b7a:	85 e6       	ldi	r24, 0x65	; 101
    1b7c:	90 e0       	ldi	r25, 0x00	; 0
    1b7e:	b6 01       	movw	r22, r12
    1b80:	0e 94 38 12 	call	0x2470	; 0x2470 <fputc>
    1b84:	b7 fc       	sbrc	r11, 7
    1b86:	05 c0       	rjmp	.+10     	; 0x1b92 <vfprintf+0x43e>
    1b88:	a1 14       	cp	r10, r1
    1b8a:	b1 04       	cpc	r11, r1
    1b8c:	41 f4       	brne	.+16     	; 0x1b9e <vfprintf+0x44a>
    1b8e:	64 fe       	sbrs	r6, 4
    1b90:	06 c0       	rjmp	.+12     	; 0x1b9e <vfprintf+0x44a>
    1b92:	b0 94       	com	r11
    1b94:	a1 94       	neg	r10
    1b96:	b1 08       	sbc	r11, r1
    1b98:	b3 94       	inc	r11
    1b9a:	8d e2       	ldi	r24, 0x2D	; 45
    1b9c:	01 c0       	rjmp	.+2      	; 0x1ba0 <vfprintf+0x44c>
    1b9e:	8b e2       	ldi	r24, 0x2B	; 43
    1ba0:	90 e0       	ldi	r25, 0x00	; 0
    1ba2:	b6 01       	movw	r22, r12
    1ba4:	0e 94 38 12 	call	0x2470	; 0x2470 <fputc>
    1ba8:	80 e3       	ldi	r24, 0x30	; 48
    1baa:	05 c0       	rjmp	.+10     	; 0x1bb6 <vfprintf+0x462>
    1bac:	8f 5f       	subi	r24, 0xFF	; 255
    1bae:	e6 ef       	ldi	r30, 0xF6	; 246
    1bb0:	ff ef       	ldi	r31, 0xFF	; 255
    1bb2:	ae 0e       	add	r10, r30
    1bb4:	bf 1e       	adc	r11, r31
    1bb6:	fa e0       	ldi	r31, 0x0A	; 10
    1bb8:	af 16       	cp	r10, r31
    1bba:	b1 04       	cpc	r11, r1
    1bbc:	bc f7       	brge	.-18     	; 0x1bac <vfprintf+0x458>
    1bbe:	90 e0       	ldi	r25, 0x00	; 0
    1bc0:	b6 01       	movw	r22, r12
    1bc2:	0e 94 38 12 	call	0x2470	; 0x2470 <fputc>
    1bc6:	c5 01       	movw	r24, r10
    1bc8:	c0 96       	adiw	r24, 0x30	; 48
    1bca:	b6 01       	movw	r22, r12
    1bcc:	0e 94 38 12 	call	0x2470	; 0x2470 <fputc>
    1bd0:	4d c1       	rjmp	.+666    	; 0x1e6c <vfprintf+0x718>
    1bd2:	83 36       	cpi	r24, 0x63	; 99
    1bd4:	31 f0       	breq	.+12     	; 0x1be2 <vfprintf+0x48e>
    1bd6:	83 37       	cpi	r24, 0x73	; 115
    1bd8:	89 f0       	breq	.+34     	; 0x1bfc <vfprintf+0x4a8>
    1bda:	83 35       	cpi	r24, 0x53	; 83
    1bdc:	09 f0       	breq	.+2      	; 0x1be0 <vfprintf+0x48c>
    1bde:	59 c0       	rjmp	.+178    	; 0x1c92 <vfprintf+0x53e>
    1be0:	22 c0       	rjmp	.+68     	; 0x1c26 <vfprintf+0x4d2>
    1be2:	9a 01       	movw	r18, r20
    1be4:	2e 5f       	subi	r18, 0xFE	; 254
    1be6:	3f 4f       	sbci	r19, 0xFF	; 255
    1be8:	3d 87       	std	Y+13, r19	; 0x0d
    1bea:	2c 87       	std	Y+12, r18	; 0x0c
    1bec:	fa 01       	movw	r30, r20
    1bee:	80 81       	ld	r24, Z
    1bf0:	89 83       	std	Y+1, r24	; 0x01
    1bf2:	31 01       	movw	r6, r2
    1bf4:	81 e0       	ldi	r24, 0x01	; 1
    1bf6:	a8 2e       	mov	r10, r24
    1bf8:	b1 2c       	mov	r11, r1
    1bfa:	13 c0       	rjmp	.+38     	; 0x1c22 <vfprintf+0x4ce>
    1bfc:	9a 01       	movw	r18, r20
    1bfe:	2e 5f       	subi	r18, 0xFE	; 254
    1c00:	3f 4f       	sbci	r19, 0xFF	; 255
    1c02:	3d 87       	std	Y+13, r19	; 0x0d
    1c04:	2c 87       	std	Y+12, r18	; 0x0c
    1c06:	fa 01       	movw	r30, r20
    1c08:	60 80       	ld	r6, Z
    1c0a:	71 80       	ldd	r7, Z+1	; 0x01
    1c0c:	06 ff       	sbrs	r16, 6
    1c0e:	03 c0       	rjmp	.+6      	; 0x1c16 <vfprintf+0x4c2>
    1c10:	61 2f       	mov	r22, r17
    1c12:	70 e0       	ldi	r23, 0x00	; 0
    1c14:	02 c0       	rjmp	.+4      	; 0x1c1a <vfprintf+0x4c6>
    1c16:	6f ef       	ldi	r22, 0xFF	; 255
    1c18:	7f ef       	ldi	r23, 0xFF	; 255
    1c1a:	c3 01       	movw	r24, r6
    1c1c:	0e 94 2d 12 	call	0x245a	; 0x245a <strnlen>
    1c20:	5c 01       	movw	r10, r24
    1c22:	0f 77       	andi	r16, 0x7F	; 127
    1c24:	14 c0       	rjmp	.+40     	; 0x1c4e <vfprintf+0x4fa>
    1c26:	9a 01       	movw	r18, r20
    1c28:	2e 5f       	subi	r18, 0xFE	; 254
    1c2a:	3f 4f       	sbci	r19, 0xFF	; 255
    1c2c:	3d 87       	std	Y+13, r19	; 0x0d
    1c2e:	2c 87       	std	Y+12, r18	; 0x0c
    1c30:	fa 01       	movw	r30, r20
    1c32:	60 80       	ld	r6, Z
    1c34:	71 80       	ldd	r7, Z+1	; 0x01
    1c36:	06 ff       	sbrs	r16, 6
    1c38:	03 c0       	rjmp	.+6      	; 0x1c40 <vfprintf+0x4ec>
    1c3a:	61 2f       	mov	r22, r17
    1c3c:	70 e0       	ldi	r23, 0x00	; 0
    1c3e:	02 c0       	rjmp	.+4      	; 0x1c44 <vfprintf+0x4f0>
    1c40:	6f ef       	ldi	r22, 0xFF	; 255
    1c42:	7f ef       	ldi	r23, 0xFF	; 255
    1c44:	c3 01       	movw	r24, r6
    1c46:	0e 94 22 12 	call	0x2444	; 0x2444 <strnlen_P>
    1c4a:	5c 01       	movw	r10, r24
    1c4c:	00 68       	ori	r16, 0x80	; 128
    1c4e:	03 fd       	sbrc	r16, 3
    1c50:	1c c0       	rjmp	.+56     	; 0x1c8a <vfprintf+0x536>
    1c52:	06 c0       	rjmp	.+12     	; 0x1c60 <vfprintf+0x50c>
    1c54:	80 e2       	ldi	r24, 0x20	; 32
    1c56:	90 e0       	ldi	r25, 0x00	; 0
    1c58:	b6 01       	movw	r22, r12
    1c5a:	0e 94 38 12 	call	0x2470	; 0x2470 <fputc>
    1c5e:	fa 94       	dec	r15
    1c60:	8f 2d       	mov	r24, r15
    1c62:	90 e0       	ldi	r25, 0x00	; 0
    1c64:	a8 16       	cp	r10, r24
    1c66:	b9 06       	cpc	r11, r25
    1c68:	a8 f3       	brcs	.-22     	; 0x1c54 <vfprintf+0x500>
    1c6a:	0f c0       	rjmp	.+30     	; 0x1c8a <vfprintf+0x536>
    1c6c:	f3 01       	movw	r30, r6
    1c6e:	07 fd       	sbrc	r16, 7
    1c70:	85 91       	lpm	r24, Z+
    1c72:	07 ff       	sbrs	r16, 7
    1c74:	81 91       	ld	r24, Z+
    1c76:	3f 01       	movw	r6, r30
    1c78:	90 e0       	ldi	r25, 0x00	; 0
    1c7a:	b6 01       	movw	r22, r12
    1c7c:	0e 94 38 12 	call	0x2470	; 0x2470 <fputc>
    1c80:	f1 10       	cpse	r15, r1
    1c82:	fa 94       	dec	r15
    1c84:	08 94       	sec
    1c86:	a1 08       	sbc	r10, r1
    1c88:	b1 08       	sbc	r11, r1
    1c8a:	a1 14       	cp	r10, r1
    1c8c:	b1 04       	cpc	r11, r1
    1c8e:	71 f7       	brne	.-36     	; 0x1c6c <vfprintf+0x518>
    1c90:	ed c0       	rjmp	.+474    	; 0x1e6c <vfprintf+0x718>
    1c92:	84 36       	cpi	r24, 0x64	; 100
    1c94:	11 f0       	breq	.+4      	; 0x1c9a <vfprintf+0x546>
    1c96:	89 36       	cpi	r24, 0x69	; 105
    1c98:	61 f5       	brne	.+88     	; 0x1cf2 <vfprintf+0x59e>
    1c9a:	07 ff       	sbrs	r16, 7
    1c9c:	0b c0       	rjmp	.+22     	; 0x1cb4 <vfprintf+0x560>
    1c9e:	9a 01       	movw	r18, r20
    1ca0:	2c 5f       	subi	r18, 0xFC	; 252
    1ca2:	3f 4f       	sbci	r19, 0xFF	; 255
    1ca4:	3d 87       	std	Y+13, r19	; 0x0d
    1ca6:	2c 87       	std	Y+12, r18	; 0x0c
    1ca8:	fa 01       	movw	r30, r20
    1caa:	60 81       	ld	r22, Z
    1cac:	71 81       	ldd	r23, Z+1	; 0x01
    1cae:	82 81       	ldd	r24, Z+2	; 0x02
    1cb0:	93 81       	ldd	r25, Z+3	; 0x03
    1cb2:	0c c0       	rjmp	.+24     	; 0x1ccc <vfprintf+0x578>
    1cb4:	9a 01       	movw	r18, r20
    1cb6:	2e 5f       	subi	r18, 0xFE	; 254
    1cb8:	3f 4f       	sbci	r19, 0xFF	; 255
    1cba:	3d 87       	std	Y+13, r19	; 0x0d
    1cbc:	2c 87       	std	Y+12, r18	; 0x0c
    1cbe:	fa 01       	movw	r30, r20
    1cc0:	60 81       	ld	r22, Z
    1cc2:	71 81       	ldd	r23, Z+1	; 0x01
    1cc4:	88 27       	eor	r24, r24
    1cc6:	77 fd       	sbrc	r23, 7
    1cc8:	80 95       	com	r24
    1cca:	98 2f       	mov	r25, r24
    1ccc:	0f 76       	andi	r16, 0x6F	; 111
    1cce:	97 ff       	sbrs	r25, 7
    1cd0:	08 c0       	rjmp	.+16     	; 0x1ce2 <vfprintf+0x58e>
    1cd2:	90 95       	com	r25
    1cd4:	80 95       	com	r24
    1cd6:	70 95       	com	r23
    1cd8:	61 95       	neg	r22
    1cda:	7f 4f       	sbci	r23, 0xFF	; 255
    1cdc:	8f 4f       	sbci	r24, 0xFF	; 255
    1cde:	9f 4f       	sbci	r25, 0xFF	; 255
    1ce0:	00 68       	ori	r16, 0x80	; 128
    1ce2:	a1 01       	movw	r20, r2
    1ce4:	2a e0       	ldi	r18, 0x0A	; 10
    1ce6:	30 e0       	ldi	r19, 0x00	; 0
    1ce8:	0e 94 94 12 	call	0x2528	; 0x2528 <__ultoa_invert>
    1cec:	98 2e       	mov	r9, r24
    1cee:	92 18       	sub	r9, r2
    1cf0:	41 c0       	rjmp	.+130    	; 0x1d74 <vfprintf+0x620>
    1cf2:	85 37       	cpi	r24, 0x75	; 117
    1cf4:	21 f4       	brne	.+8      	; 0x1cfe <vfprintf+0x5aa>
    1cf6:	0f 7e       	andi	r16, 0xEF	; 239
    1cf8:	2a e0       	ldi	r18, 0x0A	; 10
    1cfa:	30 e0       	ldi	r19, 0x00	; 0
    1cfc:	20 c0       	rjmp	.+64     	; 0x1d3e <vfprintf+0x5ea>
    1cfe:	09 7f       	andi	r16, 0xF9	; 249
    1d00:	8f 36       	cpi	r24, 0x6F	; 111
    1d02:	a9 f0       	breq	.+42     	; 0x1d2e <vfprintf+0x5da>
    1d04:	80 37       	cpi	r24, 0x70	; 112
    1d06:	20 f4       	brcc	.+8      	; 0x1d10 <vfprintf+0x5bc>
    1d08:	88 35       	cpi	r24, 0x58	; 88
    1d0a:	09 f0       	breq	.+2      	; 0x1d0e <vfprintf+0x5ba>
    1d0c:	b2 c0       	rjmp	.+356    	; 0x1e72 <vfprintf+0x71e>
    1d0e:	0b c0       	rjmp	.+22     	; 0x1d26 <vfprintf+0x5d2>
    1d10:	80 37       	cpi	r24, 0x70	; 112
    1d12:	21 f0       	breq	.+8      	; 0x1d1c <vfprintf+0x5c8>
    1d14:	88 37       	cpi	r24, 0x78	; 120
    1d16:	09 f0       	breq	.+2      	; 0x1d1a <vfprintf+0x5c6>
    1d18:	ac c0       	rjmp	.+344    	; 0x1e72 <vfprintf+0x71e>
    1d1a:	01 c0       	rjmp	.+2      	; 0x1d1e <vfprintf+0x5ca>
    1d1c:	00 61       	ori	r16, 0x10	; 16
    1d1e:	04 ff       	sbrs	r16, 4
    1d20:	09 c0       	rjmp	.+18     	; 0x1d34 <vfprintf+0x5e0>
    1d22:	04 60       	ori	r16, 0x04	; 4
    1d24:	07 c0       	rjmp	.+14     	; 0x1d34 <vfprintf+0x5e0>
    1d26:	04 ff       	sbrs	r16, 4
    1d28:	08 c0       	rjmp	.+16     	; 0x1d3a <vfprintf+0x5e6>
    1d2a:	06 60       	ori	r16, 0x06	; 6
    1d2c:	06 c0       	rjmp	.+12     	; 0x1d3a <vfprintf+0x5e6>
    1d2e:	28 e0       	ldi	r18, 0x08	; 8
    1d30:	30 e0       	ldi	r19, 0x00	; 0
    1d32:	05 c0       	rjmp	.+10     	; 0x1d3e <vfprintf+0x5ea>
    1d34:	20 e1       	ldi	r18, 0x10	; 16
    1d36:	30 e0       	ldi	r19, 0x00	; 0
    1d38:	02 c0       	rjmp	.+4      	; 0x1d3e <vfprintf+0x5ea>
    1d3a:	20 e1       	ldi	r18, 0x10	; 16
    1d3c:	32 e0       	ldi	r19, 0x02	; 2
    1d3e:	07 ff       	sbrs	r16, 7
    1d40:	0a c0       	rjmp	.+20     	; 0x1d56 <vfprintf+0x602>
    1d42:	ca 01       	movw	r24, r20
    1d44:	04 96       	adiw	r24, 0x04	; 4
    1d46:	9d 87       	std	Y+13, r25	; 0x0d
    1d48:	8c 87       	std	Y+12, r24	; 0x0c
    1d4a:	fa 01       	movw	r30, r20
    1d4c:	60 81       	ld	r22, Z
    1d4e:	71 81       	ldd	r23, Z+1	; 0x01
    1d50:	82 81       	ldd	r24, Z+2	; 0x02
    1d52:	93 81       	ldd	r25, Z+3	; 0x03
    1d54:	09 c0       	rjmp	.+18     	; 0x1d68 <vfprintf+0x614>
    1d56:	ca 01       	movw	r24, r20
    1d58:	02 96       	adiw	r24, 0x02	; 2
    1d5a:	9d 87       	std	Y+13, r25	; 0x0d
    1d5c:	8c 87       	std	Y+12, r24	; 0x0c
    1d5e:	fa 01       	movw	r30, r20
    1d60:	60 81       	ld	r22, Z
    1d62:	71 81       	ldd	r23, Z+1	; 0x01
    1d64:	80 e0       	ldi	r24, 0x00	; 0
    1d66:	90 e0       	ldi	r25, 0x00	; 0
    1d68:	a1 01       	movw	r20, r2
    1d6a:	0e 94 94 12 	call	0x2528	; 0x2528 <__ultoa_invert>
    1d6e:	98 2e       	mov	r9, r24
    1d70:	92 18       	sub	r9, r2
    1d72:	0f 77       	andi	r16, 0x7F	; 127
    1d74:	06 ff       	sbrs	r16, 6
    1d76:	09 c0       	rjmp	.+18     	; 0x1d8a <vfprintf+0x636>
    1d78:	0e 7f       	andi	r16, 0xFE	; 254
    1d7a:	91 16       	cp	r9, r17
    1d7c:	30 f4       	brcc	.+12     	; 0x1d8a <vfprintf+0x636>
    1d7e:	04 ff       	sbrs	r16, 4
    1d80:	06 c0       	rjmp	.+12     	; 0x1d8e <vfprintf+0x63a>
    1d82:	02 fd       	sbrc	r16, 2
    1d84:	04 c0       	rjmp	.+8      	; 0x1d8e <vfprintf+0x63a>
    1d86:	0f 7e       	andi	r16, 0xEF	; 239
    1d88:	02 c0       	rjmp	.+4      	; 0x1d8e <vfprintf+0x63a>
    1d8a:	e9 2c       	mov	r14, r9
    1d8c:	01 c0       	rjmp	.+2      	; 0x1d90 <vfprintf+0x63c>
    1d8e:	e1 2e       	mov	r14, r17
    1d90:	80 2f       	mov	r24, r16
    1d92:	90 e0       	ldi	r25, 0x00	; 0
    1d94:	04 ff       	sbrs	r16, 4
    1d96:	0c c0       	rjmp	.+24     	; 0x1db0 <vfprintf+0x65c>
    1d98:	fe 01       	movw	r30, r28
    1d9a:	e9 0d       	add	r30, r9
    1d9c:	f1 1d       	adc	r31, r1
    1d9e:	20 81       	ld	r18, Z
    1da0:	20 33       	cpi	r18, 0x30	; 48
    1da2:	11 f4       	brne	.+4      	; 0x1da8 <vfprintf+0x654>
    1da4:	09 7e       	andi	r16, 0xE9	; 233
    1da6:	09 c0       	rjmp	.+18     	; 0x1dba <vfprintf+0x666>
    1da8:	e3 94       	inc	r14
    1daa:	02 ff       	sbrs	r16, 2
    1dac:	06 c0       	rjmp	.+12     	; 0x1dba <vfprintf+0x666>
    1dae:	04 c0       	rjmp	.+8      	; 0x1db8 <vfprintf+0x664>
    1db0:	86 78       	andi	r24, 0x86	; 134
    1db2:	90 70       	andi	r25, 0x00	; 0
    1db4:	00 97       	sbiw	r24, 0x00	; 0
    1db6:	09 f0       	breq	.+2      	; 0x1dba <vfprintf+0x666>
    1db8:	e3 94       	inc	r14
    1dba:	a0 2e       	mov	r10, r16
    1dbc:	bb 24       	eor	r11, r11
    1dbe:	03 fd       	sbrc	r16, 3
    1dc0:	14 c0       	rjmp	.+40     	; 0x1dea <vfprintf+0x696>
    1dc2:	00 ff       	sbrs	r16, 0
    1dc4:	0f c0       	rjmp	.+30     	; 0x1de4 <vfprintf+0x690>
    1dc6:	ef 14       	cp	r14, r15
    1dc8:	28 f4       	brcc	.+10     	; 0x1dd4 <vfprintf+0x680>
    1dca:	19 2d       	mov	r17, r9
    1dcc:	1f 0d       	add	r17, r15
    1dce:	1e 19       	sub	r17, r14
    1dd0:	ef 2c       	mov	r14, r15
    1dd2:	08 c0       	rjmp	.+16     	; 0x1de4 <vfprintf+0x690>
    1dd4:	19 2d       	mov	r17, r9
    1dd6:	06 c0       	rjmp	.+12     	; 0x1de4 <vfprintf+0x690>
    1dd8:	80 e2       	ldi	r24, 0x20	; 32
    1dda:	90 e0       	ldi	r25, 0x00	; 0
    1ddc:	b6 01       	movw	r22, r12
    1dde:	0e 94 38 12 	call	0x2470	; 0x2470 <fputc>
    1de2:	e3 94       	inc	r14
    1de4:	ef 14       	cp	r14, r15
    1de6:	c0 f3       	brcs	.-16     	; 0x1dd8 <vfprintf+0x684>
    1de8:	04 c0       	rjmp	.+8      	; 0x1df2 <vfprintf+0x69e>
    1dea:	ef 14       	cp	r14, r15
    1dec:	10 f4       	brcc	.+4      	; 0x1df2 <vfprintf+0x69e>
    1dee:	fe 18       	sub	r15, r14
    1df0:	01 c0       	rjmp	.+2      	; 0x1df4 <vfprintf+0x6a0>
    1df2:	ff 24       	eor	r15, r15
    1df4:	a4 fe       	sbrs	r10, 4
    1df6:	0f c0       	rjmp	.+30     	; 0x1e16 <vfprintf+0x6c2>
    1df8:	80 e3       	ldi	r24, 0x30	; 48
    1dfa:	90 e0       	ldi	r25, 0x00	; 0
    1dfc:	b6 01       	movw	r22, r12
    1dfe:	0e 94 38 12 	call	0x2470	; 0x2470 <fputc>
    1e02:	a2 fe       	sbrs	r10, 2
    1e04:	1f c0       	rjmp	.+62     	; 0x1e44 <vfprintf+0x6f0>
    1e06:	a1 fe       	sbrs	r10, 1
    1e08:	03 c0       	rjmp	.+6      	; 0x1e10 <vfprintf+0x6bc>
    1e0a:	88 e5       	ldi	r24, 0x58	; 88
    1e0c:	90 e0       	ldi	r25, 0x00	; 0
    1e0e:	10 c0       	rjmp	.+32     	; 0x1e30 <vfprintf+0x6dc>
    1e10:	88 e7       	ldi	r24, 0x78	; 120
    1e12:	90 e0       	ldi	r25, 0x00	; 0
    1e14:	0d c0       	rjmp	.+26     	; 0x1e30 <vfprintf+0x6dc>
    1e16:	c5 01       	movw	r24, r10
    1e18:	86 78       	andi	r24, 0x86	; 134
    1e1a:	90 70       	andi	r25, 0x00	; 0
    1e1c:	00 97       	sbiw	r24, 0x00	; 0
    1e1e:	91 f0       	breq	.+36     	; 0x1e44 <vfprintf+0x6f0>
    1e20:	a1 fc       	sbrc	r10, 1
    1e22:	02 c0       	rjmp	.+4      	; 0x1e28 <vfprintf+0x6d4>
    1e24:	80 e2       	ldi	r24, 0x20	; 32
    1e26:	01 c0       	rjmp	.+2      	; 0x1e2a <vfprintf+0x6d6>
    1e28:	8b e2       	ldi	r24, 0x2B	; 43
    1e2a:	07 fd       	sbrc	r16, 7
    1e2c:	8d e2       	ldi	r24, 0x2D	; 45
    1e2e:	90 e0       	ldi	r25, 0x00	; 0
    1e30:	b6 01       	movw	r22, r12
    1e32:	0e 94 38 12 	call	0x2470	; 0x2470 <fputc>
    1e36:	06 c0       	rjmp	.+12     	; 0x1e44 <vfprintf+0x6f0>
    1e38:	80 e3       	ldi	r24, 0x30	; 48
    1e3a:	90 e0       	ldi	r25, 0x00	; 0
    1e3c:	b6 01       	movw	r22, r12
    1e3e:	0e 94 38 12 	call	0x2470	; 0x2470 <fputc>
    1e42:	11 50       	subi	r17, 0x01	; 1
    1e44:	91 16       	cp	r9, r17
    1e46:	c0 f3       	brcs	.-16     	; 0x1e38 <vfprintf+0x6e4>
    1e48:	9a 94       	dec	r9
    1e4a:	f1 01       	movw	r30, r2
    1e4c:	e9 0d       	add	r30, r9
    1e4e:	f1 1d       	adc	r31, r1
    1e50:	80 81       	ld	r24, Z
    1e52:	90 e0       	ldi	r25, 0x00	; 0
    1e54:	b6 01       	movw	r22, r12
    1e56:	0e 94 38 12 	call	0x2470	; 0x2470 <fputc>
    1e5a:	99 20       	and	r9, r9
    1e5c:	a9 f7       	brne	.-22     	; 0x1e48 <vfprintf+0x6f4>
    1e5e:	06 c0       	rjmp	.+12     	; 0x1e6c <vfprintf+0x718>
    1e60:	80 e2       	ldi	r24, 0x20	; 32
    1e62:	90 e0       	ldi	r25, 0x00	; 0
    1e64:	b6 01       	movw	r22, r12
    1e66:	0e 94 38 12 	call	0x2470	; 0x2470 <fputc>
    1e6a:	fa 94       	dec	r15
    1e6c:	ff 20       	and	r15, r15
    1e6e:	c1 f7       	brne	.-16     	; 0x1e60 <vfprintf+0x70c>
    1e70:	95 cc       	rjmp	.-1750   	; 0x179c <vfprintf+0x48>
    1e72:	f6 01       	movw	r30, r12
    1e74:	26 81       	ldd	r18, Z+6	; 0x06
    1e76:	37 81       	ldd	r19, Z+7	; 0x07
    1e78:	02 c0       	rjmp	.+4      	; 0x1e7e <vfprintf+0x72a>
    1e7a:	2f ef       	ldi	r18, 0xFF	; 255
    1e7c:	3f ef       	ldi	r19, 0xFF	; 255
    1e7e:	c9 01       	movw	r24, r18
    1e80:	63 96       	adiw	r28, 0x13	; 19
    1e82:	0f b6       	in	r0, 0x3f	; 63
    1e84:	f8 94       	cli
    1e86:	de bf       	out	0x3e, r29	; 62
    1e88:	0f be       	out	0x3f, r0	; 63
    1e8a:	cd bf       	out	0x3d, r28	; 61
    1e8c:	cf 91       	pop	r28
    1e8e:	df 91       	pop	r29
    1e90:	1f 91       	pop	r17
    1e92:	0f 91       	pop	r16
    1e94:	ff 90       	pop	r15
    1e96:	ef 90       	pop	r14
    1e98:	df 90       	pop	r13
    1e9a:	cf 90       	pop	r12
    1e9c:	bf 90       	pop	r11
    1e9e:	af 90       	pop	r10
    1ea0:	9f 90       	pop	r9
    1ea2:	8f 90       	pop	r8
    1ea4:	7f 90       	pop	r7
    1ea6:	6f 90       	pop	r6
    1ea8:	5f 90       	pop	r5
    1eaa:	4f 90       	pop	r4
    1eac:	3f 90       	pop	r3
    1eae:	2f 90       	pop	r2
    1eb0:	08 95       	ret

00001eb2 <__subsf3>:
    1eb2:	50 58       	subi	r21, 0x80	; 128

00001eb4 <__addsf3>:
    1eb4:	bb 27       	eor	r27, r27
    1eb6:	aa 27       	eor	r26, r26
    1eb8:	0e d0       	rcall	.+28     	; 0x1ed6 <__addsf3x>
    1eba:	1c c1       	rjmp	.+568    	; 0x20f4 <__fp_round>
    1ebc:	0d d1       	rcall	.+538    	; 0x20d8 <__fp_pscA>
    1ebe:	30 f0       	brcs	.+12     	; 0x1ecc <__addsf3+0x18>
    1ec0:	12 d1       	rcall	.+548    	; 0x20e6 <__fp_pscB>
    1ec2:	20 f0       	brcs	.+8      	; 0x1ecc <__addsf3+0x18>
    1ec4:	31 f4       	brne	.+12     	; 0x1ed2 <__addsf3+0x1e>
    1ec6:	9f 3f       	cpi	r25, 0xFF	; 255
    1ec8:	11 f4       	brne	.+4      	; 0x1ece <__addsf3+0x1a>
    1eca:	1e f4       	brtc	.+6      	; 0x1ed2 <__addsf3+0x1e>
    1ecc:	02 c1       	rjmp	.+516    	; 0x20d2 <__fp_nan>
    1ece:	0e f4       	brtc	.+2      	; 0x1ed2 <__addsf3+0x1e>
    1ed0:	e0 95       	com	r30
    1ed2:	e7 fb       	bst	r30, 7
    1ed4:	f8 c0       	rjmp	.+496    	; 0x20c6 <__fp_inf>

00001ed6 <__addsf3x>:
    1ed6:	e9 2f       	mov	r30, r25
    1ed8:	1e d1       	rcall	.+572    	; 0x2116 <__fp_split3>
    1eda:	80 f3       	brcs	.-32     	; 0x1ebc <__addsf3+0x8>
    1edc:	ba 17       	cp	r27, r26
    1ede:	62 07       	cpc	r22, r18
    1ee0:	73 07       	cpc	r23, r19
    1ee2:	84 07       	cpc	r24, r20
    1ee4:	95 07       	cpc	r25, r21
    1ee6:	18 f0       	brcs	.+6      	; 0x1eee <__addsf3x+0x18>
    1ee8:	71 f4       	brne	.+28     	; 0x1f06 <__addsf3x+0x30>
    1eea:	9e f5       	brtc	.+102    	; 0x1f52 <__addsf3x+0x7c>
    1eec:	36 c1       	rjmp	.+620    	; 0x215a <__fp_zero>
    1eee:	0e f4       	brtc	.+2      	; 0x1ef2 <__addsf3x+0x1c>
    1ef0:	e0 95       	com	r30
    1ef2:	0b 2e       	mov	r0, r27
    1ef4:	ba 2f       	mov	r27, r26
    1ef6:	a0 2d       	mov	r26, r0
    1ef8:	0b 01       	movw	r0, r22
    1efa:	b9 01       	movw	r22, r18
    1efc:	90 01       	movw	r18, r0
    1efe:	0c 01       	movw	r0, r24
    1f00:	ca 01       	movw	r24, r20
    1f02:	a0 01       	movw	r20, r0
    1f04:	11 24       	eor	r1, r1
    1f06:	ff 27       	eor	r31, r31
    1f08:	59 1b       	sub	r21, r25
    1f0a:	99 f0       	breq	.+38     	; 0x1f32 <__addsf3x+0x5c>
    1f0c:	59 3f       	cpi	r21, 0xF9	; 249
    1f0e:	50 f4       	brcc	.+20     	; 0x1f24 <__addsf3x+0x4e>
    1f10:	50 3e       	cpi	r21, 0xE0	; 224
    1f12:	68 f1       	brcs	.+90     	; 0x1f6e <__addsf3x+0x98>
    1f14:	1a 16       	cp	r1, r26
    1f16:	f0 40       	sbci	r31, 0x00	; 0
    1f18:	a2 2f       	mov	r26, r18
    1f1a:	23 2f       	mov	r18, r19
    1f1c:	34 2f       	mov	r19, r20
    1f1e:	44 27       	eor	r20, r20
    1f20:	58 5f       	subi	r21, 0xF8	; 248
    1f22:	f3 cf       	rjmp	.-26     	; 0x1f0a <__addsf3x+0x34>
    1f24:	46 95       	lsr	r20
    1f26:	37 95       	ror	r19
    1f28:	27 95       	ror	r18
    1f2a:	a7 95       	ror	r26
    1f2c:	f0 40       	sbci	r31, 0x00	; 0
    1f2e:	53 95       	inc	r21
    1f30:	c9 f7       	brne	.-14     	; 0x1f24 <__addsf3x+0x4e>
    1f32:	7e f4       	brtc	.+30     	; 0x1f52 <__addsf3x+0x7c>
    1f34:	1f 16       	cp	r1, r31
    1f36:	ba 0b       	sbc	r27, r26
    1f38:	62 0b       	sbc	r22, r18
    1f3a:	73 0b       	sbc	r23, r19
    1f3c:	84 0b       	sbc	r24, r20
    1f3e:	ba f0       	brmi	.+46     	; 0x1f6e <__addsf3x+0x98>
    1f40:	91 50       	subi	r25, 0x01	; 1
    1f42:	a1 f0       	breq	.+40     	; 0x1f6c <__addsf3x+0x96>
    1f44:	ff 0f       	add	r31, r31
    1f46:	bb 1f       	adc	r27, r27
    1f48:	66 1f       	adc	r22, r22
    1f4a:	77 1f       	adc	r23, r23
    1f4c:	88 1f       	adc	r24, r24
    1f4e:	c2 f7       	brpl	.-16     	; 0x1f40 <__addsf3x+0x6a>
    1f50:	0e c0       	rjmp	.+28     	; 0x1f6e <__addsf3x+0x98>
    1f52:	ba 0f       	add	r27, r26
    1f54:	62 1f       	adc	r22, r18
    1f56:	73 1f       	adc	r23, r19
    1f58:	84 1f       	adc	r24, r20
    1f5a:	48 f4       	brcc	.+18     	; 0x1f6e <__addsf3x+0x98>
    1f5c:	87 95       	ror	r24
    1f5e:	77 95       	ror	r23
    1f60:	67 95       	ror	r22
    1f62:	b7 95       	ror	r27
    1f64:	f7 95       	ror	r31
    1f66:	9e 3f       	cpi	r25, 0xFE	; 254
    1f68:	08 f0       	brcs	.+2      	; 0x1f6c <__addsf3x+0x96>
    1f6a:	b3 cf       	rjmp	.-154    	; 0x1ed2 <__addsf3+0x1e>
    1f6c:	93 95       	inc	r25
    1f6e:	88 0f       	add	r24, r24
    1f70:	08 f0       	brcs	.+2      	; 0x1f74 <__addsf3x+0x9e>
    1f72:	99 27       	eor	r25, r25
    1f74:	ee 0f       	add	r30, r30
    1f76:	97 95       	ror	r25
    1f78:	87 95       	ror	r24
    1f7a:	08 95       	ret

00001f7c <__divsf3>:
    1f7c:	0c d0       	rcall	.+24     	; 0x1f96 <__divsf3x>
    1f7e:	ba c0       	rjmp	.+372    	; 0x20f4 <__fp_round>
    1f80:	b2 d0       	rcall	.+356    	; 0x20e6 <__fp_pscB>
    1f82:	40 f0       	brcs	.+16     	; 0x1f94 <__divsf3+0x18>
    1f84:	a9 d0       	rcall	.+338    	; 0x20d8 <__fp_pscA>
    1f86:	30 f0       	brcs	.+12     	; 0x1f94 <__divsf3+0x18>
    1f88:	21 f4       	brne	.+8      	; 0x1f92 <__divsf3+0x16>
    1f8a:	5f 3f       	cpi	r21, 0xFF	; 255
    1f8c:	19 f0       	breq	.+6      	; 0x1f94 <__divsf3+0x18>
    1f8e:	9b c0       	rjmp	.+310    	; 0x20c6 <__fp_inf>
    1f90:	51 11       	cpse	r21, r1
    1f92:	e4 c0       	rjmp	.+456    	; 0x215c <__fp_szero>
    1f94:	9e c0       	rjmp	.+316    	; 0x20d2 <__fp_nan>

00001f96 <__divsf3x>:
    1f96:	bf d0       	rcall	.+382    	; 0x2116 <__fp_split3>
    1f98:	98 f3       	brcs	.-26     	; 0x1f80 <__divsf3+0x4>

00001f9a <__divsf3_pse>:
    1f9a:	99 23       	and	r25, r25
    1f9c:	c9 f3       	breq	.-14     	; 0x1f90 <__divsf3+0x14>
    1f9e:	55 23       	and	r21, r21
    1fa0:	b1 f3       	breq	.-20     	; 0x1f8e <__divsf3+0x12>
    1fa2:	95 1b       	sub	r25, r21
    1fa4:	55 0b       	sbc	r21, r21
    1fa6:	bb 27       	eor	r27, r27
    1fa8:	aa 27       	eor	r26, r26
    1faa:	62 17       	cp	r22, r18
    1fac:	73 07       	cpc	r23, r19
    1fae:	84 07       	cpc	r24, r20
    1fb0:	38 f0       	brcs	.+14     	; 0x1fc0 <__divsf3_pse+0x26>
    1fb2:	9f 5f       	subi	r25, 0xFF	; 255
    1fb4:	5f 4f       	sbci	r21, 0xFF	; 255
    1fb6:	22 0f       	add	r18, r18
    1fb8:	33 1f       	adc	r19, r19
    1fba:	44 1f       	adc	r20, r20
    1fbc:	aa 1f       	adc	r26, r26
    1fbe:	a9 f3       	breq	.-22     	; 0x1faa <__divsf3_pse+0x10>
    1fc0:	33 d0       	rcall	.+102    	; 0x2028 <__divsf3_pse+0x8e>
    1fc2:	0e 2e       	mov	r0, r30
    1fc4:	3a f0       	brmi	.+14     	; 0x1fd4 <__divsf3_pse+0x3a>
    1fc6:	e0 e8       	ldi	r30, 0x80	; 128
    1fc8:	30 d0       	rcall	.+96     	; 0x202a <__divsf3_pse+0x90>
    1fca:	91 50       	subi	r25, 0x01	; 1
    1fcc:	50 40       	sbci	r21, 0x00	; 0
    1fce:	e6 95       	lsr	r30
    1fd0:	00 1c       	adc	r0, r0
    1fd2:	ca f7       	brpl	.-14     	; 0x1fc6 <__divsf3_pse+0x2c>
    1fd4:	29 d0       	rcall	.+82     	; 0x2028 <__divsf3_pse+0x8e>
    1fd6:	fe 2f       	mov	r31, r30
    1fd8:	27 d0       	rcall	.+78     	; 0x2028 <__divsf3_pse+0x8e>
    1fda:	66 0f       	add	r22, r22
    1fdc:	77 1f       	adc	r23, r23
    1fde:	88 1f       	adc	r24, r24
    1fe0:	bb 1f       	adc	r27, r27
    1fe2:	26 17       	cp	r18, r22
    1fe4:	37 07       	cpc	r19, r23
    1fe6:	48 07       	cpc	r20, r24
    1fe8:	ab 07       	cpc	r26, r27
    1fea:	b0 e8       	ldi	r27, 0x80	; 128
    1fec:	09 f0       	breq	.+2      	; 0x1ff0 <__divsf3_pse+0x56>
    1fee:	bb 0b       	sbc	r27, r27
    1ff0:	80 2d       	mov	r24, r0
    1ff2:	bf 01       	movw	r22, r30
    1ff4:	ff 27       	eor	r31, r31
    1ff6:	93 58       	subi	r25, 0x83	; 131
    1ff8:	5f 4f       	sbci	r21, 0xFF	; 255
    1ffa:	2a f0       	brmi	.+10     	; 0x2006 <__divsf3_pse+0x6c>
    1ffc:	9e 3f       	cpi	r25, 0xFE	; 254
    1ffe:	51 05       	cpc	r21, r1
    2000:	68 f0       	brcs	.+26     	; 0x201c <__divsf3_pse+0x82>
    2002:	61 c0       	rjmp	.+194    	; 0x20c6 <__fp_inf>
    2004:	ab c0       	rjmp	.+342    	; 0x215c <__fp_szero>
    2006:	5f 3f       	cpi	r21, 0xFF	; 255
    2008:	ec f3       	brlt	.-6      	; 0x2004 <__divsf3_pse+0x6a>
    200a:	98 3e       	cpi	r25, 0xE8	; 232
    200c:	dc f3       	brlt	.-10     	; 0x2004 <__divsf3_pse+0x6a>
    200e:	86 95       	lsr	r24
    2010:	77 95       	ror	r23
    2012:	67 95       	ror	r22
    2014:	b7 95       	ror	r27
    2016:	f7 95       	ror	r31
    2018:	9f 5f       	subi	r25, 0xFF	; 255
    201a:	c9 f7       	brne	.-14     	; 0x200e <__divsf3_pse+0x74>
    201c:	88 0f       	add	r24, r24
    201e:	91 1d       	adc	r25, r1
    2020:	96 95       	lsr	r25
    2022:	87 95       	ror	r24
    2024:	97 f9       	bld	r25, 7
    2026:	08 95       	ret
    2028:	e1 e0       	ldi	r30, 0x01	; 1
    202a:	66 0f       	add	r22, r22
    202c:	77 1f       	adc	r23, r23
    202e:	88 1f       	adc	r24, r24
    2030:	bb 1f       	adc	r27, r27
    2032:	62 17       	cp	r22, r18
    2034:	73 07       	cpc	r23, r19
    2036:	84 07       	cpc	r24, r20
    2038:	ba 07       	cpc	r27, r26
    203a:	20 f0       	brcs	.+8      	; 0x2044 <__divsf3_pse+0xaa>
    203c:	62 1b       	sub	r22, r18
    203e:	73 0b       	sbc	r23, r19
    2040:	84 0b       	sbc	r24, r20
    2042:	ba 0b       	sbc	r27, r26
    2044:	ee 1f       	adc	r30, r30
    2046:	88 f7       	brcc	.-30     	; 0x202a <__divsf3_pse+0x90>
    2048:	e0 95       	com	r30
    204a:	08 95       	ret

0000204c <__floatunsisf>:
    204c:	e8 94       	clt
    204e:	09 c0       	rjmp	.+18     	; 0x2062 <__floatsisf+0x12>

00002050 <__floatsisf>:
    2050:	97 fb       	bst	r25, 7
    2052:	3e f4       	brtc	.+14     	; 0x2062 <__floatsisf+0x12>
    2054:	90 95       	com	r25
    2056:	80 95       	com	r24
    2058:	70 95       	com	r23
    205a:	61 95       	neg	r22
    205c:	7f 4f       	sbci	r23, 0xFF	; 255
    205e:	8f 4f       	sbci	r24, 0xFF	; 255
    2060:	9f 4f       	sbci	r25, 0xFF	; 255
    2062:	99 23       	and	r25, r25
    2064:	a9 f0       	breq	.+42     	; 0x2090 <__floatsisf+0x40>
    2066:	f9 2f       	mov	r31, r25
    2068:	96 e9       	ldi	r25, 0x96	; 150
    206a:	bb 27       	eor	r27, r27
    206c:	93 95       	inc	r25
    206e:	f6 95       	lsr	r31
    2070:	87 95       	ror	r24
    2072:	77 95       	ror	r23
    2074:	67 95       	ror	r22
    2076:	b7 95       	ror	r27
    2078:	f1 11       	cpse	r31, r1
    207a:	f8 cf       	rjmp	.-16     	; 0x206c <__floatsisf+0x1c>
    207c:	fa f4       	brpl	.+62     	; 0x20bc <__floatsisf+0x6c>
    207e:	bb 0f       	add	r27, r27
    2080:	11 f4       	brne	.+4      	; 0x2086 <__floatsisf+0x36>
    2082:	60 ff       	sbrs	r22, 0
    2084:	1b c0       	rjmp	.+54     	; 0x20bc <__floatsisf+0x6c>
    2086:	6f 5f       	subi	r22, 0xFF	; 255
    2088:	7f 4f       	sbci	r23, 0xFF	; 255
    208a:	8f 4f       	sbci	r24, 0xFF	; 255
    208c:	9f 4f       	sbci	r25, 0xFF	; 255
    208e:	16 c0       	rjmp	.+44     	; 0x20bc <__floatsisf+0x6c>
    2090:	88 23       	and	r24, r24
    2092:	11 f0       	breq	.+4      	; 0x2098 <__floatsisf+0x48>
    2094:	96 e9       	ldi	r25, 0x96	; 150
    2096:	11 c0       	rjmp	.+34     	; 0x20ba <__floatsisf+0x6a>
    2098:	77 23       	and	r23, r23
    209a:	21 f0       	breq	.+8      	; 0x20a4 <__floatsisf+0x54>
    209c:	9e e8       	ldi	r25, 0x8E	; 142
    209e:	87 2f       	mov	r24, r23
    20a0:	76 2f       	mov	r23, r22
    20a2:	05 c0       	rjmp	.+10     	; 0x20ae <__floatsisf+0x5e>
    20a4:	66 23       	and	r22, r22
    20a6:	71 f0       	breq	.+28     	; 0x20c4 <__floatsisf+0x74>
    20a8:	96 e8       	ldi	r25, 0x86	; 134
    20aa:	86 2f       	mov	r24, r22
    20ac:	70 e0       	ldi	r23, 0x00	; 0
    20ae:	60 e0       	ldi	r22, 0x00	; 0
    20b0:	2a f0       	brmi	.+10     	; 0x20bc <__floatsisf+0x6c>
    20b2:	9a 95       	dec	r25
    20b4:	66 0f       	add	r22, r22
    20b6:	77 1f       	adc	r23, r23
    20b8:	88 1f       	adc	r24, r24
    20ba:	da f7       	brpl	.-10     	; 0x20b2 <__floatsisf+0x62>
    20bc:	88 0f       	add	r24, r24
    20be:	96 95       	lsr	r25
    20c0:	87 95       	ror	r24
    20c2:	97 f9       	bld	r25, 7
    20c4:	08 95       	ret

000020c6 <__fp_inf>:
    20c6:	97 f9       	bld	r25, 7
    20c8:	9f 67       	ori	r25, 0x7F	; 127
    20ca:	80 e8       	ldi	r24, 0x80	; 128
    20cc:	70 e0       	ldi	r23, 0x00	; 0
    20ce:	60 e0       	ldi	r22, 0x00	; 0
    20d0:	08 95       	ret

000020d2 <__fp_nan>:
    20d2:	9f ef       	ldi	r25, 0xFF	; 255
    20d4:	80 ec       	ldi	r24, 0xC0	; 192
    20d6:	08 95       	ret

000020d8 <__fp_pscA>:
    20d8:	00 24       	eor	r0, r0
    20da:	0a 94       	dec	r0
    20dc:	16 16       	cp	r1, r22
    20de:	17 06       	cpc	r1, r23
    20e0:	18 06       	cpc	r1, r24
    20e2:	09 06       	cpc	r0, r25
    20e4:	08 95       	ret

000020e6 <__fp_pscB>:
    20e6:	00 24       	eor	r0, r0
    20e8:	0a 94       	dec	r0
    20ea:	12 16       	cp	r1, r18
    20ec:	13 06       	cpc	r1, r19
    20ee:	14 06       	cpc	r1, r20
    20f0:	05 06       	cpc	r0, r21
    20f2:	08 95       	ret

000020f4 <__fp_round>:
    20f4:	09 2e       	mov	r0, r25
    20f6:	03 94       	inc	r0
    20f8:	00 0c       	add	r0, r0
    20fa:	11 f4       	brne	.+4      	; 0x2100 <__fp_round+0xc>
    20fc:	88 23       	and	r24, r24
    20fe:	52 f0       	brmi	.+20     	; 0x2114 <__fp_round+0x20>
    2100:	bb 0f       	add	r27, r27
    2102:	40 f4       	brcc	.+16     	; 0x2114 <__fp_round+0x20>
    2104:	bf 2b       	or	r27, r31
    2106:	11 f4       	brne	.+4      	; 0x210c <__fp_round+0x18>
    2108:	60 ff       	sbrs	r22, 0
    210a:	04 c0       	rjmp	.+8      	; 0x2114 <__fp_round+0x20>
    210c:	6f 5f       	subi	r22, 0xFF	; 255
    210e:	7f 4f       	sbci	r23, 0xFF	; 255
    2110:	8f 4f       	sbci	r24, 0xFF	; 255
    2112:	9f 4f       	sbci	r25, 0xFF	; 255
    2114:	08 95       	ret

00002116 <__fp_split3>:
    2116:	57 fd       	sbrc	r21, 7
    2118:	90 58       	subi	r25, 0x80	; 128
    211a:	44 0f       	add	r20, r20
    211c:	55 1f       	adc	r21, r21
    211e:	59 f0       	breq	.+22     	; 0x2136 <__fp_splitA+0x10>
    2120:	5f 3f       	cpi	r21, 0xFF	; 255
    2122:	71 f0       	breq	.+28     	; 0x2140 <__fp_splitA+0x1a>
    2124:	47 95       	ror	r20

00002126 <__fp_splitA>:
    2126:	88 0f       	add	r24, r24
    2128:	97 fb       	bst	r25, 7
    212a:	99 1f       	adc	r25, r25
    212c:	61 f0       	breq	.+24     	; 0x2146 <__fp_splitA+0x20>
    212e:	9f 3f       	cpi	r25, 0xFF	; 255
    2130:	79 f0       	breq	.+30     	; 0x2150 <__fp_splitA+0x2a>
    2132:	87 95       	ror	r24
    2134:	08 95       	ret
    2136:	12 16       	cp	r1, r18
    2138:	13 06       	cpc	r1, r19
    213a:	14 06       	cpc	r1, r20
    213c:	55 1f       	adc	r21, r21
    213e:	f2 cf       	rjmp	.-28     	; 0x2124 <__fp_split3+0xe>
    2140:	46 95       	lsr	r20
    2142:	f1 df       	rcall	.-30     	; 0x2126 <__fp_splitA>
    2144:	08 c0       	rjmp	.+16     	; 0x2156 <__fp_splitA+0x30>
    2146:	16 16       	cp	r1, r22
    2148:	17 06       	cpc	r1, r23
    214a:	18 06       	cpc	r1, r24
    214c:	99 1f       	adc	r25, r25
    214e:	f1 cf       	rjmp	.-30     	; 0x2132 <__fp_splitA+0xc>
    2150:	86 95       	lsr	r24
    2152:	71 05       	cpc	r23, r1
    2154:	61 05       	cpc	r22, r1
    2156:	08 94       	sec
    2158:	08 95       	ret

0000215a <__fp_zero>:
    215a:	e8 94       	clt

0000215c <__fp_szero>:
    215c:	bb 27       	eor	r27, r27
    215e:	66 27       	eor	r22, r22
    2160:	77 27       	eor	r23, r23
    2162:	cb 01       	movw	r24, r22
    2164:	97 f9       	bld	r25, 7
    2166:	08 95       	ret

00002168 <__mulsf3>:
    2168:	0b d0       	rcall	.+22     	; 0x2180 <__mulsf3x>
    216a:	c4 cf       	rjmp	.-120    	; 0x20f4 <__fp_round>
    216c:	b5 df       	rcall	.-150    	; 0x20d8 <__fp_pscA>
    216e:	28 f0       	brcs	.+10     	; 0x217a <__mulsf3+0x12>
    2170:	ba df       	rcall	.-140    	; 0x20e6 <__fp_pscB>
    2172:	18 f0       	brcs	.+6      	; 0x217a <__mulsf3+0x12>
    2174:	95 23       	and	r25, r21
    2176:	09 f0       	breq	.+2      	; 0x217a <__mulsf3+0x12>
    2178:	a6 cf       	rjmp	.-180    	; 0x20c6 <__fp_inf>
    217a:	ab cf       	rjmp	.-170    	; 0x20d2 <__fp_nan>
    217c:	11 24       	eor	r1, r1
    217e:	ee cf       	rjmp	.-36     	; 0x215c <__fp_szero>

00002180 <__mulsf3x>:
    2180:	ca df       	rcall	.-108    	; 0x2116 <__fp_split3>
    2182:	a0 f3       	brcs	.-24     	; 0x216c <__mulsf3+0x4>

00002184 <__mulsf3_pse>:
    2184:	95 9f       	mul	r25, r21
    2186:	d1 f3       	breq	.-12     	; 0x217c <__mulsf3+0x14>
    2188:	95 0f       	add	r25, r21
    218a:	50 e0       	ldi	r21, 0x00	; 0
    218c:	55 1f       	adc	r21, r21
    218e:	62 9f       	mul	r22, r18
    2190:	f0 01       	movw	r30, r0
    2192:	72 9f       	mul	r23, r18
    2194:	bb 27       	eor	r27, r27
    2196:	f0 0d       	add	r31, r0
    2198:	b1 1d       	adc	r27, r1
    219a:	63 9f       	mul	r22, r19
    219c:	aa 27       	eor	r26, r26
    219e:	f0 0d       	add	r31, r0
    21a0:	b1 1d       	adc	r27, r1
    21a2:	aa 1f       	adc	r26, r26
    21a4:	64 9f       	mul	r22, r20
    21a6:	66 27       	eor	r22, r22
    21a8:	b0 0d       	add	r27, r0
    21aa:	a1 1d       	adc	r26, r1
    21ac:	66 1f       	adc	r22, r22
    21ae:	82 9f       	mul	r24, r18
    21b0:	22 27       	eor	r18, r18
    21b2:	b0 0d       	add	r27, r0
    21b4:	a1 1d       	adc	r26, r1
    21b6:	62 1f       	adc	r22, r18
    21b8:	73 9f       	mul	r23, r19
    21ba:	b0 0d       	add	r27, r0
    21bc:	a1 1d       	adc	r26, r1
    21be:	62 1f       	adc	r22, r18
    21c0:	83 9f       	mul	r24, r19
    21c2:	a0 0d       	add	r26, r0
    21c4:	61 1d       	adc	r22, r1
    21c6:	22 1f       	adc	r18, r18
    21c8:	74 9f       	mul	r23, r20
    21ca:	33 27       	eor	r19, r19
    21cc:	a0 0d       	add	r26, r0
    21ce:	61 1d       	adc	r22, r1
    21d0:	23 1f       	adc	r18, r19
    21d2:	84 9f       	mul	r24, r20
    21d4:	60 0d       	add	r22, r0
    21d6:	21 1d       	adc	r18, r1
    21d8:	82 2f       	mov	r24, r18
    21da:	76 2f       	mov	r23, r22
    21dc:	6a 2f       	mov	r22, r26
    21de:	11 24       	eor	r1, r1
    21e0:	9f 57       	subi	r25, 0x7F	; 127
    21e2:	50 40       	sbci	r21, 0x00	; 0
    21e4:	8a f0       	brmi	.+34     	; 0x2208 <__mulsf3_pse+0x84>
    21e6:	e1 f0       	breq	.+56     	; 0x2220 <__mulsf3_pse+0x9c>
    21e8:	88 23       	and	r24, r24
    21ea:	4a f0       	brmi	.+18     	; 0x21fe <__mulsf3_pse+0x7a>
    21ec:	ee 0f       	add	r30, r30
    21ee:	ff 1f       	adc	r31, r31
    21f0:	bb 1f       	adc	r27, r27
    21f2:	66 1f       	adc	r22, r22
    21f4:	77 1f       	adc	r23, r23
    21f6:	88 1f       	adc	r24, r24
    21f8:	91 50       	subi	r25, 0x01	; 1
    21fa:	50 40       	sbci	r21, 0x00	; 0
    21fc:	a9 f7       	brne	.-22     	; 0x21e8 <__mulsf3_pse+0x64>
    21fe:	9e 3f       	cpi	r25, 0xFE	; 254
    2200:	51 05       	cpc	r21, r1
    2202:	70 f0       	brcs	.+28     	; 0x2220 <__mulsf3_pse+0x9c>
    2204:	60 cf       	rjmp	.-320    	; 0x20c6 <__fp_inf>
    2206:	aa cf       	rjmp	.-172    	; 0x215c <__fp_szero>
    2208:	5f 3f       	cpi	r21, 0xFF	; 255
    220a:	ec f3       	brlt	.-6      	; 0x2206 <__mulsf3_pse+0x82>
    220c:	98 3e       	cpi	r25, 0xE8	; 232
    220e:	dc f3       	brlt	.-10     	; 0x2206 <__mulsf3_pse+0x82>
    2210:	86 95       	lsr	r24
    2212:	77 95       	ror	r23
    2214:	67 95       	ror	r22
    2216:	b7 95       	ror	r27
    2218:	f7 95       	ror	r31
    221a:	e7 95       	ror	r30
    221c:	9f 5f       	subi	r25, 0xFF	; 255
    221e:	c1 f7       	brne	.-16     	; 0x2210 <__mulsf3_pse+0x8c>
    2220:	fe 2b       	or	r31, r30
    2222:	88 0f       	add	r24, r24
    2224:	91 1d       	adc	r25, r1
    2226:	96 95       	lsr	r25
    2228:	87 95       	ror	r24
    222a:	97 f9       	bld	r25, 7
    222c:	08 95       	ret

0000222e <__udivmodqi4>:
    222e:	99 1b       	sub	r25, r25
    2230:	79 e0       	ldi	r23, 0x09	; 9
    2232:	04 c0       	rjmp	.+8      	; 0x223c <__udivmodqi4_ep>

00002234 <__udivmodqi4_loop>:
    2234:	99 1f       	adc	r25, r25
    2236:	96 17       	cp	r25, r22
    2238:	08 f0       	brcs	.+2      	; 0x223c <__udivmodqi4_ep>
    223a:	96 1b       	sub	r25, r22

0000223c <__udivmodqi4_ep>:
    223c:	88 1f       	adc	r24, r24
    223e:	7a 95       	dec	r23
    2240:	c9 f7       	brne	.-14     	; 0x2234 <__udivmodqi4_loop>
    2242:	80 95       	com	r24
    2244:	08 95       	ret

00002246 <__divmodhi4>:
    2246:	97 fb       	bst	r25, 7
    2248:	09 2e       	mov	r0, r25
    224a:	07 26       	eor	r0, r23
    224c:	0a d0       	rcall	.+20     	; 0x2262 <__divmodhi4_neg1>
    224e:	77 fd       	sbrc	r23, 7
    2250:	04 d0       	rcall	.+8      	; 0x225a <__divmodhi4_neg2>
    2252:	0c d0       	rcall	.+24     	; 0x226c <__udivmodhi4>
    2254:	06 d0       	rcall	.+12     	; 0x2262 <__divmodhi4_neg1>
    2256:	00 20       	and	r0, r0
    2258:	1a f4       	brpl	.+6      	; 0x2260 <__divmodhi4_exit>

0000225a <__divmodhi4_neg2>:
    225a:	70 95       	com	r23
    225c:	61 95       	neg	r22
    225e:	7f 4f       	sbci	r23, 0xFF	; 255

00002260 <__divmodhi4_exit>:
    2260:	08 95       	ret

00002262 <__divmodhi4_neg1>:
    2262:	f6 f7       	brtc	.-4      	; 0x2260 <__divmodhi4_exit>
    2264:	90 95       	com	r25
    2266:	81 95       	neg	r24
    2268:	9f 4f       	sbci	r25, 0xFF	; 255
    226a:	08 95       	ret

0000226c <__udivmodhi4>:
    226c:	aa 1b       	sub	r26, r26
    226e:	bb 1b       	sub	r27, r27
    2270:	51 e1       	ldi	r21, 0x11	; 17
    2272:	07 c0       	rjmp	.+14     	; 0x2282 <__udivmodhi4_ep>

00002274 <__udivmodhi4_loop>:
    2274:	aa 1f       	adc	r26, r26
    2276:	bb 1f       	adc	r27, r27
    2278:	a6 17       	cp	r26, r22
    227a:	b7 07       	cpc	r27, r23
    227c:	10 f0       	brcs	.+4      	; 0x2282 <__udivmodhi4_ep>
    227e:	a6 1b       	sub	r26, r22
    2280:	b7 0b       	sbc	r27, r23

00002282 <__udivmodhi4_ep>:
    2282:	88 1f       	adc	r24, r24
    2284:	99 1f       	adc	r25, r25
    2286:	5a 95       	dec	r21
    2288:	a9 f7       	brne	.-22     	; 0x2274 <__udivmodhi4_loop>
    228a:	80 95       	com	r24
    228c:	90 95       	com	r25
    228e:	bc 01       	movw	r22, r24
    2290:	cd 01       	movw	r24, r26
    2292:	08 95       	ret

00002294 <__ftoa_engine>:
    2294:	28 30       	cpi	r18, 0x08	; 8
    2296:	08 f0       	brcs	.+2      	; 0x229a <__ftoa_engine+0x6>
    2298:	27 e0       	ldi	r18, 0x07	; 7
    229a:	33 27       	eor	r19, r19
    229c:	da 01       	movw	r26, r20
    229e:	99 0f       	add	r25, r25
    22a0:	31 1d       	adc	r19, r1
    22a2:	87 fd       	sbrc	r24, 7
    22a4:	91 60       	ori	r25, 0x01	; 1
    22a6:	00 96       	adiw	r24, 0x00	; 0
    22a8:	61 05       	cpc	r22, r1
    22aa:	71 05       	cpc	r23, r1
    22ac:	39 f4       	brne	.+14     	; 0x22bc <__ftoa_engine+0x28>
    22ae:	32 60       	ori	r19, 0x02	; 2
    22b0:	2e 5f       	subi	r18, 0xFE	; 254
    22b2:	3d 93       	st	X+, r19
    22b4:	30 e3       	ldi	r19, 0x30	; 48
    22b6:	2a 95       	dec	r18
    22b8:	e1 f7       	brne	.-8      	; 0x22b2 <__ftoa_engine+0x1e>
    22ba:	08 95       	ret
    22bc:	9f 3f       	cpi	r25, 0xFF	; 255
    22be:	30 f0       	brcs	.+12     	; 0x22cc <__ftoa_engine+0x38>
    22c0:	80 38       	cpi	r24, 0x80	; 128
    22c2:	71 05       	cpc	r23, r1
    22c4:	61 05       	cpc	r22, r1
    22c6:	09 f0       	breq	.+2      	; 0x22ca <__ftoa_engine+0x36>
    22c8:	3c 5f       	subi	r19, 0xFC	; 252
    22ca:	3c 5f       	subi	r19, 0xFC	; 252
    22cc:	3d 93       	st	X+, r19
    22ce:	91 30       	cpi	r25, 0x01	; 1
    22d0:	08 f0       	brcs	.+2      	; 0x22d4 <__ftoa_engine+0x40>
    22d2:	80 68       	ori	r24, 0x80	; 128
    22d4:	91 1d       	adc	r25, r1
    22d6:	df 93       	push	r29
    22d8:	cf 93       	push	r28
    22da:	1f 93       	push	r17
    22dc:	0f 93       	push	r16
    22de:	ff 92       	push	r15
    22e0:	ef 92       	push	r14
    22e2:	19 2f       	mov	r17, r25
    22e4:	98 7f       	andi	r25, 0xF8	; 248
    22e6:	96 95       	lsr	r25
    22e8:	e9 2f       	mov	r30, r25
    22ea:	96 95       	lsr	r25
    22ec:	96 95       	lsr	r25
    22ee:	e9 0f       	add	r30, r25
    22f0:	ff 27       	eor	r31, r31
    22f2:	e2 51       	subi	r30, 0x12	; 18
    22f4:	ff 4f       	sbci	r31, 0xFF	; 255
    22f6:	99 27       	eor	r25, r25
    22f8:	33 27       	eor	r19, r19
    22fa:	ee 24       	eor	r14, r14
    22fc:	ff 24       	eor	r15, r15
    22fe:	a7 01       	movw	r20, r14
    2300:	e7 01       	movw	r28, r14
    2302:	05 90       	lpm	r0, Z+
    2304:	08 94       	sec
    2306:	07 94       	ror	r0
    2308:	28 f4       	brcc	.+10     	; 0x2314 <__ftoa_engine+0x80>
    230a:	36 0f       	add	r19, r22
    230c:	e7 1e       	adc	r14, r23
    230e:	f8 1e       	adc	r15, r24
    2310:	49 1f       	adc	r20, r25
    2312:	51 1d       	adc	r21, r1
    2314:	66 0f       	add	r22, r22
    2316:	77 1f       	adc	r23, r23
    2318:	88 1f       	adc	r24, r24
    231a:	99 1f       	adc	r25, r25
    231c:	06 94       	lsr	r0
    231e:	a1 f7       	brne	.-24     	; 0x2308 <__ftoa_engine+0x74>
    2320:	05 90       	lpm	r0, Z+
    2322:	07 94       	ror	r0
    2324:	28 f4       	brcc	.+10     	; 0x2330 <__ftoa_engine+0x9c>
    2326:	e7 0e       	add	r14, r23
    2328:	f8 1e       	adc	r15, r24
    232a:	49 1f       	adc	r20, r25
    232c:	56 1f       	adc	r21, r22
    232e:	c1 1d       	adc	r28, r1
    2330:	77 0f       	add	r23, r23
    2332:	88 1f       	adc	r24, r24
    2334:	99 1f       	adc	r25, r25
    2336:	66 1f       	adc	r22, r22
    2338:	06 94       	lsr	r0
    233a:	a1 f7       	brne	.-24     	; 0x2324 <__ftoa_engine+0x90>
    233c:	05 90       	lpm	r0, Z+
    233e:	07 94       	ror	r0
    2340:	28 f4       	brcc	.+10     	; 0x234c <__ftoa_engine+0xb8>
    2342:	f8 0e       	add	r15, r24
    2344:	49 1f       	adc	r20, r25
    2346:	56 1f       	adc	r21, r22
    2348:	c7 1f       	adc	r28, r23
    234a:	d1 1d       	adc	r29, r1
    234c:	88 0f       	add	r24, r24
    234e:	99 1f       	adc	r25, r25
    2350:	66 1f       	adc	r22, r22
    2352:	77 1f       	adc	r23, r23
    2354:	06 94       	lsr	r0
    2356:	a1 f7       	brne	.-24     	; 0x2340 <__ftoa_engine+0xac>
    2358:	05 90       	lpm	r0, Z+
    235a:	07 94       	ror	r0
    235c:	20 f4       	brcc	.+8      	; 0x2366 <__ftoa_engine+0xd2>
    235e:	49 0f       	add	r20, r25
    2360:	56 1f       	adc	r21, r22
    2362:	c7 1f       	adc	r28, r23
    2364:	d8 1f       	adc	r29, r24
    2366:	99 0f       	add	r25, r25
    2368:	66 1f       	adc	r22, r22
    236a:	77 1f       	adc	r23, r23
    236c:	88 1f       	adc	r24, r24
    236e:	06 94       	lsr	r0
    2370:	a9 f7       	brne	.-22     	; 0x235c <__ftoa_engine+0xc8>
    2372:	84 91       	lpm	r24, Z+
    2374:	10 95       	com	r17
    2376:	17 70       	andi	r17, 0x07	; 7
    2378:	41 f0       	breq	.+16     	; 0x238a <__ftoa_engine+0xf6>
    237a:	d6 95       	lsr	r29
    237c:	c7 95       	ror	r28
    237e:	57 95       	ror	r21
    2380:	47 95       	ror	r20
    2382:	f7 94       	ror	r15
    2384:	e7 94       	ror	r14
    2386:	1a 95       	dec	r17
    2388:	c1 f7       	brne	.-16     	; 0x237a <__ftoa_engine+0xe6>
    238a:	e4 e9       	ldi	r30, 0x94	; 148
    238c:	f0 e0       	ldi	r31, 0x00	; 0
    238e:	68 94       	set
    2390:	15 90       	lpm	r1, Z+
    2392:	15 91       	lpm	r17, Z+
    2394:	35 91       	lpm	r19, Z+
    2396:	65 91       	lpm	r22, Z+
    2398:	95 91       	lpm	r25, Z+
    239a:	05 90       	lpm	r0, Z+
    239c:	7f e2       	ldi	r23, 0x2F	; 47
    239e:	73 95       	inc	r23
    23a0:	e1 18       	sub	r14, r1
    23a2:	f1 0a       	sbc	r15, r17
    23a4:	43 0b       	sbc	r20, r19
    23a6:	56 0b       	sbc	r21, r22
    23a8:	c9 0b       	sbc	r28, r25
    23aa:	d0 09       	sbc	r29, r0
    23ac:	c0 f7       	brcc	.-16     	; 0x239e <__ftoa_engine+0x10a>
    23ae:	e1 0c       	add	r14, r1
    23b0:	f1 1e       	adc	r15, r17
    23b2:	43 1f       	adc	r20, r19
    23b4:	56 1f       	adc	r21, r22
    23b6:	c9 1f       	adc	r28, r25
    23b8:	d0 1d       	adc	r29, r0
    23ba:	7e f4       	brtc	.+30     	; 0x23da <__ftoa_engine+0x146>
    23bc:	70 33       	cpi	r23, 0x30	; 48
    23be:	11 f4       	brne	.+4      	; 0x23c4 <__ftoa_engine+0x130>
    23c0:	8a 95       	dec	r24
    23c2:	e6 cf       	rjmp	.-52     	; 0x2390 <__ftoa_engine+0xfc>
    23c4:	e8 94       	clt
    23c6:	01 50       	subi	r16, 0x01	; 1
    23c8:	30 f0       	brcs	.+12     	; 0x23d6 <__ftoa_engine+0x142>
    23ca:	08 0f       	add	r16, r24
    23cc:	0a f4       	brpl	.+2      	; 0x23d0 <__ftoa_engine+0x13c>
    23ce:	00 27       	eor	r16, r16
    23d0:	02 17       	cp	r16, r18
    23d2:	08 f4       	brcc	.+2      	; 0x23d6 <__ftoa_engine+0x142>
    23d4:	20 2f       	mov	r18, r16
    23d6:	23 95       	inc	r18
    23d8:	02 2f       	mov	r16, r18
    23da:	7a 33       	cpi	r23, 0x3A	; 58
    23dc:	28 f0       	brcs	.+10     	; 0x23e8 <__ftoa_engine+0x154>
    23de:	79 e3       	ldi	r23, 0x39	; 57
    23e0:	7d 93       	st	X+, r23
    23e2:	2a 95       	dec	r18
    23e4:	e9 f7       	brne	.-6      	; 0x23e0 <__ftoa_engine+0x14c>
    23e6:	10 c0       	rjmp	.+32     	; 0x2408 <__ftoa_engine+0x174>
    23e8:	7d 93       	st	X+, r23
    23ea:	2a 95       	dec	r18
    23ec:	89 f6       	brne	.-94     	; 0x2390 <__ftoa_engine+0xfc>
    23ee:	06 94       	lsr	r0
    23f0:	97 95       	ror	r25
    23f2:	67 95       	ror	r22
    23f4:	37 95       	ror	r19
    23f6:	17 95       	ror	r17
    23f8:	17 94       	ror	r1
    23fa:	e1 18       	sub	r14, r1
    23fc:	f1 0a       	sbc	r15, r17
    23fe:	43 0b       	sbc	r20, r19
    2400:	56 0b       	sbc	r21, r22
    2402:	c9 0b       	sbc	r28, r25
    2404:	d0 09       	sbc	r29, r0
    2406:	98 f0       	brcs	.+38     	; 0x242e <__ftoa_engine+0x19a>
    2408:	23 95       	inc	r18
    240a:	7e 91       	ld	r23, -X
    240c:	73 95       	inc	r23
    240e:	7a 33       	cpi	r23, 0x3A	; 58
    2410:	08 f0       	brcs	.+2      	; 0x2414 <__ftoa_engine+0x180>
    2412:	70 e3       	ldi	r23, 0x30	; 48
    2414:	7c 93       	st	X, r23
    2416:	20 13       	cpse	r18, r16
    2418:	b8 f7       	brcc	.-18     	; 0x2408 <__ftoa_engine+0x174>
    241a:	7e 91       	ld	r23, -X
    241c:	70 61       	ori	r23, 0x10	; 16
    241e:	7d 93       	st	X+, r23
    2420:	30 f0       	brcs	.+12     	; 0x242e <__ftoa_engine+0x19a>
    2422:	83 95       	inc	r24
    2424:	71 e3       	ldi	r23, 0x31	; 49
    2426:	7d 93       	st	X+, r23
    2428:	70 e3       	ldi	r23, 0x30	; 48
    242a:	2a 95       	dec	r18
    242c:	e1 f7       	brne	.-8      	; 0x2426 <__ftoa_engine+0x192>
    242e:	11 24       	eor	r1, r1
    2430:	ef 90       	pop	r14
    2432:	ff 90       	pop	r15
    2434:	0f 91       	pop	r16
    2436:	1f 91       	pop	r17
    2438:	cf 91       	pop	r28
    243a:	df 91       	pop	r29
    243c:	99 27       	eor	r25, r25
    243e:	87 fd       	sbrc	r24, 7
    2440:	90 95       	com	r25
    2442:	08 95       	ret

00002444 <strnlen_P>:
    2444:	fc 01       	movw	r30, r24
    2446:	05 90       	lpm	r0, Z+
    2448:	61 50       	subi	r22, 0x01	; 1
    244a:	70 40       	sbci	r23, 0x00	; 0
    244c:	01 10       	cpse	r0, r1
    244e:	d8 f7       	brcc	.-10     	; 0x2446 <strnlen_P+0x2>
    2450:	80 95       	com	r24
    2452:	90 95       	com	r25
    2454:	8e 0f       	add	r24, r30
    2456:	9f 1f       	adc	r25, r31
    2458:	08 95       	ret

0000245a <strnlen>:
    245a:	fc 01       	movw	r30, r24
    245c:	61 50       	subi	r22, 0x01	; 1
    245e:	70 40       	sbci	r23, 0x00	; 0
    2460:	01 90       	ld	r0, Z+
    2462:	01 10       	cpse	r0, r1
    2464:	d8 f7       	brcc	.-10     	; 0x245c <strnlen+0x2>
    2466:	80 95       	com	r24
    2468:	90 95       	com	r25
    246a:	8e 0f       	add	r24, r30
    246c:	9f 1f       	adc	r25, r31
    246e:	08 95       	ret

00002470 <fputc>:
    2470:	0f 93       	push	r16
    2472:	1f 93       	push	r17
    2474:	cf 93       	push	r28
    2476:	df 93       	push	r29
    2478:	8c 01       	movw	r16, r24
    247a:	eb 01       	movw	r28, r22
    247c:	8b 81       	ldd	r24, Y+3	; 0x03
    247e:	81 ff       	sbrs	r24, 1
    2480:	1b c0       	rjmp	.+54     	; 0x24b8 <fputc+0x48>
    2482:	82 ff       	sbrs	r24, 2
    2484:	0d c0       	rjmp	.+26     	; 0x24a0 <fputc+0x30>
    2486:	2e 81       	ldd	r18, Y+6	; 0x06
    2488:	3f 81       	ldd	r19, Y+7	; 0x07
    248a:	8c 81       	ldd	r24, Y+4	; 0x04
    248c:	9d 81       	ldd	r25, Y+5	; 0x05
    248e:	28 17       	cp	r18, r24
    2490:	39 07       	cpc	r19, r25
    2492:	64 f4       	brge	.+24     	; 0x24ac <fputc+0x3c>
    2494:	e8 81       	ld	r30, Y
    2496:	f9 81       	ldd	r31, Y+1	; 0x01
    2498:	01 93       	st	Z+, r16
    249a:	f9 83       	std	Y+1, r31	; 0x01
    249c:	e8 83       	st	Y, r30
    249e:	06 c0       	rjmp	.+12     	; 0x24ac <fputc+0x3c>
    24a0:	e8 85       	ldd	r30, Y+8	; 0x08
    24a2:	f9 85       	ldd	r31, Y+9	; 0x09
    24a4:	80 2f       	mov	r24, r16
    24a6:	09 95       	icall
    24a8:	00 97       	sbiw	r24, 0x00	; 0
    24aa:	31 f4       	brne	.+12     	; 0x24b8 <fputc+0x48>
    24ac:	8e 81       	ldd	r24, Y+6	; 0x06
    24ae:	9f 81       	ldd	r25, Y+7	; 0x07
    24b0:	01 96       	adiw	r24, 0x01	; 1
    24b2:	9f 83       	std	Y+7, r25	; 0x07
    24b4:	8e 83       	std	Y+6, r24	; 0x06
    24b6:	02 c0       	rjmp	.+4      	; 0x24bc <fputc+0x4c>
    24b8:	0f ef       	ldi	r16, 0xFF	; 255
    24ba:	1f ef       	ldi	r17, 0xFF	; 255
    24bc:	c8 01       	movw	r24, r16
    24be:	df 91       	pop	r29
    24c0:	cf 91       	pop	r28
    24c2:	1f 91       	pop	r17
    24c4:	0f 91       	pop	r16
    24c6:	08 95       	ret

000024c8 <sprintf>:
    24c8:	0f 93       	push	r16
    24ca:	1f 93       	push	r17
    24cc:	df 93       	push	r29
    24ce:	cf 93       	push	r28
    24d0:	cd b7       	in	r28, 0x3d	; 61
    24d2:	de b7       	in	r29, 0x3e	; 62
    24d4:	2e 97       	sbiw	r28, 0x0e	; 14
    24d6:	0f b6       	in	r0, 0x3f	; 63
    24d8:	f8 94       	cli
    24da:	de bf       	out	0x3e, r29	; 62
    24dc:	0f be       	out	0x3f, r0	; 63
    24de:	cd bf       	out	0x3d, r28	; 61
    24e0:	0d 89       	ldd	r16, Y+21	; 0x15
    24e2:	1e 89       	ldd	r17, Y+22	; 0x16
    24e4:	86 e0       	ldi	r24, 0x06	; 6
    24e6:	8c 83       	std	Y+4, r24	; 0x04
    24e8:	1a 83       	std	Y+2, r17	; 0x02
    24ea:	09 83       	std	Y+1, r16	; 0x01
    24ec:	8f ef       	ldi	r24, 0xFF	; 255
    24ee:	9f e7       	ldi	r25, 0x7F	; 127
    24f0:	9e 83       	std	Y+6, r25	; 0x06
    24f2:	8d 83       	std	Y+5, r24	; 0x05
    24f4:	9e 01       	movw	r18, r28
    24f6:	27 5e       	subi	r18, 0xE7	; 231
    24f8:	3f 4f       	sbci	r19, 0xFF	; 255
    24fa:	ce 01       	movw	r24, r28
    24fc:	01 96       	adiw	r24, 0x01	; 1
    24fe:	6f 89       	ldd	r22, Y+23	; 0x17
    2500:	78 8d       	ldd	r23, Y+24	; 0x18
    2502:	a9 01       	movw	r20, r18
    2504:	0e 94 aa 0b 	call	0x1754	; 0x1754 <vfprintf>
    2508:	ef 81       	ldd	r30, Y+7	; 0x07
    250a:	f8 85       	ldd	r31, Y+8	; 0x08
    250c:	e0 0f       	add	r30, r16
    250e:	f1 1f       	adc	r31, r17
    2510:	10 82       	st	Z, r1
    2512:	2e 96       	adiw	r28, 0x0e	; 14
    2514:	0f b6       	in	r0, 0x3f	; 63
    2516:	f8 94       	cli
    2518:	de bf       	out	0x3e, r29	; 62
    251a:	0f be       	out	0x3f, r0	; 63
    251c:	cd bf       	out	0x3d, r28	; 61
    251e:	cf 91       	pop	r28
    2520:	df 91       	pop	r29
    2522:	1f 91       	pop	r17
    2524:	0f 91       	pop	r16
    2526:	08 95       	ret

00002528 <__ultoa_invert>:
    2528:	fa 01       	movw	r30, r20
    252a:	aa 27       	eor	r26, r26
    252c:	28 30       	cpi	r18, 0x08	; 8
    252e:	51 f1       	breq	.+84     	; 0x2584 <__ultoa_invert+0x5c>
    2530:	20 31       	cpi	r18, 0x10	; 16
    2532:	81 f1       	breq	.+96     	; 0x2594 <__ultoa_invert+0x6c>
    2534:	e8 94       	clt
    2536:	6f 93       	push	r22
    2538:	6e 7f       	andi	r22, 0xFE	; 254
    253a:	6e 5f       	subi	r22, 0xFE	; 254
    253c:	7f 4f       	sbci	r23, 0xFF	; 255
    253e:	8f 4f       	sbci	r24, 0xFF	; 255
    2540:	9f 4f       	sbci	r25, 0xFF	; 255
    2542:	af 4f       	sbci	r26, 0xFF	; 255
    2544:	b1 e0       	ldi	r27, 0x01	; 1
    2546:	3e d0       	rcall	.+124    	; 0x25c4 <__ultoa_invert+0x9c>
    2548:	b4 e0       	ldi	r27, 0x04	; 4
    254a:	3c d0       	rcall	.+120    	; 0x25c4 <__ultoa_invert+0x9c>
    254c:	67 0f       	add	r22, r23
    254e:	78 1f       	adc	r23, r24
    2550:	89 1f       	adc	r24, r25
    2552:	9a 1f       	adc	r25, r26
    2554:	a1 1d       	adc	r26, r1
    2556:	68 0f       	add	r22, r24
    2558:	79 1f       	adc	r23, r25
    255a:	8a 1f       	adc	r24, r26
    255c:	91 1d       	adc	r25, r1
    255e:	a1 1d       	adc	r26, r1
    2560:	6a 0f       	add	r22, r26
    2562:	71 1d       	adc	r23, r1
    2564:	81 1d       	adc	r24, r1
    2566:	91 1d       	adc	r25, r1
    2568:	a1 1d       	adc	r26, r1
    256a:	20 d0       	rcall	.+64     	; 0x25ac <__ultoa_invert+0x84>
    256c:	09 f4       	brne	.+2      	; 0x2570 <__ultoa_invert+0x48>
    256e:	68 94       	set
    2570:	3f 91       	pop	r19
    2572:	2a e0       	ldi	r18, 0x0A	; 10
    2574:	26 9f       	mul	r18, r22
    2576:	11 24       	eor	r1, r1
    2578:	30 19       	sub	r19, r0
    257a:	30 5d       	subi	r19, 0xD0	; 208
    257c:	31 93       	st	Z+, r19
    257e:	de f6       	brtc	.-74     	; 0x2536 <__ultoa_invert+0xe>
    2580:	cf 01       	movw	r24, r30
    2582:	08 95       	ret
    2584:	46 2f       	mov	r20, r22
    2586:	47 70       	andi	r20, 0x07	; 7
    2588:	40 5d       	subi	r20, 0xD0	; 208
    258a:	41 93       	st	Z+, r20
    258c:	b3 e0       	ldi	r27, 0x03	; 3
    258e:	0f d0       	rcall	.+30     	; 0x25ae <__ultoa_invert+0x86>
    2590:	c9 f7       	brne	.-14     	; 0x2584 <__ultoa_invert+0x5c>
    2592:	f6 cf       	rjmp	.-20     	; 0x2580 <__ultoa_invert+0x58>
    2594:	46 2f       	mov	r20, r22
    2596:	4f 70       	andi	r20, 0x0F	; 15
    2598:	40 5d       	subi	r20, 0xD0	; 208
    259a:	4a 33       	cpi	r20, 0x3A	; 58
    259c:	18 f0       	brcs	.+6      	; 0x25a4 <__ultoa_invert+0x7c>
    259e:	49 5d       	subi	r20, 0xD9	; 217
    25a0:	31 fd       	sbrc	r19, 1
    25a2:	40 52       	subi	r20, 0x20	; 32
    25a4:	41 93       	st	Z+, r20
    25a6:	02 d0       	rcall	.+4      	; 0x25ac <__ultoa_invert+0x84>
    25a8:	a9 f7       	brne	.-22     	; 0x2594 <__ultoa_invert+0x6c>
    25aa:	ea cf       	rjmp	.-44     	; 0x2580 <__ultoa_invert+0x58>
    25ac:	b4 e0       	ldi	r27, 0x04	; 4
    25ae:	a6 95       	lsr	r26
    25b0:	97 95       	ror	r25
    25b2:	87 95       	ror	r24
    25b4:	77 95       	ror	r23
    25b6:	67 95       	ror	r22
    25b8:	ba 95       	dec	r27
    25ba:	c9 f7       	brne	.-14     	; 0x25ae <__ultoa_invert+0x86>
    25bc:	00 97       	sbiw	r24, 0x00	; 0
    25be:	61 05       	cpc	r22, r1
    25c0:	71 05       	cpc	r23, r1
    25c2:	08 95       	ret
    25c4:	9b 01       	movw	r18, r22
    25c6:	ac 01       	movw	r20, r24
    25c8:	0a 2e       	mov	r0, r26
    25ca:	06 94       	lsr	r0
    25cc:	57 95       	ror	r21
    25ce:	47 95       	ror	r20
    25d0:	37 95       	ror	r19
    25d2:	27 95       	ror	r18
    25d4:	ba 95       	dec	r27
    25d6:	c9 f7       	brne	.-14     	; 0x25ca <__ultoa_invert+0xa2>
    25d8:	62 0f       	add	r22, r18
    25da:	73 1f       	adc	r23, r19
    25dc:	84 1f       	adc	r24, r20
    25de:	95 1f       	adc	r25, r21
    25e0:	a0 1d       	adc	r26, r0
    25e2:	08 95       	ret

000025e4 <_exit>:
    25e4:	f8 94       	cli

000025e6 <__stop_program>:
    25e6:	ff cf       	rjmp	.-2      	; 0x25e6 <__stop_program>
